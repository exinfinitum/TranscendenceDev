<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- PLAYER SOVEREIGN ==========================================================

	GLOBAL DATA
	
	missionRewards:		Total amount earned in missions (in default currency)
	
	tutorialBought:		True if the player has bought something.
	tutorialInstalled:	True if the player has installed a device.
	tutorialLooted:		True if the player has looted something.
	tutorialRepaired:	True if the player has repaired his ship's armor
	tutorialSold:		True if the player has sold anything.
	
-->

	<Sovereign UNID="&svPlayer;"
			name="independent"
			alignment="constructive chaos"
			>
		<Events>
			<GetGlobalAchievements>
				(block (
					(missionRewards (typGetData &svPlayer; 'missionRewards))
					)
					(append

						;	Current player money
						(map (typFind "$") 'removeNil theEcon
							(if (gr (objGetBalance gPlayerShip theEcon) 0)
								(list
									(typTranslate &svPlayer; 'achievement.playerMoney {
										currency: (fmtCurrency theEcon True)
										})
									(objGetBalance gPlayerShip theEcon)
									)
								)
							)
					
						;	Money earned on missions
						(if missionRewards
							(list (list
								(typTranslate &svPlayer; 'achievement.missionMoney)
								(fmtCurrency (unvGetProperty 'defaultCurrency) missionRewards)
								(typTranslate &unidCommonText; 'missionsAndActivities)
								))
							)
						)
					)
			</GetGlobalAchievements>

			<OnGlobalUniverseLoad>
				; If we're loading because of a resurrect, repair the ship

				(if (eq aReason 'resurrect)
					(block Nil
						; Put the player in a safe place and repair the ship
						(rpgRestorePlayer)

						; Tell the player about the resurrection
						(plyMessage gPlayer "You wake up somewhere else in an identical body...")
						)
					)
			</OnGlobalUniverseLoad>
		</Events>
		<Language>
			<Text id="achievement.playerMoney">Money (%currency%)</Text>
			<Text id="achievement.missionMoney">Money earned on missions</Text>
		</Language>
	</Sovereign>

</TranscendenceModule>
