<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<MissionType unid="&baDestroyStationMission;"
			inherit=			"&unidCommonText;"
			expireTime=			"5400"
			>
		<Properties>
			<!-- reward
			
				Override this to compute a reward when the mission is created.
				Nil means no reward. In general this should be a Variant 
				property (that is, a value initialized when the mission is
				created).

				-->
			<Definition id="reward"></Definition>

			<!-- rewardCurrency
			
				This is the currency in which the reward is given.

				-->
			<Constant id="rewardCurrency">(unv@ 'defaultCurrency)</Constant>

			<!-- targetDesc

				This is a description of the station to destroy.

				-->
			<Constant id="targetDesc">
				{
					criteria: "TAE +populated; -questTarget; -uncharted;"
					}
			</Constant>

			<!-- These properties are internal and should not be overridden. -->

			<Data id="targetID"></Data>
		</Properties>

		<Events>
			<!-- OnTargetChosen

				Subclasses may implement this event to react once a target has
				been chosen. For example, they can set the reward value.

				gData:

					targetObj: The target chosen.
			
			-->

			<OnTargetChosen>
			</OnTargetChosen>

			<CanCreate>
				(switch
					;	NOTE: We cannot check to see if the target station 
					;	exists because we have not yet created the mission and
					;	thus the targetDesc property is not set.

					True
					)
			</CanCreate>

			<OnCreate>
				(block (
					(targetDesc (msn@ gSource 'targetDesc))

					;	Get a target list (filtered by targets that can actually 
					;	be destroyed by the player).

					(targetList 
						(filter	(sysFindObject aOwnerObj (@ targetDesc 'criteria)) theObj
							(objCanDestroyTarget gPlayerShip theObj)
							)
						)

					(targetObj (seededRandom (objGetDestiny aOwnerObj) targetList))
					)
					(switch
						;	If no target, we can't create the mission.

						(not targetObj)
							(msnDestroy gSource)

						;	Create the mission

						(block ()
							(msnSet@ gSource 'targetID (objGetID targetObj))
							(msnRegisterForEvents gSource targetObj)

							;	Let our subclass do stuff like set the reward.

							(msnFireEvent gSource 'OnTargetChosen { targetObj: targetObj })
							)
						)
					)
			</OnCreate>

			<OnSetPlayerTarget>
				(rpgSetTarget gSource aReason (objGetObjByID (msn@ gSource 'targetID)))
			</OnSetPlayerTarget>
			
			<OnObjDestroyed>
				(switch
					(= (objGetID aObjDestroyed) (msn@ gSource 'targetID))
						(msnSuccess gSource)
					)
			</OnObjDestroyed>

			<OnReward>
				(block (
					(reward (msn@ gSource 'reward))
					(currency (msn@ gSource 'rewardCurrency))
					)
					(if reward
						(rpgMissionRewardPayment reward currency)
						)
					)
			</OnReward>
		</Events>
	</MissionType>

</TranscendenceModule>
