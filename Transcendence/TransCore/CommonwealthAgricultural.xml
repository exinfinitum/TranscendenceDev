<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

	<!-- Agricultural Station ============================================== -->

	<StationType UNID="&stAgriculturalStation;"
			name=				"Commonwealth agricultural colony"
			sovereign=			"&svCommonwealth;"
			inherit=			"&baCommonwealthStation;"
				 
			attributes=			"commonwealth, commonwealthCustoms, friendly, generic, human, populated"
				 
			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"
				 
			level=				"3"
			size=				"390"
			armorID=			"&itHeavyPlasteelPlate;"
			hitPoints=			"350"
			regen=				"2"
			multiHull=			"Nil"
				 
			explosionType=		"&vtKineticExplosion3;"
			ejectaType=			"&vtWreckEjecta;"
			>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+commonwealthSpace;"
				systemAffinity=			"+commonwealthCore;"
				levelFrequency=			"uuurr ----- ----- ----- -----"

				locationCriteria=		"-asteroids, +lifeZone"
				exclusionRadius=		"80"

				unique=					"inSystem"
				/>

		<Names noArticle="true">
			Archer Colony; Buran Station; Chekov Colony; Dante Station;
			Ent Arbor Station; Farmstar Station; Georg Station IV;
			Horticult Colony; Ivanov Station VII; Jol Station;
			Kiev Colony; Luhansk Station; Mykolayiv Prime; New Reni;
			Odesa Agricultural; Petersburg Colony; Rancher Fields Colony;
			Stasohrad Combine; Tree Defenders Station; Ukraine Collective;
			Vostok Station; West Arbor Colony; Yern Station; Zimaril %1;
			%s Collective; %s Colony; %s Alpha; %s Beta; %s Gamma
		</Names>

		<!-- Trade and Items -->
		
		<Trade currency="credit">
			<Sell	criteria="*NU +food; -defective; -illegal; -lux; -notForSale;"		priceAdj="100"/>

			<Buy	criteria="*NU +lux; -Illegal; -notForSale; &lt;=$250;"	priceAdj="100"/>
			<Buy	criteria="*NU" item="&itHydrocarbons;"		priceAdj="100"/>
			<Buy	criteria="*NU" item="&itHelium3FuelRod;"	priceAdj="100"/>
			<Buy	criteria="*NU" item="&itOrganicAcid;"		priceAdj="100"/>
			<Buy	criteria="*NU" item="&itMedicalSupplies;"	priceAdj="100"/>
			<Buy	criteria="*NU" item="&itHyperfiberRoll;"	priceAdj="100"/>
			<Buy	criteria="*NU" item="&itBiofactorPaste;"	priceAdj="100"/>
		
			<Refuel			criteria="f +BasicFuel; L:1-5;" priceAdj="100"/>
			<RepairArmor	criteria="a L:1-5;" priceAdj="100"/>
			<ReplaceArmor	criteria="a L:1-5;" priceAdj="100"/>

			<ConsumeTrade	criteria="{core.fusionFuel}"		impact="2"/>
			<ConsumeTrade	criteria="{human.lux}"		impact="1"/>
			<ConsumeTrade	criteria="{human.meds}"		impact="2"/>
			<ConsumeTrade	criteria="{human.res}"		impact="1"/>

			<ProduceTrade	criteria="{human.basicFood}"	impact="20"/>
		</Trade>

		<Items>
			<RandomItem count="10" 
					criteria=		"* -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					level=			"2"
					levelCurve=		"1"
					/>

			<Lookup count="1d12" table="&trStationSupplies;"/>
			<Item	count="3d12" item="&itGradeBGrains;"/>
			<Item	count="3d12" item="&itGradeAGrains;"/>
			<Item	count="2d12" item="&itWhiteRice;"/>
		</Items>
		
		<!-- Ships and Defenses -->
		
		<Ships>
			<Lookup count="1d4+2" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<!-- Image and Effects -->
		
		<Image imageID="&rsCommonwealthAgriculturalColony;" imageWidth="320" imageHeight="290" viewportRatio="0.05"/>

		<DockingPorts
				portCount=		"10"
				portRadius=		"175"
				>
		</DockingPorts>
		
		<!-- Dock Screens -->
		
		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descWelcome">
						<Actions>
							<Action id="actionMainHall" default="1">
								(rpgMissionAssignment {
									missionCriteria: (cat "n +commonwealthAgricultural; =" (sysGetLevel) ";")
									noMissionTextID: 'descHallEmpty
									maxPerStation: 1
									})
							</Action>

							<Action id="actionCommoditiesExchange">
								(scrShowScreen gScreen &dsRPGCommoditiesExchange;)
							</Action>

							<Action id="actionDockServices">
								(rpgDockServices gPlayerShip {
									checkMilitaryID: True
									})
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>
		</DockScreens>

		<!-- Events and Data -->

		<Events>
			<GetGlobalAchievements>
				(rpgMissionAchievements &stAgriculturalStation; "* +commonwealthAgricultural;")
			</GetGlobalAchievements>
		</Events>

		<Language>
			<Text id="rpg.missionTypeDesc">Agricultural colony missions</Text>
			<Text id="rpg.stationWillNotBuy">

				%StationName% buys supplies and luxury items. We are not 
				interested in buying %itemName%.

			</Text>

			<Text id="descWelcome">
				You are inside a C9-class prefabricated agricultural station.
			</Text>

			<Text id="core.mapDesc">
				Refuels up to level 5 &mdash; Repairs/installs armor up to level 5 &mdash; Sells food &mdash; Buys luxuries and supplies
			</Text>
		</Language>
	</StationType>

	<!-- Mission: Defend Agricultural Station ==================================

	EXTRA DATA

	attackDesc:			Attack descriptor
	destID:				Id of station to defend
	nextWave:			Next wave
	reward:				Reward (in credits) for completing mission

	======================================================================== -->

	<MissionType UNID="&msCommAgriDefend;"
			name=				"Defend Agricultural Station"
			attributes=			"commonwealthAgricultural, deliveryMission"

			level=				"1-5"

			maxAppearing=		"1"
			noDebrief=			"true"
			failureAfterOutOfSystem="0"
			>

		<StaticData>
			<Attackers>
				(
					{	id: "pirate"
						minLevel: 1
						maxLevel: 4
						reward: 5000
						waveInterval: 900

						waves: (
							; Note: Timer is currently ignored. If the OnNextWave event is changed to create
							; the ships with a delay, move the second group of each wave closer.
						
							; Wave 1
							(
								{ table: &etPirateAmbush1;	timer: 0   distance:120 }
								{ table: &etPirateAmbush2;	timer: 30  distance:135 }
								)

							; Wave 2
							(
								{ table: &etPirateAmbush2;	timer: 0   distance:120 }
								{ table: &etPirateAmbush2;	timer: 90  distance:165 }
								)

							; Wave 3
							(
								{ table: &etPirateAmbush3;	timer: 0   distance:120 }
								{ table: &etPirateAmbush3;	timer: 300 distance:270 }
								)
							)
						}
					)
			</Attackers>
		</StaticData>

		<Events>
			<OnGlobalUniverseCreated>
				(block (
					;	Make a list of all agricultural stations in the universe that 
					;	could have this mission. We pick one at the beginning of the
					;	universe and remember it.

					(stationList 
						(map (unvFindObject "t +unid:&stAgriculturalStation;;") 'excludeNil theEntry 

							;	Mission cannot appear in a set-piece system (Eridani, SK, CD)

							(if (not (find '(SE SK CD) (@ theEntry 2)))
								(@ theEntry 0)
								)
							)
						)
					)

					;	Pick a random station to be the one that gets attacked by pirates.
					;	This mission only shows up once, so we only need to pick one.
					;
					;	NOTE: It is OK if this list is Nil. In that case, the mission never
					;	shows up.

					(typSetData &msCommAgriDefend; 'stationID (random stationList))
					)
			</OnGlobalUniverseCreated>

			<OnCreate>
				(block (attackDesc)
					(switch
						;	Only one station in the universe gets this mission, so if we're not
						;	it, skip it.

						(!= (typGetData &msCommAgriDefend; 'stationID) (objGetID aOwnerObj))
							(msnDestroy gSource)

						;	Pick a random attack profile

						(not (setq attackDesc
								(random
									(filter (typGetStaticData &msCommAgriDefend; 'Attackers) theDesc
										(and (geq (sysGetLevel) (@ theDesc 'minLevel))
											(leq (sysGetLevel) (@ theDesc 'maxLevel))
											)
										)
									)
								))
							(msnDestroy gSource)

						;	Set up the mission

						(block Nil

							; Copy owner to destID so we can override dockscreens with deliveryMission
							(msnSetData gSource 'destID (objGetID aOwnerObj))

							; Remember the attack profile
							(msnSetData gSource 'attackDesc attackDesc)

							; Set the wave counter
							(msnSetData gSource 'nextWave 0)

							; Register for events
							(msnRegisterForEvents gSource aOwnerObj)

							; Set the reward
							(msnSetData gSource 'reward (@ attackDesc 'reward))
							)
						)
					)
			</OnCreate>

			<OnAcceptedUndock>
				(block (
					(ownerObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					)
					(msnAddTimerEvent gSource (random 120 270) 'OnNextWave)
					(objSetProperty ownerObj 'ignoreFriendlyFire True)
					)
			</OnAcceptedUndock>

			<OnSetPlayerTarget>
				(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'destID)) 'escort)
			</OnSetPlayerTarget>

			<OnNextWave>
				(block (
					(destObj (objGetObjByID (msnGetData gSource 'destID)))
					(attackDesc (msnGetData gSource 'attackDesc))
					(nextWave (msnGetData gSource 'nextWave))
					(waveDesc (@ (@ attackDesc 'waves) nextWave))
					(desc (msnTranslate gSource (cat (@ attackDesc 'id) ":Wave:" nextWave)))
					)

					; Cancel any timer event
					(msnCancelTimerEvent gSource 'OnNextWave)

					(enum waveDesc theEncounter
						;(sysAddEncounterEventAtDist (@ theEncounter 'timer) destObj (@ theEncounter 'table) (@ theEncounter 'distance))
						(sysCreateShip (@ theEncounter 'table) (sysVectorRandom destObj (@ theEncounter 'distance) 100 'ztAF) &svPirates; { target:destObj })
						)

					; Increment next wave
					(setq nextWave (+ nextWave 1))
					(if (@ (@ attackDesc 'waves) nextWave)
						(msnSetData gSource 'nextWave nextWave)
						(msnSetData gSource 'nextWave Nil)
						)

					; If the waves are on a timer then start the next one.
					(if (and (msnGetData gSource 'nextWave) (@ attackDesc 'waveInterval))
						(msnAddTimerEvent gSource (@ attackDesc 'waveInterval) 'OnNextWave)
						)
					)
			</OnNextWave>

			<OnDeliveryMissionCompleted>
				(switch
					; If there are ships attacking the station, then we can't do anything yet.
					(objGetProperty (objGetObjByID (msnGetData gSource 'destID)) 'underAttack)
						{
							desc: (msnTranslate gSource "InProgress")
							forceUndock: True
							}

					; If no more waves, then we've won
					(not (msnGetData gSource 'nextWave))
						(block Nil
							(msnSuccess gSource)
							(msnReward gSource)
							{
								desc: (msnTranslate gSource "SuccessDebrief")
								forceUndock: Nil
								}
							)

					; Otherwise, launch the next wave
					(block (
						(attackDesc (msnGetData gSource 'attackDesc))
						(nextWave (msnGetData gSource 'nextWave))
						)
						(msnAddTimerEvent gSource (random 90 180) 'OnNextWave)
						{
							desc: (msnTranslate gSource (cat (@ attackDesc 'id) ":Wave:" nextWave))
							forceUndock: True
							}
						)
					)
			</OnDeliveryMissionCompleted>

			<OnObjDestroyed>
				(switch
					(= (objGetID aObjDestroyed) (msnGetData gSource 'destID))
						(block (looter)
							; Create a transport to come and loot the remains
							(setq looter 
								(sysCreateShip 
									&scCharonFrigateRaider;
									(sysVectorRandom aObjDestroyed 110 100 'ztAF)
									&svPirates;
									)
								)

							(shpOrder looter 'loot aObjDestroyed)
							(shpOrder looter 'gate)

							; Assign some of the attackers to defend the transport and the rest to attack the player
							(enum (sysFindObject aObjDestroyed "sAXE N:300; -capitalShip;") shipObj
								(if (and
										(!= shipObj looter)
										(= (objGetSovereign shipObj) (objGetSovereign looter))
										)
									(block Nil
										(shpCancelOrders shipObj)
										(if (= (random 1 2) 1)
											(shpOrder shipObj 'escort looter)
											(shpOrder shipObj 'attack gPlayerShip)
											)
										)
									)
								)

							; Send out more pirates to attack the player
							(sysCreateShip &etPirateAmbush3; (sysVectorRandom gPlayerShip 105 100 'ztAF) &svPirates; { target:gPlayerShip })

							; And set failure
							(msnFailure gSource)
							)
					)
			</OnObjDestroyed>

			<OnCompleted>
				(block (
					(ownerObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					)
					(objSetProperty ownerObj 'ignoreFriendlyFire Nil)
					)
			</OnCompleted>

			<OnReward>
				(block (
					(ownerObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					)

					(rpgMissionRewardPayment (msnGetData gSource 'reward))

					;	Station gets a plaque commemorating the battle

					(objSetData ownerObj 'core.missionCommemoration (msnTranslate gSource 'textDuralloyPlaque))
					)
			</OnReward>
		</Events>

		<Language>
			<!-- Code Points -->

			<Text id="Name">
				(msnTranslate gSource 'textName {
					stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)) 0x04)
					})
			</Text>
			<Text id="Summary">
				(cat
					(msnTranslate gSource (cat (@ (msnGetData gSource 'attackDesc) 'id) ":Summary") {
						stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)) 0x04)
						}) 
					"\n\n"
					(typTranslate &dsRPGMission; 'mission.rewardSummary {
						systemName: (sysGetName)
						payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
						})
					)
			</Text>
			<Text id="FirstIntro">
				(msnTranslate gSource 'textFirstIntro {
					stationName: (objGetName (objGetObjByID (msnGetProperty gSource 'ownerID)))
					})
			</Text>
			<Text id="Briefing">
				(msnTranslate gSource 'textBriefing {
					payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>
			<Text id="SuccessDebrief">
				(msnTranslate gSource 'textSuccessDebrief {
					payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
					})
			</Text>

			<!-- Text -->

			<Text id="textName">Defend %stationName%</Text>
			<Text id="textFirstIntro">
				As you enter the meeting hall, you see about a dozen people talking excitedly.
				One of them approaches you:

				"Welcome to %stationName%, captain. I hope you don't mind if we skip the tour of the
				station and get right to the point: the truth is that we've received good 
				information that a small raiding party is heading for this station.

				"We saw your ship come in, and frankly, we thought that you might be able to help us..."
			</Text>
			<Text id="Intro">
				"You're back! Look, we're desperate. No one else has a powerful ship
				or the skills to fly it. Please reconsider our offer."
			</Text>
			<Text id="textBriefing">
				"If you can defend our station, we're prepared to offer you %payment%
				in compensation, which is frankly all we've been able to collect on short notice.
				
				"What do you say?"
			</Text>
			<Text id="textSuccessDebrief">
				"You've done it! I haven't seen fighting like that since the videos of the Marineris War!
				As promised, we've deposited %payment% into your account."
			</Text>
			<Text id="AcceptReply">
				"Thank you, you won't regret it! We believe that the first wave is composed
				mostly of gunships; the heavier ships won't show up til the end. You should
				have no problem at all! Well, we better get to the shelters. Thanks again!"
			</Text>
			<Text id="DeclineReply">
				"Well, I suppose I shouldn't have expected you to risk your life for us."

				He offers you his hand, "Thanks, anyways. And wish us luck."
			</Text>
			<Text id="InProgress">
				"Whoa, what are you doing here!? The station is still under attack!
				Just get out there are finish the job, you've got them on the run now."
			</Text>
			<Text id="SuccessMsg">
				Mission complete!
			</Text>

			<Text id="pirate:Summary">
				Your mission is to defend %stationName% from a Charon pirate raid.
			</Text>
			<Text id="pirate:Wave:0">
				"The first wave will be mostly composed of light gunships, although there is a
				small chance that they'll include the more powerful Viking-class ships.

				"Don't worry, you'll have no trouble."
			</Text>
			<Text id="pirate:Wave:1">
				"If the pirates are following their usual strategy, the next wave should be a
				little larger, but will again be mostly gunships. Watch out for the leaders, though, 
				they'll be using the heavy Viking gunships."
			</Text>
			<Text id="pirate:Wave:2">
				"OK, this is it. If we can hold out through this last wave, they'll likely give up.
				Plan on heavy gunships with missiles."
			</Text>

			<Text id="textDuralloyPlaque">a small Duralloy plaque commemorating a battle against pirates</Text>
		</Language>
	</MissionType>

<!-- RESOURCES -->

	<Image UNID="&rsCommonwealthAgriculturalColony;"		bitmap="Resources\CommonwealthAgriculturalColony.jpg" bitmask="Resources\CommonwealthAgriculturalColonyMask.bmp"  loadOnUse="true"/>
	
</TranscendenceModule>
