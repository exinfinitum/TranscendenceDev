<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- AMMO BOXES -->

	<!-- Ammo Box, Akan 30 -->

	<ItemType UNID="&itAmmoBoxAkan30;"
			name=				"Akan 30 ammunition box(es)"
			level=				"4"
			value=				"1000"
			mass=				"2500"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable"

			description=		"This box contains Akan 30 cannon shell cartridges."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intAmmoBoxOpen (itmCreate &itAkan30CannonShell; 125))
		</Invoke>

	</ItemType>

	<!-- Ammo Box, White Strelka -->

	<ItemType UNID="&itAmmoBoxStrelka1;"
			name=				"White Strelka ammunition box(es)"
			level=				"5"
			value=				"2000"
			mass=				"2500"
			frequency=			"common"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable"

			description=		"This box contains White Strelka missiles, compatible with the Makayev launcher."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intAmmoBoxOpen (itmCreate &itStrelkaWhite; 100))
		</Invoke>

	</ItemType>

	<!-- Ammo Box, Cluser MAG -->

	<ItemType UNID="&itAmmoBoxMAG;"
			name=				"ZG24 cluster MAG ammunition box(es)"
			level=				"6"
			value=				"1250"
			mass=				"2500"
			frequency=			"common"
			numberAppearing=	"1d4"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable"

			description=		"This box contains ZG24 cluster MAGs."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intAmmoBoxOpen (itmCreate &itZG24ClusterMAG; 25))
		</Invoke>

	</ItemType>

	<!-- Ammo Box, Thermo Cannon -->

	<ItemType UNID="&itAmmoBoxThermo;"
			name=				"thermo cannon ammunition box(es)"
			level=				"7"
			value=				"1250"
			mass=				"2500"
			frequency=			"uncommon"
			numberAppearing=	"1d6"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable, military"

			description=		"This box contains thermo cannon shell cartridges."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intAmmoBoxOpen (itmCreate &itThermoCannonShell; 25))
		</Invoke>

	</ItemType>

	<!-- Ammo Box, Red Strelka -->

	<ItemType UNID="&itAmmoBoxStrelka2;"
			name=				"Red Strelka ammunition box(es)"
			level=				"8"
			value=				"4000"
			mass=				"2500"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable, military"

			description=		"This box contains Red Strelka missiles, compatible with the Makayev launcher."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intAmmoBoxOpen (itmCreate &itStrelkaRed; 80))
		</Invoke>

	</ItemType>

	<!-- Ammo Box, Contraband -->

	<ItemType UNID="&itAmmoBoxContraband;"
			name=				"contraband box(es)"
			level=				"6"
			value=				"3000"
			mass=				"2500"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable, contrabandBox, illegal"

			description=		"This sealed container, made out of an old ammunition box, contains illegal items."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (cost count illegalItems)
				(setq illegalItems (itmCreateRandom "* +Illegal; -ContrabandBox; -SmugglersHold; -ID;" "ruccc ccur-"))

				(setq cost (itmGetPrice illegalItems 'credit))
				(setq cost (if (eq cost 0) 100 cost))
				(setq count (divide (random 2000 4000) cost))
				(setq count (if (ls count 1) 1 count))
				(setq illegalItems (itmCreate (itmGetType illegalItems) count))

				(intAmmoBoxOpen illegalItems)
				)
		</Invoke>

	</ItemType>

	<!-- Ammo Box, Contaminated -->

	<ItemType UNID="&itAmmoBoxRadioactive;"
			name=				"contaminated ammunition box(es)"
			level=				"5"
			value=				"0"
			mass=				"2500"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable, cannotOrder"

			description=		"This ammunition box contains leaky radioactive ordnance."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(switch
					(shpIsRadioactive gSource)
						(objSendMessage gSource Nil (typTranslate gType 'msgMore))

					(shpIsRadiationImmune gSource)
						(objSendMessage gSource Nil (typTranslate gType 'msgImmune))

					(block Nil
						(shpMakeRadioactive gSource)
						(objSendMessage gSource Nil (typTranslate gType 'msgResult))
						)
					)

				; Identify the box
				(itmSetKnown gItem)

				; Remove box
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgMore">The box contained more radioactive waste</Text>
			<Text id="msgImmune">The box contained leaky radioactive ordnance; your ship is unaffected</Text>
			<Text id="msgResult">The box contained leaky radioactive ordnance</Text>
		</Language>
	</ItemType>

	<!-- Ammo Box, Booby-Trapped -->

	<ItemType UNID="&itAmmoBoxParalysis;"
			name=				"booby-trapped ammunition box(es)"
			level=				"7"
			value=				"0"
			mass=				"2500"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownAmmoBox;"
			attributes=			"ammoBox, consumable, cannotOrder"

			description=		"This ammunition box has been rigged to disable the ship when it is opened."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(objMakeParalyzed gSource (random 450 900))
				(objSendMessage gSource Nil (typTranslate gType 'msgResult))

				; Identify the box
				(itmSetKnown gItem)

				; Remove box
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">The box explodes; ship disabled by EMP!</Text>
		</Language>
	</ItemType>

	<!-- Ammo Box, Unknown -->

	<ItemType UNID="&vtUnknownAmmoBox;"
			name=				"ammunition box(es)"
			virtual=			"true"
			level=				"5"
			value=				"800"
			attributes=			"unknown"

			description=		"These heavy metal boxes are used to hold ammunition of some type. Unfortunately, you cannot decode the markings that list their actual contents."
			>

		<Names>ammunition box(es) labeled "AAAA"; ammunition box(es) labeled with bar codes;
			ammunition box(es) labeled "C17"; ammunition box(es) labeled "Demolition";
			ammunition box(es) labeled "EX1803193"; ammunition box(es) labeled "FAILED";
			ammunition box(es) labeled "GOOD"; ammunition box(es) labeled "Hexagene";
			ammunition box(es) labeled "INFLAMMABLE"; ammunition box(es) labeled "Joker71930";
			ammunition box(es) labeled "Kill, Kill, Kill"; ammunition box(es) labeled "locked";
			ammunition box(es) labeled "munitions010"; ammunition box(es) labeled "NAMI";
			ammunition box(es) labeled "Open Carefully!"; ammunition box(es) labeled "P51 ammo";
			ammunition box(es) labeled "Q5-L1-Z8"; ammunition box(es) labeled "Rasiermesser";
			ammunition box(es) labeled "SAFE"; ammunition box(es) labeled "temperature sensitive";
			ammunition box(es) labeled "UNSAFE"; ammunition box(es) labeled "victory1201";
			ammunition box(es) labeled "WARNING!"; ammunition box(es) labeled "Xplosives! Caution!";
			ammunition box(es) labeled "yellow dust"; ammunition box(es) labeled "ZG24"
		</Names>

	</ItemType>
	
<!-- ARMOR REPAIR -->

	<!-- Small Armor Patch -->

	<ItemType UNID="&itSmallArmorPatch;"
			inherit=			"&baStdArmorRepair;"
			name=				"small armor patch(es)"
			level=				"1"
			value=				"28"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorRepair; Consumable"

			description=		"This is a small armor plate that can be welded to your ship's armor to repair damage. It works on armor up to level 5."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor patch, small"
			>

		<Properties>
			<Constant id="rpg.repairTable">
				{	criteria:"a"	maxLevel:5		repairHP:35	}
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="288" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Large Armor Patch -->

	<ItemType UNID="&itLargeArmorPatch;"
			inherit=			"&baStdArmorRepair;"
			name=				"large armor patch(es)"
			level=				"3"
			value=				"110"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorRepair; Consumable"

			description=		"This is a large armor plate that can be welded to your ship's armor to repair damage. It works on armor up to level 7."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor patch, large"
			>

		<Properties>
			<Constant id="rpg.repairTable">
				{	criteria:"a"	maxLevel:7		repairHP:60	}
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="288" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Light Armor Repair Kit -->

	<ItemType UNID="&itLightArmorRepair;"
			inherit=			"&baStdArmorRepair;"
			name=				"light armor repair kit"
			level=				"5"
			value=				"440"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorRepair; Consumable"

			description=		"This kit can be used in the field to repair damaged armor. It will repair up to 100 hp of damage. It work on armor up to level 9."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor repair kit, 50"
			>

		<Properties>
			<Constant id="rpg.repairTable">
				{	criteria:"a"	maxLevel:9		repairHP:100	}
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="288" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Medium Armor Repair Kit -->

	<ItemType UNID="&itMediumArmorRepair;"
			inherit=			"&baStdArmorRepair;"
			name=				"medium armor repair kit"
			level=				"7"
			value=				"1750"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorRepair; Consumable"

			description=		"This kit can be used in the field to repair damaged armor. It will repair up to 175 hp of damage."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor repair kit, 30"
			>

		<Properties>
			<Constant id="rpg.repairTable">
				{	criteria:"a"	maxLevel:10		repairHP:175	}
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="288" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Heavy Armor Repair Kit -->

	<ItemType UNID="&itHeavyArmorRepair;"
			inherit=			"&baStdArmorRepair;"
			name=				"heavy armor repair kit"
			level=				"9"
			value=				"7000"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorRepair; Consumable"

			description=		"This kit can be used in the field to repair damaged armor. It will repair up to 300 hp of damage."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor repair kit, 10"
			>

		<Properties>
			<Constant id="rpg.repairTable">
				{	criteria:"a"	maxLevel:10		repairHP:300	}
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="288" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

<!-- BARRELS -->

	<!-- Barrel of Ablative Armor Coating -->

	<ItemType UNID="&itAblativeArmorCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]ablative armor coating"
			level=				"1"
			value=				"40"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel;"

			description=		"This coating is used to protect a ship's armor against laser and particle beam weapons."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"ablative"

			sortName=			"ablative armor coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0a05</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is an ablative coating that resists laser and particle damage.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Armor Repair Paste -->

	<ItemType UNID="&itSiliconArmorPatch;"
			inherit=			"&baStdArmorRepair;"
			name=				"[barrel(s) of ]armor repair paste"
			level=				"1"
			value=				"28"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			unknownType=		"&itUnknownBarrel;"
			attributes=			"ArmorRepair; Consumable"

			description=		"Apply this paste to an armor segment to repair light to moderate damage. It works on armor up to level 5."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"armor repair paste, barrel of"
			>

		<Properties>
			<DynamicData id="rpg.repairTable">
				{	criteria:"a"	maxLevel:5		repairHP:(rollDice 10 6 0)	}
			</DynamicData>
		</Properties>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<Language>
			<Text id="descResultIntro">The paste is a silicon-based compound that patches damaged sections of your armor.</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Carbon-Weaver Nanos -->

	<ItemType UNID="&itCarbonWeaverNanos;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]carbon-weaver nanos"
			level=				"2"
			value=				"80"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			unknownType=		"&itUnknownBarrel;"
			attributes=			"ArmorEnhance; MinorItem"

			description=		"The nanomachines in this paste weave a strong carbon grid through a ship's armor. Armor that has been treated in this way will be stronger and more resistant to damage."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"carbon-weave"

			sortName=			"carbon-weaver nanos, barrel of"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"a &lt;=3"	enhancement:0x0105	}
					{	criteria:"a &lt;=5"	enhancement:0x0103	}
					{	criteria:"a &lt;=6"	enhancement:0x0101	}
					{	criteria:"a &gt;6"	enhancement:Nil	descID:'TooAdvanced	}
					)
			</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Language>
			<Text id="descResultIntro">
				The coating is composed of nanomachines that strengthen your armor.
			</Text>
		</Language>
	</ItemType>

	<!-- Particle Resistance Coating -->

	<ItemType UNID="&itParticleResistCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]particle resistance coating"
			level=				"3"
			value=				"100"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel;"

			description=		"This coating is used to protect a ship's armor against particle beam weapons."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"particleresist"

			sortName=			"particle resistance coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0925</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a coating that resists particle damage.
			</Text>
		</Language>
	</ItemType>

	<!-- Radiation Immunity Coating -->

	<ItemType UNID="&itRadiationImmuneCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]anti-radiation coating"
			level=				"4"
			value=				"350"
			mass=				"1000"
			frequency=			"rare"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel;"

			description=		"This borocarbide coating absorbs deadly radiation before it can penetrate your ship's hull."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"radiationimmune"

			sortName=			"anti-radiation coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0b00</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The barrel contains a borocarbide paste that resists radiation.
			</Text>
		</Language>
	</ItemType>

	<!-- EMP Immunity Coating -->

	<ItemType UNID="&itEMPImmuneCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]monopole dust"
			level=				"5"
			value=				"700"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"When applied to armor, monopole dust dissipates EMP energy, rendering it harmless."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"EMPimmune"

			sortName=			"monopole dust, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0b20</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The barrel contains monopole dust, which protects your armor against EMP effects.
			</Text>
		</Language>
	</ItemType>

	<!-- Ion Resistant Coating -->

	<ItemType UNID="&itIonResistCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]ion resistance coating"
			level=				"6"
			value=				"1300"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"This coating is used to protect a ship's armor against ion damage."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"ionresist"

			sortName=			"ion resistance coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0945</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a coating that resists ion damage.
			</Text>
		</Language>
	</ItemType>

	<!-- Shield Interfering Coating -->

	<ItemType UNID="&itShieldInterfereCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]meteorsteel dust"
			level=				"6"
			value=				"200"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"armorDamage, minorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"Meteorsteel interferes with most kinds of shield generators."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"shieldresist"

			sortName=			"meteorsteel dust, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x8c00</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The barrel contains meteorsteel dust.
			</Text>
		</Language>
	</ItemType>

	<!-- Ion Effects Immunity Coating -->

	<ItemType UNID="&itIonEffectImmuneCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]dyon dust"
			level=				"7"
			value=				"2800"
			mass=				"1000"
			frequency=			"rare"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"Dust activated by dyons immunizes armor against ion effects that disable or damage a ship's systems."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"ioneffectimmune"

			sortName=			"dyon dust, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0c00</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The barrel contains dyon dust, which immunizes your armor against disabling ion effects.
			</Text>
		</Language>
	</ItemType>

	<!-- Thermo Resistant Coating -->

	<ItemType UNID="&itThermoResistCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]ithalium paste"
			level=				"8"
			value=				"5250"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"This coating is used to protect a ship's armor against thermonuclear damage."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"thermoresist"

			sortName=			"ithalium paste, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0955</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a coating that resists thermonuclear damage.
			</Text>
		</Language>
	</ItemType>

	<!-- Carbon Weaver 2 Coating -->

	<ItemType UNID="&itCarbonWeaver2Coating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]orthosteel nanos"
			level=				"9"
			value=				"9000"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem"
			unknownType=		"&itUnknownBarrel5;"

			description=		"The nanomachines in this paste weave a strong orthosteel grid through a ship's armor. Armor that has been treated in this way will be stronger and more resistant to damage."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"carbon-weave2"

			sortName=			"orthosteel nanos, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"a &lt;=6"	enhancement:Nil	descID:'TooPrimitive	}
					{	criteria:"a &lt;=10"	enhancement:0x0105	}
					{	criteria:"a &gt;10"	enhancement:Nil	descID:'TooAdvanced	}
					)
			</Constant>
		</Properties>

		<Language>
			<Text id="descResultIntro">
				The coating is composed of nanomachines that strengthen your armor.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Decon Gel -->

	<ItemType UNID="&itDeconGel;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]decon gel"
			level=				"3"
			value=				"150"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"Consumable"
			unknownType=		"&itUnknownBarrel;"

			description=		"Decon gel is used to decontaminate radioactive metals, ceramics and other materials. It is ideal for decontaminating a ship's armor and hull."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"decon"

			sortName=			"decon gel, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Properties>
			<Constant id="rpg.useCriteria">"a"</Constant>
		</Properties>

		<Events>
			<OnUseOnItem>
				(block (
					(dstItem (@ gData 'itemToUseOn))
					resultID
					)

					(switch
						;	If applied on a loose segment, then no effect

						(not (itmGetProperty dstItem 'installed))
							(setq resultID 'descResultNoEffect)

						;	If ship is radioactive, then we decontaminate

						(shpIsRadioactive gPlayerShip)
							(block Nil
								(shpDecontaminate gPlayerShip)
								(setq resultID 'descResultDecontaminated)
								)

						(setq resultID 'descResultNotNeeded)
						)

					(objRemoveItem gPlayerShip gItem 1)
					(itmSetKnown gItem)
					{
						nextScreen: 'exitScreen
						desc: (itmTranslate gItem resultID {
							dstItem: (itmGetName dstItem)
							})
						}
					)
			</OnUseOnItem>
		</Events>

		<Language>
			<Text id="descResultDecontaminated">

				The barrel was filled with a decontamination gel. Your ship has 
				been decontaminated.

			</Text>
			<Text id="descResultNotNeeded">

				The barrel was filled with a decontamination gel. Since your 
				ship is not radioactive, the gel had no effect.

			</Text>
			<Text id="descResultNoEffect">

				The barrel was filled with a decontamination gel. It had no 
				effect on the %dstItem% because it is not radioactive.

			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Degenerating Nanos -->

	<ItemType UNID="&itDegeneratingNanos;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]degenerating nanos"
			level=				"4"
			value=				"25"
			mass=				"1000"
			unknownType=		"&itUnknownBarrel;"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"armorDamage, consumable"

			description=		"These nanomachines are used to recycle old ships and armors into their basic components. Use with caution: Do not allow contact with a ship's armor or hull."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"degenerating"

			sortName=			"degenerating nanos, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x8200</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a nanomachine matrix that dissolves metals and composites.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Organic Acid -->

	<ItemType UNID="&itOrganicAcid;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]organic acid"
			level=				"2"
			value=				"15"
			mass=				"1000"
			frequency=			"common"
			numberAppearing=	"1d4"
			unknownType=		"&itUnknownBarrel;"
			attributes=			"armorDamage, consumable, res"

			description=		"Powerful organic acids such as these are used in various industrial processes. Use with caution: Do not allow contact with a ship's armor or hull."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"acid"

			sortName=			"organic acid, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Properties>
			<Constant id="rpg.useCriteria">"a"</Constant>
		</Properties>

		<Events>
			<OnUseOnItem>
				(block (
					(dstItem (@ gData 'itemToUseOn))
					)
					(setq dstItem (objSetItemProperty gPlayerShip dstItem 'incHP (- (rollDice 3 6 0))))

					;	Remove the armor paste from the player's cargo
					(objRemoveItem gPlayerShip gItem 1)

					;	Identify the item
					(itmSetKnown gItem)

					;	If the armor was destroyed, then we remove it too.

					(if (and (not (itmGetProperty dstItem 'installed))
							(= (itmGetProperty dstItem 'hp) 0)
							)
						(block ()
							(objRemoveItem gPlayerShip dstItem)

							{
								desc: (itmTranslate gItem 'descResultDestroyed)
								}
							)

						{
							desc: (itmTranslate gItem 'descResult)
							}
						)
					)
			</OnUseOnItem>
		</Events>

		<Language>
			<Text id="descResult">

				Unfortunately, the barrel contained an organic acid that eats
				through most metals. The armor segment has been damaged.

			</Text>
			<Text id="descResultDestroyed">

				Unfortunately, the barrel contained an organic acid that eats
				through most metals. The armor segment has been destroyed.

			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Radioactive Waste -->

	<ItemType UNID="&itRadioactiveWaste;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]radioactive waste"
			level=				"4"
			value=				"0"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			attributes=			"Consumable; CannotOrder"
			unknownType=		"&itUnknownBarrel;"

			description=		"This is a titanium barrel filled with low and medium-level radioactive waste."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"radioactive"

			sortName=			"radioactive waste, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Properties>
			<Constant id="rpg.useCriteria">"a"</Constant>
		</Properties>

		<Events>
			<OnUseOnItem>
				(block (
					(dstItem (@ gData 'itemToUseOn))
					resultID
					)
					(switch
						;	Already contaminated
						(shpIsRadioactive gPlayerShip)
							(setq resultID 'descResultAlreadyContaminated)

						;	Applied to an installed armor segment with radiation immunity
						(and (itmMatches dstItem "aI") (shpIsRadiationImmune gPlayerShip dstItem))
							(setq resultID 'descResultImmune)

						(block Nil
							(if (itmMatches dstItem "aI")
								(setq resultID 'descResultContaminated)
								(setq resultID 'descResultContaminatedCargo)
								)
							(shpMakeRadioactive gPlayerShip)
							)
						)

						(objRemoveItem gPlayerShip gItem 1)
						(itmSetKnown gItem)
						{
							nextScreen: 'forceUndock
							desc: (typTranslate &itRadioactiveWaste; resultID)
							}
						)
					)
			</OnUseOnItem>
		</Events>

		<Language>
			<Text id="descResultAlreadyContaminated">

				The barrel contained radioactive waste. Your ship is already
				radioactive; the waste has no further effect.

			</Text>
			<Text id="descResultContaminated">

				The barrel contained radioactive waste. Your ship has been
				contaminated.

			</Text>
			<Text id="descResultImmune">

				The barrel contained radioactive waste. Fortunately, your armor
				is immune to radiation. The waste has no effect.

			</Text>
			<Text id="descResultContaminatedCargo">

				The barrel contained radioactive waste which just emptied inside
				your cargo hold. Your ship has been contaminated.

			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Reactive Armor Coating -->

	<ItemType UNID="&itReactiveArmorCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]reactive armor coating"
			level=				"1"
			value=				"60"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			unknownType=		"&itUnknownBarrel;"
			attributes=			"ArmorEnhance; MinorItem"

			description=		"This coating reacts when hit by kinetic or chemical explosives and produces an opposite reaction that protect the underlying armor and hull."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"reactive"

			sortName=			"reactive armor coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x0a15</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a reactive coating that resists kinetic and chemical explosion damage.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Reflective Armor Coating -->

	<ItemType UNID="&itReflectiveArmorCoating;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]reflective armor coating"
			level=				"3"
			value=				"160"
			mass=				"1000"
			frequency=			"rare"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem; Specialty"
			unknownType=		"&itUnknownBarrel;"

			description=		"This coating is nearly perfectly reflective at all laser weapon wavelengths. A ship's armor coated with this substance will be immune to laser weapons."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"reflective"

			sortName=			"reflective armor coating, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="enhancement">0x030a</Data>
		</StaticData>

		<Language>
			<Text id="descResultIntro">
				The paste is a mirrored coating that reflects laser beams.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Regenerating Nanos -->

	<ItemType UNID="&itRegeneratingNanos;"
			inherit=			"&baStdPasteBarrel;"
			name=				"[barrel(s) of ]regenerating nanos"
			level=				"4"
			value=				"350"
			mass=				"1000"
			frequency=			"rare"
			numberAppearing=	"1d4"
			attributes=			"ArmorEnhance; MinorItem; Specialty"
			unknownType=		"&itUnknownBarrel;"

			description=		"The nanomachines are able to automatically regenerate any armor. Once treated with this paste an armor segment will continue to regenerate even if damaged further."

			useScreen=			"&dsRPGUseItemOnArmor;"
			data=				"regenerating"

			sortName=			"regenerating nanos, barrel of"
			>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"a &lt;=10"	enhancement:0x0200	}
					{	criteria:"a &gt;10"	enhancement:Nil	descID:'TooAdvanced	}
					)
			</Constant>
		</Properties>

		<Language>
			<Text id="descResultIntro">
				The paste is a nanomachine matrix that regenerates the armor segment.
			</Text>
		</Language>
	</ItemType>

	<!-- Barrel of Repairing Nanos -->

	<ItemType UNID="&itRepairingNanos;"
			inherit=			"&baStdArmorRepair;"
			name=				"[barrel(s) of ]repairing nanos"
			level=				"3"
			value=				"110"
			mass=				"1000"
			frequency=			"uncommon"
			numberAppearing=	"1d4"
			unknownType=		"&itUnknownBarrel;"
			attributes=			"ArmorRepair; Consumable"

			description=		"Apply this paste to an armor segment to repair moderate to heavy damage. It works on armor up to level 7."

			useScreen=			"&dsRPGUseItemOnArmor;"

			sortName=			"repairing nanos, barrel of"
			>

		<Properties>
			<DynamicData id="rpg.repairTable">
				{	criteria:"a"	maxLevel:7		repairHP:(rollDice 9 12 0)	}
			</DynamicData>
		</Properties>

		<Image imageID="&rsItems1;" imageX="96" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<Language>
			<Text id="descResultIntro">The paste contains a colony of nanomachines that can repair your armor.</Text>
		</Language>
	</ItemType>

<!-- HALO GEMS -->

	<!-- Gem of Despair -->

	<ItemType UNID="&itGemOfDespair;"
			name=				"gem(s) of despair"
			level=				"7"
			value=				"2000"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownHaloGem;"
			attributes=			"cannotOrder, communion, haloGem, minorItem, psionic"

			description=		"These gems are used by the Halo Races, though their exact purpose is unknown. The dark-energies embedded in the gem have an influence over spacetime that is not yet fully understood."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="576" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(if (find (sysGetNodes) "Elysium")
				(block Nil
					; Gate to Elysium
					(objSendMessage gSource Nil (typTranslate gType 'msgResult))
					(objGateTo gSource "Elysium" "Start" &efStargateOut;)

					; Remove the item from the player's list
					(objRemoveItem gSource gItem 1)

					; Identify the item
					(itmSetKnown gItem)
					)
					
				; Elysium not found
				(objSendMessage gSource Nil (typTranslate gType 'msgNoEffect))
				)
		</Invoke>

		<Language>
			<String id="msgResult">"May you find your path among the stargates..."</String>
			<Text id="msgNoEffect">The gem flickers for a moment but then fades without effect.</Text>
		</Language>
	</ItemType>

	<!-- Gem of Contrition -->

	<ItemType UNID="&itGemOfContrition;"
			name=				"gem(s) of contrition"
			level=				"8"
			value=				"5000"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownHaloGem;"
			attributes=			"cannotOrder, communion, haloGem, minorItem, psionic"

			description=		"These gems are used by the Halo Races, though their exact purpose is unknown. The dark-energies embedded in the gem have an influence over spacetime that is not yet fully understood."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="576" imageWidth="96" imageHeight="96"/>

		<Invoke key="C">
			(block Nil
				; Stop time
				(objSendMessage gSource Nil (typTranslate gType 'msgResult))
				(sysStopTime 500 gSource)

				; Remove the item from the player's list
				(objRemoveItem gSource gItem 1)

				; Identify the item
				(itmSetKnown gItem)
				)
		</Invoke>

		<Language>
			<String id="msgResult">"Use this time to right your wrongs..."</String>
		</Language>
	</ItemType>

	<!-- Gem of Sacrificce -->

	<ItemType UNID="&itGemOfSacrifice;"
			name=				"gem(s) of sacrifice"
			level=				"12"
			value=				"10000"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownHaloGem;"
			attributes=			"cannotOrder, communion, haloGem, minorItem, psionic"

			description=		"These gems are used by the Halo Races, though their exact purpose is unknown. The dark-energies embedded in the gem have an influence over spacetime that is not yet fully understood."
			>

		<Image imageID="&rsItems1;" imageX="0" imageY="576" imageWidth="96" imageHeight="96"/>

		<Invoke key="F">
			(block (sacrificeEffect)
				; Function to lower shields and armor
				(setq sacrificeEffect (lambda (theObj)
					(block Nil
						(objDepleteShields theObj)

						(for i 0 (subtract (shpGetArmorCount theObj) 1)
							(if (leq (itmGetLevel (shpGetArmor theObj i)) 12)
								(block (theDamage)
									(setq theDamage (divide (multiply (shpGetArmorMaxHitPoints theObj i) (random 96 99)) 100))
									(shpDamageArmor theObj i 12 theDamage)
									)
								)
							)
							
						(objSetProperty theObj 'interiorHP (random 1 10))

						(sysCreateEffect &efGemOfSacrifice; theObj (objGetPos theObj))
						)
					))

				; All ships in range have their shields lowered
				(objSendMessage gSource Nil (typTranslate gType 'msgResult))
				(enum (sysFindObject gSource "sN:30;") theObj
					(sacrificeEffect theObj)
					)

				; Invoker also gets effect
				(sacrificeEffect gSource)

				; Remove the item from the player's list
				(objRemoveItem gSource gItem 1)

				; Identify the item
				(itmSetKnown gItem)
				)
		</Invoke>

		<Language>
			<String id="msgResult">"May your sacrifice prove true..."</String>
		</Language>
	</ItemType>

<!-- Miscellaneous ROMS -->

	<!-- Autopilot ROM -->

	<ItemType UNID="&itAutopilotROM;"
			name=				"autopilot ROM"
			level=				"1"
			value=				"50"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shipEquipment"

			description=		"This program allows the ship's captain to rest while the ship maintains a steady course."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				; Install
				(if (not (eq (objGetEquipmentStatus gSource 'Autopilot) 'notInstalled))
					(objSendMessage gSource Nil (typTranslate gType 'msgNoEffect))
					(block Nil
						(objChangeEquipmentStatus gSource 'Autopilot 'install)
						(objSendMessage gSource Nil (typTranslate gType 'msgResult))
						)
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">Autopilot installed</Text>
			<Text id="msgNoEffect">Ship already has an autopilot</Text>
		</Language>
	</ItemType>

	<!-- Cash Card, Blue -->

	<ItemType UNID="&itCashCardBlue;"
			name=				"blue cash card"
			attributes=			"cashCard, consumable, cannotOrder"
			inherit=			"&baCashCard;"

			level=				"2"
			frequency=			"rare"

			value=				"100"
			mass=				"1"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"

			description=		"This ROM stores digital cash and may be redeemed automatically with your ship's computer."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="card.balance">(rollDice 8 24)</Data>
		</StaticData>
	</ItemType>

	<!-- Cash Card, Gold -->

	<ItemType UNID="&itCashCardGold;"
			name=				"gold cash card"
			attributes=			"cashCard, consumable, cannotOrder"
			inherit=			"&baCashCard;"

			level=				"4"
			frequency=			"rare"

			value=				"1000"
			mass=				"1"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"

			description=		"This ROM stores digital cash and may be redeemed automatically with your ship's computer."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="card.balance">(rollDice 8 249)</Data>
		</StaticData>
	</ItemType>

	<!-- Cash Card, Platinum -->

	<ItemType UNID="&itCashCardPlatinum;"
			name=				"platinum cash card"
			attributes=			"cashCard, consumable, cannotOrder"
			inherit=			"&baCashCard;"

			level=				"6"
			frequency=			"rare"

			value=				"10000"
			mass=				"1"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"

			description=		"This ROM stores digital cash and may be redeemed automatically with your ship's computer."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<StaticData>
			<Data id="card.balance">(rollDice 8 2499)</Data>
		</StaticData>
	</ItemType>

	<!-- Data ROM 

	EXTRA DATA

	text:			The document contents of the data ROM should be stored in this data variable
					(itmSetData theItem "text" "{the document content}")

	-->

	<ItemType UNID="&itDataROM;"
			name=				"data ROM"
			level=				"1"
			value=				"0"
			mass=				"1"
			frequency=			"notrandom"
			attributes=			"Info; MinorItem; NotForSale"

			description=		"Data ROMs are used to store everything from personal mail to ship's logs."

			useScreen=			"&dsUseDataROM;"
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

	</ItemType>

	<!-- Neurohack ROM -->

	<ItemType UNID="&itNeurohackROM;"
			name=				"neurohack ROM"
			level=				"10"
			value=				"500"
			mass=				"1"
			frequency=			"notrandom"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, neurohackROM, notForSale, questItem"

			description=		"This ROM enables you to connect to AIs and subdue them."
			
			charges=			"3"
			valueCharges=		"true"
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>
		
		<Invoke>
			(objSendMessage gSource Nil (typTranslate gType 'msgResult))
		</Invoke>

		<Language>
			<Text id="core.charges">charge(s)</Text>
			<Text id="msgResult">Dock with AI to begin neurohack</Text>
		</Language>
	</ItemType>

	<!-- ROM: enhance visual display -->

	<ItemType UNID="&itEnhanceSRSROM;"
			name=				"visual display enhancement ROM"
			level=				"2"
			value=				"150"
			mass=				"1"
			frequency=			"common"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shipEquipment"

			description=		"This ROM enhances a ship's visual display to show the bearing of ships and stations beyond normal visual range."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(switch
					(eq (objGetEquipmentStatus gSource 'SRS) 'damaged)
						(block Nil
							(objChangeEquipmentStatus gSource 'SRS 'repair)
							(objSendMessage gSource Nil (typTranslate gType 'msgRepaired))
							)

					(eq (objGetEquipmentStatus gSource 'SRSEnhancer) 'ready)
						(objSendMessage gSource Nil (typTranslate gType 'msgNoEffect))

					(block Nil
						(objChangeEquipmentStatus gSource 'SRSEnhancer 'install)
						(objSendMessage gSource Nil (typTranslate gType 'msgResult))
						)
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">Visual display enhanced</Text>
			<Text id="msgRepaired">Visual display repaired</Text>
			<Text id="msgNoEffect">Visual display already enhanced</Text>
		</Language>
	</ItemType>

	<!-- ROM: Defective visual display -->

	<ItemType UNID="&itSRSDamageROM;"
			name=				"defective visual display ROM"
			level=				"2"
			value=				"5"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shipEquipment"

			description=		"This ROM would normally enhance a ship's visual display, but a manufacturing defect makes it worse than useless. Plugging this in to your ship's computer will temporarily damage your display screen."

			sortName=			"visual display ROM, defective"
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(objChangeEquipmentStatus gSource 'SRS 'damage 3000)
				(objSendMessage gSource Nil (typTranslate gType 'msgResult))

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">ROM failure: Visual display temporarily damaged</Text>
		</Language>
	</ItemType>

	<!-- System Map ROM -->

	<ItemType UNID="&itSystemMapROM;"
			name=				"system map ROM"
			level=				"2"
			value=				"100"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"consumable, info, systemMap"

			description=		"This program accesses the central cartography libraries to generate a map of the current system."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (mappedAll mapEnemy)
				(setq mappedAll True)

				; Compute the probability of mapping an enemy station
				(switch
					(geq (sysGetLevel) 7)
						(setq mapEnemy 0)

					(geq (sysGetLevel) 3)
						(setq mapEnemy (subtract 360 (multiply 72 (subtract (sysGetLevel) 2))))

					(setq mapEnemy 360)
					)

				; Iterate over all ships and stations in the system we might want to reveal
				(enum (sysFindObject gSource "Ts +property:hasDockingPorts; -property:known;") obj
					(switch
						(and (objMatches obj Nil "T -property:showMapLabel;")
							(not (objMatches obj gSource "*F +majorStation;"))
							)
							Nil
							
						(and (objIsEnemy gSource obj)
							(geq (objGetDestiny obj) mapEnemy)
							)
							(setq mappedAll Nil)

						(objHasAttribute obj "uncharted")
							(setq mappedAll Nil)

						(block Nil
							(objSetKnown obj)
							(enum (objGetProperty obj 'subordinates) sub
								(if (objMatches sub Nil 'T) (objSetKnown sub))
								)
							)
						)
					)

				(if mappedAll
					(objSendMessage gSource Nil (typTranslate &itSystemMapROM; 'mappedAll))
					(objSendMessage gSource Nil (typTranslate &itSystemMapROM; 'mappedCharted))
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>
		
		<Language>
			<Text id="mappedAll">Mapped all stations in system</Text>
			<Text id="mappedCharted">Mapped charted stations in system</Text>
		</Language>
	</ItemType>

	<!-- Military System Map ROM -->

	<ItemType UNID="&itMilitaryMapROM;"
			name=				"military map ROM"
			level=				"4"
			value=				"500"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"consumable, info, military, systemMap"

			description=		"This program accesses military databases to generate a map of enemy stations in the system."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(if	(not (sysFindObject gSource "TsA +commonwealth; +property:hasDockingPorts;"))

					; If there are no commonwealth stations in the system, then we cannot function
					(objSendMessage gSource Nil (typTranslate &itMilitaryMapROM; 'unableToConnect))

					; Otherwise, we map all enemy stations
					(block Nil
						(enum (sysFindObject gSource "ETs") obj
							(objSetKnown obj)
							)

						(objSendMessage gSource Nil (typTranslate &itMilitaryMapROM; 'mappedEnemies))

						; Remove ROM
						(objRemoveItem gSource gItem 1)
						)
					)

				; Identify the item
				(itmSetKnown gItem)
				)
		</Invoke>
		
		<Language>
			<Text id="unableToConnect">Unable to connect to military cartography in this system</Text>
			<Text id="mappedEnemies">Mapped all enemy stations in system</Text>
		</Language>
	</ItemType>

	<!-- Targeting Computer ROM -->

	<ItemType UNID="&itTargetingComputerROM;"
			name=				"targeting program ROM"
			level=				"3"
			value=				"300"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shipEquipment"

			description=		"A targeting program is required to aim guided missiles such as the KM500 Stiletto."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block Nil
				(if (eq (objGetEquipmentStatus gPlayerShip 'TargetingComputer) 'ready)
					(objSendMessage gSource Nil (typTranslate gType 'msgNoEffect))
					(block Nil
						(objChangeEquipmentStatus gPlayerShip 'TargetingComputer 'install)
						(objSendMessage gSource Nil (typTranslate gType 'msgResult))
						)
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">Targeting program installed</Text>
			<Text id="msgNoEffect">Ship already has a targeting program</Text>
		</Language>
	</ItemType>

	<!-- Trading Computer ROM -->

	<ItemType UNID="&itTradingComputerROM;"
			name=				"trading computer ROM"
			level=				"2"
			value=				"300"
			mass=				"1"
			frequency=			"rare"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shipEquipment"

			description=		"A trading computer tracks prices for known stations and suggests the best place to sell commodities."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (
				(hasTradingComputer (= (objGetEquipmentStatus gPlayerShip 'TradingComputer) 'ready))
				)
				;	Handle each of the cases

				(switch
					;	Try to install the trading computer. If it fails, then it means
					;	that we already have a trading computer installed on the ship.

					(not (objChangeEquipmentStatus gPlayerShip 'TradingComputer 'install))
						(objSendMessage gSource Nil (typTranslate gType 'msgNoEffect))
						
					;	If we didn't have a trading computer before, and installation
					;	succeeds, then we've succeeded.

					(not hasTradingComputer)
						(objSendMessage gSource Nil (typTranslate gType 'msgResult))

					;	If we DID have a trading computer before and installation succeeded
					;	anyway, then it means we have a trading computer on some device
					;	(e.g., a cargo hold) and now we have a redundant one installed on
					;	the ship.

					(objSendMessage gSource Nil (typTranslate gType 'msgRedundant))
					)

				;	Identify and remove

				(itmSetKnown gItem)
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgResult">Trading computer installed</Text>
			<Text id="msgNoEffect">Ship already has a trading computer</Text>
			<Text id="msgRedundant">Redundant trading computer installed</Text>
		</Language>
	</ItemType>

<!-- SHIELD ENHANCEMENTS -->

	<!-- ROM: Enhance shields -->

	<ItemType UNID="&itEnhanceShieldsROM;"
			name=				"shield enhancement ROM"
			level=				"2"
			value=				"500"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, shieldEnhance"

			description=		"This ROM upgrades a shield generator so that it is more effective at absorbing damage. The ROM works on generators up to technology level 6."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (notFound)
				; Install
				(setq notFound True)
				(objEnumItems gSource "sI" theItem
					(block (shieldItem)
						(setq shieldItem theItem)
						(if notFound
							(block Nil
								(switch
									; Alien items cannot be enhanced
									(itmHasAttribute shieldItem "Alien")
										(objSendMessage gSource Nil (typTranslate gType 'msgTooAlien))

									; Novaya repairers cannot be enhanced
									(itmHasAttribute shieldItem 'nonEnergyShields)
										(objSendMessage gSource Nil (typTranslate gType 'msgCannotEnhance { itemName:(itmGetName shieldItem '(article short)) }))

									; If the shield generator is too advanced, then nothing happens
									(gr (itmGetLevel shieldItem) 6)
										(objSendMessage gSource Nil (typTranslate gType 'msgTooAdvanced))

									; If the item is damaged, we repair it
									(itmIsDamaged shieldItem)
										(block Nil
											(shpRepairItem gSource theItem)
											(objSendMessage gSource Nil (typTranslate gType 'msgRepaired))
											)

									; Enhance the shield generator
									(block (result)
										(setq result (shpEnhanceItem gSource theItem 0x0102))
										(objSendMessage gSource Nil (intItemEnhanceStatus result "Your shields are more powerful" "shield generator"))
										)
									)
								(setq notFound Nil)
								)
							)
						)
					)

				(if notFound
					(objSendMessage gSource Nil (typTranslate gType 'msgNoShields))
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgCannotEnhance">The ROM cannot enhance %itemName%</Text>
			<Text id="msgTooAlien">Shield generator is too alien for the ROM to enhance</Text>
			<Text id="msgTooAdvanced">Shield generator is too advanced for the ROM to enhance</Text>
			<Text id="msgRepaired">Shield generator has been repaired</Text>
			<Text id="msgNoShields">Shield generator required</Text>
		</Language>
	</ItemType>

	<!-- Diamond field crystal -->

	<ItemType UNID="&itDiamondCrystal;"
			name=				"diamond field crystal"
			level=				"8"
			value=				"40000"
			mass=				"10"
			frequency=			"rare"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, majorItem, shieldEnhance"

			description=		"Diamond field crystals increase the power of tech VII-XII shield generators. Unlike other field crystals, a generator can use multiple diamond field crystals."
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalUse 0x0100 "Your shields are more powerful")
		</Invoke>
	</ItemType>

	<!-- Yellow Etherium field crystal -->

	<ItemType UNID="&itYellowEtheriumCrystal;"
			name=				"yellow etherium field crystal"
			level=				"11"
			value=				"300000"
			mass=				"10"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, majorItem, shieldEnhance"

			description=		"Yellow etherium is used to create energy fields that reflect positron energy. Unfortunately, it has a limited duration."

			enhancement=		"0x0369"
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalInstall &itYellowEtheriumCrystal; (random 30000 40000))
		</Invoke>
		
		<Events>
			<OnAddedAsEnhancement>
				(objSendMessage gSource Nil (cat
					"Your shields now reflect positron damage"
					(if (eq aResult 6) " (previous enhancement lost)" "")
					))
			</OnAddedAsEnhancement>
			
			<OnRemovedAsEnhancement>
				(objSendMessage gSource Nil "Yellow etherium crystal has burned out")
			</OnRemovedAsEnhancement>
		</Events>
	</ItemType>

	<!-- Decayed Etherium field crystal -->

	<ItemType UNID="&itDecayedEtheriumCrystal;"
			name=				"decayed etherium field crystal"
			level=				"7"
			value=				"10"
			mass=				"10"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, minorItem, shieldEnhance"

			description=		"In pristine state, this field crystal is used to reflect ion energy. But this decayed crystal would do more harm than good."
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalUse 0x834A "Your shields fade")
		</Invoke>
	</ItemType>

	<!-- Blue Etherium field crystal -->

	<ItemType UNID="&itBlueEtheriumCrystal;"
			name=				"blue etherium field crystal"
			level=				"8"
			value=				"60000"
			mass=				"10"
			frequency=			"uncommon"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, majorItem, shieldEnhance"

			description=		"Blue etherium is used to create energy fields that reflect ion energy. Unfortunately, it has a limited duration."
			
			enhancement=		"0x0349"
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalInstall &itBlueEtheriumCrystal; (random 30000 40000))
		</Invoke>
		
		<Events>
			<OnAddedAsEnhancement>
				(objSendMessage gSource Nil (cat
					"Your shields now reflect ion damage"
					(if (eq aResult 6) " (previous enhancement lost)" "")
					))
			</OnAddedAsEnhancement>
			
			<OnRemovedAsEnhancement>
				(objSendMessage gSource Nil "Blue etherium crystal has burned out")
			</OnRemovedAsEnhancement>
		</Events>
	</ItemType>

	<!-- Molbidium field crystal -->

	<ItemType UNID="&itMolbidiumCrystal;"
			name=				"molbidium field crystal"
			level=				"7"
			value=				"25000"
			mass=				"10"
			frequency=			"common"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, majorItem, shieldEnhance"

			description=		"Molbidium crystals are often used to increase the power density of shield generators."
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalUse 0x0103 "Your shields are more powerful")
		</Invoke>
	</ItemType>

	<!-- Green Etherium field crystal -->

	<ItemType UNID="&itGreenEtheriumCrystal;"
			name=				"green etherium field crystal"
			level=				"6"
			value=				"10000"
			mass=				"10"
			frequency=			"common"
			unknownType=		"&vtUnknownFieldCrystal;"
			attributes=			"fieldCrystal, majorItem, shieldEnhance"

			description=		"Green etherium is used to create energy fields that reflect particle beam energy. Unfortunately, it has a limited duration."

			enhancement=		"0x0329"
			>

		<Image imageID="&rsItems1;" imageX="288" imageY="384" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intFieldCrystalInstall &itGreenEtheriumCrystal; (random 30000 40000))
		</Invoke>
		
		<Events>
			<OnAddedAsEnhancement>
				(objSendMessage gSource Nil (cat
					"Your shields now reflect particle damage"
					(if (eq aResult 6) " (previous enhancement lost)" "")
					))
			</OnAddedAsEnhancement>
			
			<OnRemovedAsEnhancement>
				(objSendMessage gSource Nil "Green etherium crystal has burned out")
			</OnRemovedAsEnhancement>
		</Events>

		<Language>
			<Text id="msgCannotEnhance">Field crystal not compatibile with %itemName%</Text>
		</Language>
	</ItemType>

	<!-- Field Crystal, Unknown -->

	<ItemType UNID="&vtUnknownFieldCrystal;"
			name=				"energy field crystal(s)"
			virtual=			"true"
			level=				"7"
			value=				"1000"
			attributes=			"unknown"

			description=		"These rare crystals are used to modulate energy fields, such as those created by shield generators. Unfortunately, you cannot decode the crystal's markings."
			>

		<Names>field crystal(s) marked "AK3GH1"; field crystal(s) marked "B8K1GA";
			field crystal(s) marked "C0M9JH"; field crystal(s) marked "D930JA";
			field crystal(s) marked "E2E8MO"; field crystal(s) marked "F3K9BA";
			field crystal(s) marked "G1 rating"; field crystal(s) marked "H-field compatible";
			field crystal(s) marked "I3MO7A"; field crystal(s) marked "J3 rating";
			field crystal(s) marked "K-field neutral"; field crystal(s) marked "L1Z3GA";
			field crystal(s) marked "M7 inducer"; field crystal(s) marked "N4M1ZA";
			field crystal(s) marked "O3-field compatible"; field crystal(s) marked "P93MA8";
			field crystal(s) marked "Q inducer"; field crystal(s) marked "R-field compatible";
			field crystal(s) marked "S-field neutral"; field crystal(s) marked "T1 inducer";
			field crystal(s) marked "UV8 antagonist"; field crystal(s) marked "V3TA2B";
			field crystal(s) marked "W3 range"; field crystal(s) marked "X4";
			field crystal(s) marked "Z-field neutral"
		</Names>

	</ItemType>

<!-- WEAPON ENHANCEMENTS -->

	<!-- Laser Amplifier -->

	<ItemType UNID="&itLaserAmplifier;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"laser amplifier"
			level=				"1"
			value=				"150"
			mass=				"25"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"Laser amplifiers are used to repair and upgrade laser weapons."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:laser;"	repair:True	}
					{	criteria:"w~l +damageType:laser;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:laser;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Kinetic Upgrade -->

	<ItemType UNID="&itKineticUpgrade;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"kinetic upgrade"
			level=				"2"
			value=				"200"
			mass=				"50"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"Kinetic upgrades increase the damage of a kinetic weapon."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:kinetic;"	repair:True	}
					{	criteria:"w~l +damageType:kinetic;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:kinetic;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Particle Upgrade -->

	<ItemType UNID="&itParticleUpgrade;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"particle source upgrade"
			level=				"4"
			value=				"1100"
			mass=				"25"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"This weapon upgrade increases the power of particle beams."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:particle;"	repair:True	}
					{	criteria:"w~l +damageType:particle;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:particle;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Blast Upgrade -->

	<ItemType UNID="&itBlastUpgrade;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"hexagene booster"
			level=				"5"
			value=				"1400"
			mass=				"75"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"This high-explosive upgrade increases the damage done by blast weapons."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:blast;"	repair:True	}
					{	criteria:"w~l +damageType:blast;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:blast;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Ion Upgrade -->

	<ItemType UNID="&itIonUpgrade;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"ion power capacitor"
			level=				"7"
			value=				"10500"
			mass=				"50"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"Ion power capacitors are used to increase the destructive power of ion weapons."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:ion;"	repair:True	}
					{	criteria:"w~l +damageType:ion;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:ion;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Thermo Upgrade -->

	<ItemType UNID="&itThermoUpgrade;"
			inherit=			"&baStdDeviceEnhancement;"
			name=				"tritium injector"
			level=				"8"
			value=				"13000"
			mass=				"150"
			frequency=			"uncommon"
			attributes=			"minorItem, weaponEnhance"

			description=		"This weapon upgrade increases the damage done by thermo weapons."

			useScreen=			"&dsRPGUseItemOnDevice;"
			>

		<Properties>
			<Constant id="rpg.enhancementTable">
				'(
					{	criteria:"Dw~l +damageType:thermo;"	repair:True	}
					{	criteria:"w~l +damageType:thermo;"	enhancement:"+hpBonus"	}
					)
			</Constant>

			<Constant id="rpg.useCriteria">"w~l +damageType:thermo;"</Constant>
		</Properties>

		<Image imageID="&rsItems1;" imageX="192" imageY="576" imageWidth="96" imageHeight="96"/>
	</ItemType>

	<!-- Weapon Enhancement ROM -->

	<ItemType UNID="&itWeaponSpeedROM;"
			name=				"weapon optimizer ROM"
			level=				"3"
			value=				"750"
			mass=				"1"
			frequency=			"uncommon"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, weaponEnhance"

			description=		"This ROM increases the rate of fire of the ship's primary weapon."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(intEnhanceWeaponUse 0x1002 Nil "has an improved fire rate" 6)
		</Invoke>
	</ItemType>

	<!-- Defective Weapon Enhancement ROM -->

	<ItemType UNID="&itDamageWeaponROM;"
			name=				"defective weapon enhancement ROM"
			level=				"3"
			value=				"5"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, weaponDamage"

			description=		"Because of a manufacturing defect, this ROM damages the ship's primary weapon when installed."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (
				(theWeapon (objGetProperty gSource 'selectedWeapon))
				(data { weapon:(itmGetName theWeapon 'noModifiers) } )
				)
				(if theWeapon
					(block Nil
						(switch
							(itmGetProperty theWeapon 'damaged)
								(objSendMessage gSource Nil (typTranslate gType 'msgAlreadyDamaged data))
								
							(itmIsEnhanced theWeapon)
								(objSendMessage gSource Nil (typTranslate gType 'msgEnhancementLost data))
							
							(objSendMessage gSource Nil (typTranslate gType 'msgWeaponDamaged data))
							)
							
						(shpDamageItem gSource theWeapon)
						
						; Identify the item
						(itmSetKnown gItem)

						; Remove ROM
						(objRemoveItem gSource gItem 1)
						)
					
					(objSendMessage gSource Nil (typTranslate gType 'msgNoPrimary))
					)
				)
		</Invoke>
		
		<Language>
			<Text id="msgAlreadyDamaged">The defective ROM had no effect on your damaged %weapon%</Text>
			<Text id="msgEnhancementLost">Your %weapon% lost its enhancement due to a defective ROM</Text>
			<Text id="msgWeaponDamaged">Your %weapon% was damaged by a defective ROM</Text>
			<Text id="msgNoPrimary">Primary weapon required</Text>
		</Language>
	</ItemType>

<!-- HIRO'S ALGORITHMS -->

	<!-- Hiro's Shield Optimizer -->

	<ItemType UNID="&itHiroShieldOptimizer;"
			name=				"Hiro's shield optimizer"
			level=				"4"
			value=				"5000"
			mass=				"1"
			frequency=			"veryrare"
			unknownType=		"&itUnknownROM;, &itUnknownROMB;, &itUnknownROMC;"
			attributes=			"info, minorItem, notForSale, shieldEnhance"

			description=		"One of Hiro's first creations, this ROM can increase the strength of any shield generator up to tech level 6."
			>

		<Image imageID="&rsItems1;" imageX="192" imageY="96" imageWidth="96" imageHeight="96"/>

		<Invoke>
			(block (notFound)
				; Install
				(setq notFound True)
				(objEnumItems gSource "sI" theItem
					(block (shieldItem)
						(setq shieldItem theItem)
						(if notFound
							(block Nil
								(switch
									; Novaya repairers cannot be enhanced
									(itmHasAttribute shieldItem 'nonEnergyShields)
										(objSendMessage gSource Nil (typTranslate gType 'msgCannotEnhance { itemName:(itmGetName shieldItem '(article short)) }))

									; If the shield generator is too advanced, then nothing happens
									(gr (itmGetLevel shieldItem) 6)
										(objSendMessage gSource Nil (typTranslate gType 'msgTooAdvanced))

									; If the item is damaged, we repair it
									(itmIsDamaged shieldItem)
										(block Nil
											(shpRepairItem gSource theItem)
											(objSendMessage gSource Nil (typTranslate gType 'msgRepaired))
											)

									; Enhance the shield generator
									(block (result)
										(setq result (shpEnhanceItem gSource theItem 0x0105))
										(objSendMessage gSource Nil (intItemEnhanceStatus result "Hiro: Shield optimization complete" "shield generator"))
										)
									)
								(setq notFound Nil)
								)
							)
						)
					)

				(if notFound
					(objSendMessage gSource Nil "Hiro: No shield found. ROM abort.")
					)

				; Identify the item
				(itmSetKnown gItem)

				; Remove ROM
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Language>
			<Text id="msgCannotEnhance">Hiro: Non-energy shield found. ROM abort.</Text>
			<Text id="msgTooAdvanced">Hiro: Shield tech too high. ROM abort.</Text>
			<Text id="msgRepaired">Hiro: Shield repair algorithm successful.</Text>
		</Language>
	</ItemType>
	
<!-- DOCK SCREENS -->

	<!-- Use Armor Patch
	
	GLOBAL DATA
	
	skillLevel:			Total number of successful uses
	
	-->

	<DockScreen UNID="&dsUseArmorPatch;"
			name=				"Ship's Interior"
			type=				"itemPicker"
			>

		<ListOptions
			dataFrom=	"player"
			list=		"aI"
			/>
			
		<InitialPane>
			(switch
				(not (itmIsKnown gItem))
					"UnknownBarrel"
					
				"Default"
				)
		</InitialPane>
			
		<Panes>
			<Default>
				<OnPaneInit>
					(block (type damage desc skillLevel)
						; Init skill level
						(setq skillLevel (typGetGlobalData &dsUseArmorPatch; "skillLevel"))
						(if (not skillLevel)
							(block Nil
								(typSetGlobalData &dsUseArmorPatch; "skillLevel" 0)
								(setq skillLevel 0)
								)
							)
							
						; Intro, if necessary
						
						(setq desc (objFireItemEvent gSource gItem "GetRepairItemIntro"))
						(if (not desc)
							(setq desc "")
							)
							
						; Figure out which segment we're repairing and describe its condition
						
						(setq gArmorSegment (itmGetArmorInstalledLocation (scrGetItem gScreen)))
						(setq type (objGetArmorType gPlayerShip gArmorSegment))
						(setq damage (objGetArmorDamage gPlayerShip gArmorSegment))
						(setq desc (cat desc "The ship's " (objGetArmorName gPlayerShip gArmorSegment) " " (armGetName type)))
						(setq gCanRepair True)
						(switch
							(eq damage 0)
								(block Nil
									(setq desc (cat desc " is not damaged."))
									(setq gCanRepair Nil)
									)

							(eq damage 1)
								(setq desc (cat desc " has sustained 1 point of damage."))

							(setq desc (cat desc " has sustained " damage " points of damage."))
							)
							
						; See if we can repair it with the given item
						
						(if gCanRepair
							(block Nil
								(setq aItemToRepair (scrGetItem gScreen))
								(if (not (objFireItemEvent gSource gItem "CanRepairItem"))
									(block Nil
										(setq desc (cat desc
											"\n\nUnfortunately, it cannot be repaired with the " (itmGetName gItem 0) "."
											))
										(setq gCanRepair Nil)
										)
									)
								)
							)
						
						; Skill level
						(switch
							(not gCanRepair)
								Nil
								
							(ls skillLevel 2)
								(setq desc (cat desc
									"\n\nYou do not have much experience repairing your own armor."
									))
									
							(ls skillLevel 5)
								(setq desc (cat desc
									"\n\nYou have some experience repairing your own armor."
									))
									
							(ls skillLevel 10)
								(setq desc (cat desc
									"\n\nYou are proficient at repairing your own armor."
									))
									
							(setq desc (cat desc
								"\n\nYou are an expert at repairing your own armor."
								))
							)

						(scrSetDesc gScreen desc)

						; Disable actions if we cannot repair
						(scrEnableAction gScreen 0 gCanRepair)
						)
				</OnPaneInit>

				<Actions>
					<Action name="Repair this Armor Segment" key="R" default="1">
						(block Nil
							(setq gTitle (useRepairArmor gItem gArmorSegment))
							(scrShowPane gScreen "Done")
							)
					</Action>

					<Action name="Cancel" cancel="1" key="C">
						<Exit/>
					</Action>
					
				</Actions>
			</Default>
			
			<UnknownBarrel>
				<OnPaneInit>
					(block (desc type)
						(setq gArmorSegment (itmGetArmorInstalledLocation (scrGetItem gScreen)))
						(setq type (objGetArmorType gPlayerShip gArmorSegment))
						(if (itmIsKnown gItem)
							(setq desc (cat "You can use the " (itmGetName gItem 0) " on"))
							(setq desc (cat "The barrel seems to contain some kind of armor paste. You can use it on"))
							)

						(scrSetDesc gScreen (cat desc " your ship's " (objGetArmorName gPlayerShip gArmorSegment) " " (armGetName type) "."))
						)
				</OnPaneInit>

				<Actions>
					<Action name="Use on this Armor Segment" key="U" default="1">
						(block Nil
							; Identify the item [we do this first because we want to refer
							; to the barrel by its real name]
							(itmSetKnown gItem)

							; Repair
							(setq gTitle (useRepairArmor gItem gArmorSegment))
							(setq gTitle (cat
								(itmGetStaticData gItem "BarrelDesc") "\n\n"
								gTitle
								))
								
							(scrShowPane gScreen "Done")
							)
					</Action>

					<Action name="Cancel" key="C" cancel="1">
						<Exit/>
					</Action>
				</Actions>
			</UnknownBarrel>

			<Done 
					desc="=gTitle"
					noListNavigation="true"
					>

				<Actions>
					<Action name="Done" cancel="1" default="1" key="D">
						<Exit/>
					</Action>
				</Actions>
			</Done>
		</Panes>
	</DockScreen>

<!-- BASE CLASSES -->

	<ItemType unid="&baCashCard;"
			name=			"(cash card base)"
			virtual=		"true"
			level=			"1"
			>
		<Invoke>
			(block (
				(amount (or
					(itmGetData gItem 'card.balance)
					(eval (itmGetStaticData gItem 'card.balance))
					))
				)
				;	Give money to whomever invoked it.

				(objSendMessage gSource Nil (typTranslate gType 'msgCashDeposited {
					amount: (fmtCurrency 'credit amount)
					}))
				(objCredit gSource amount)

				;	Remove the item and identify it.

				(itmSetKnown gItem)
				(objRemoveItem gSource gItem 1)
				)
		</Invoke>

		<Events>
			<GetTradePrice>
				(or (itmGetData gItem 'card.balance)
					(itmGetPrice gItem)
					)
			</GetTradePrice>
		</Events>

		<Language>
			<Text id="msgCashDeposited">
				%amount% deposited to your account.
			</Text>
		</Language>
	</ItemType>

<!-- GLOBALS -->

	<Globals>
		(block Nil
			(setq intFieldCrystalInstall (lambda (enhancementType theLifetime)
				(block (theShields)
					(switch
						; Must have a shield generator
						(not (setq theShields (item (objGetItems gSource "sI") 0)))
							(objSendMessage gSource Nil "Shield generator required")

						; Novaya repairers cannot be enhanced
						(itmHasAttribute theShields 'nonEnergyShields)
							(objSendMessage gSource Nil (typTranslate &itGreenEtheriumCrystal; 'msgCannotEnhance { itemName:(itmGetName theShields '(article short)) }))

						; If the shield generator is not advanced enough, then nothing happens
						(ls (itmGetLevel theShields) 7)
							(objSendMessage gSource Nil "Shield generator is too primitive for the field crystal")
							
						; If the shield generator is too advanced, then nothing happens
						(gr (itmGetLevel theShields) 12)
							(objSendMessage gSource Nil "Shield generator is too advanced for the field crystal")

						; Damage items cannot be enhanced
						(itmIsDamaged theShields)
							(objSendMessage gSource Nil "This crystal cannot enhance a damaged shield generator")
							
						; Enhance!
						(block Nil
							; Add enhancement
							(if (not (objAddItemEnhancement gSource theShields enhancementType theLifetime))
								(objSendMessage gSource Nil "The crystal has no effect")
								)

							; Identify the item
							(itmSetKnown gItem)

							; Remove ROM
							(objRemoveItem gSource gItem 1)
							)
						)
					)
				))

			(setq intFieldCrystalUse (lambda (newMods successText)
				(block (notFound)
					; Install
					(setq notFound True)
					(objEnumItems gSource "sI" theItem
						(block (shieldItem)
							(setq shieldItem theItem)
							(if notFound
								(block Nil
									(switch
										; Novaya repairers cannot be enhanced
										(itmHasAttribute shieldItem 'nonEnergyShields)
											(objSendMessage gSource Nil (typTranslate &itGreenEtheriumCrystal; 'msgCannotEnhance { itemName:(itmGetName shieldItem '(article short)) }))

										; If the shield generator is not advanced enough, then nothing happens
										(ls (itmGetLevel shieldItem) 7)
											(objSendMessage gSource Nil "Shield generator is too primitive for the field crystal")

										; If the shield generator is too advanced, then nothing happens
										(gr (itmGetLevel shieldItem) 12)
											(objSendMessage gSource Nil "Shield generator is too advanced for the field crystal")

										; If the item is damaged, we repair it
										(and (itmIsDamaged shieldItem) (ls newMods 0x8000))
											(block Nil
												(shpRepairItem gSource theItem)
												(objSendMessage gSource Nil "Shield generator has been repaired")
												
												; Remove ROM
												(objRemoveItem gSource gItem 1)
												)

										; Enhance the shield generator
										(block (result)
											(setq result (shpEnhanceItem gSource theItem newMods))
											(objSendMessage gSource Nil (intItemEnhanceStatus result successText "shield generator"))
											
											; Identify the item
											(itmSetKnown gItem)

											; Remove ROM
											(objRemoveItem gSource gItem 1)
											)
										)
									(setq notFound Nil)
									)
								)
							)
						)

					(if notFound
						(objSendMessage gSource Nil "Shield generator required")
						)
					)
				))

			(setq intEnhanceWeaponUse (lambda (newMods damageType successText maxLevel)
				(block (notFound)
					(if (not maxLevel) (setq maxLevel 10))
					; Install
					(setq notFound True)
					(objEnumItems gSource "w~lI" theItem
						(block (weaponItem)
							(setq weaponItem theItem)
							(if (and 
									notFound 
									(or (not damageType) (eq (itmGetDamageType weaponItem) damageType))
									(eq (shpGetItemDeviceName gSource weaponItem) 0)
									)
								(block Nil
									(switch
										; If the weapon is too advanced, it doesn't work
										(gr (itmGetLevel weaponItem) maxLevel)
											(objSendMessage gSource Nil (cat "Your " (itmGetName weaponItem 32) " is too advanced to be optimized"))
												
										; If the item is damaged, we repair it
										(and (itmIsDamaged weaponItem) (ls newMods 0x8000))
											(block Nil
												(shpRepairItem gSource theItem)
												(objSendMessage gSource Nil (cat (itmGetName weaponItem 33) " has been repaired"))
												)

										; Enhance the weapon
										(block (result)
											(setq result (shpEnhanceItem gSource theItem newMods))
											(objSendMessage gSource Nil (intItemEnhanceStatus result (cat "Your " (itmGetName weaponItem 32) " " successText) (cat "your " (itmGetName weaponItem 32))))
											)
										)
									(setq notFound Nil)
									)
								)
							)
						)

					; Item is identified

					(itmSetKnown gItem)

					; If we did not find a weapon to enhance, then no effect. Otherwise
					; we consume the item

					(if notFound
						(objSendMessage gSource Nil "The enhancement has no effect")
						(objRemoveItem gSource gItem 1)
						)
					)
				))
				
			(setq useRepairArmor (lambda (theItem theSegment)
				(block (needsRepair resultText)
					(setq needsRepair (gr (objGetArmorDamage gPlayerShip theSegment) 0))
					
					(if needsRepair
						(block (repair failureChance skillLevel usedUp)
							(setq skillLevel (typGetGlobalData &dsUseArmorPatch; "skillLevel"))
							(setq repair (eval (itmGetStaticData theItem "RepairHP")))
							
							; If the repairing item is damaged armor, then we don't repair as much
							(if (itmMatches theItem "aD")
								(setq repair (divide repair 2))
								)

							; As skill level increased, the player's failure chance
							; decreases. Also the amount of hp repaired increased.
							(switch
								(ls skillLevel 2)
									(block Nil
										(setq failureChance 20)
										(setq repair (divide (multiply repair 80) 100))
										)

								(ls skillLevel 5)
									(setq failureChance 10)

								(ls skillLevel 10)
									(block Nil
										(setq failureChance 5)
										(setq repair (divide (multiply repair 110) 100))
										)

								(block Nil
									(setq failureChance 0)
									(setq repair 
										(divide (multiply repair (min (add 70 (multiply skillLevel 5)) 200)) 100)
										)
									)
								)
								
							; Do the repairs
							(setq usedUp 100)
							(switch
								(not repair)
									(setq resultText "ERROR: &lt;RepairHP&gt; static data not found.")

								(leq (random 1 100) failureChance)
									(if (eq (random 1 2) 1)
										; Sometimes we fail and damage the armor
										(block Nil
											(shpDamageArmor gPlayerShip theSegment 7 (divide (multiply repair (random 20 100)) 100))
											(setq resultText "Unfortunately, your attempt to repair the armor has only damaged it further.")
											)
											
										; Sometimes we fail without damaging further
										(block Nil
											(setq resultText (cat 
												"Unfortunately, your attempt to repair the armor was unsuccessful "
												"and the " (itmGetName theItem 0) " was ruined in the process."
												))
											)
										)

								(block (hpRepaired)
									(setq hpRepaired (objRepairArmor gPlayerShip theSegment repair))
									(setq resultText (cat 
										"You have successfully repaired " hpRepaired
										(if (eq hpRepaired 1) " hit point " " hit points ")
										"of damage to your armor."
										))
										
									; How much of the kit did we use?
									(if (gr repair 0)
										(setq usedUp (divide (multiply 100 hpRepaired) repair))
										)
										
									; Skill level increases
									(typIncGlobalData &dsUseArmorPatch; "skillLevel" 1)
									)
								)
								
							; Use up the item
							(if (or (ls skillLevel 10)
									(geq usedUp 20)
									(leq (random 1 100) (add usedUp 20))
									)
								(objRemoveItem gPlayerShip theItem 1)
								
								; Item is not used up
								(setq resultText (cat resultText 
									"\n\nThere is still enough of the " (itmGetName theItem 0)
									" left to repair other segments."
									))
								)
							)

						(setq resultText "That armor segment is not damaged. There is no need to attempt repairs.")
						)

					resultText
					)
				))
			)
	</Globals>

</TranscendenceModule>
