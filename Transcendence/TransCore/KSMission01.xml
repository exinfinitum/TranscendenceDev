<?xml version="1.0" ?>

<TranscendenceModule>

	<!-- Mission: Escort =======================================================

	The standard Korolov escort mission rewritten using MissionType

	EXTRA DATA

	reward:			Reward (in credits) for completing mission
	freighterID:	ID of freighter to escort
	destID:			ID of destination (station or gate)
	escortType:		Type of freighter being escorted
	missionXP:		XP awarded for completing mission
	cargoValue:		Value of cargo in freighter
	playerDestroyedFreighter:	True if player destroyed the freighter (will be blacklisted)

	======================================================================== -->

	<MissionType UNID="&msKorolovEscort;"
			name=			"Korolov Escort (standard)"
			attributes=		"korolov, escort"

			level=			"1-5"
			>

		<Events>
			<OnCreate>
				(block (
					(playerLevel (korGetPlayerLevel))
					
					;	If passed in, we create a mission for this freighter
					
					(freighterObj (@ gData 'freighterObj))
					
					;	Otherwise, we generate a list of docked freighters so we
					;	can pick a random one.
					;
					;	We filter down to the list of freighters that the player is
					;	qualified to escort (and that she hasn't already declined)
					
					(dockedFreighters
						(filter
							(sysFindObject aOwnerObj "sHZ O:docked; +commonwealth; +freighter;")
							theFreighter
							(and
								(not (objGetObjRefData theFreighter "korolovDest"))
								(not (objGetData theFreighter "korolovPlayerEscort"))
								(geq playerLevel (objGetStaticData theFreighter "korolovMinLevel"))
								(geq (shpGetMaxSpeed gPlayerShip) (+ (shpGetMaxSpeed theFreighter) 2))
								)
							)
						)
					
					;	Get the list of all stations that we might visit. Include stargates twice
					;	so thay they have more chances to be chosen
					
					(destList
						(filter
							(append
								(sysFindObject aOwnerObj "TAF +populated; -occupation; -uncharted; -outlaws;")
								(sysFindObject aOwnerObj "G -uncharted;")
								(sysFindObject aOwnerObj "G -uncharted;")
								)
							theDest
							; The minimum travel distance depends on the player's level
							(and
								(geq (objGetDistance aOwnerObj theDest) (@ '(250 250 400 500 600) playerLevel))
								(not (objGetData theDest 'noTraffic))
								)
							)
						)
					
					destObj
					)
					(switch
						; Finite number of missions per station
						(ls (objGetData aOwnerObj 'remainingMissions) 1)
							(msnDestroy gSource)

						; Only offer to new pilots and levels 1-3
						(not (find '(0 1 2 3) playerLevel))
							(msnDestroy gSource)

						; No missions once the stronghold is destroyed
						(objIsAbandoned (objGetObjRefData aOwnerObj 'charonStronghold))
							(msnDestroy gSource)

						; Pick a random freighter. If we can't find one there is no mission
						(and (not freighterObj) 
								(not (setq freighterObj (random dockedFreighters)))
								)
							(msnDestroy gSource)

						; Pick a random destination. If we can't find one there is no mission
						(not (setq destObj (random destList)))
							(msnDestroy gSource)

						; Otherwise setup mission
						(block (
							(gateMission (objMatches destObj Nil "G"))
							(escortType (objGetType freighterObj))
							(escortData (korCalculateCargo escortType playerLevel gateMission))
							cargoValue
							)
							
							; Load the freighter with cargo
							(korEmptyFreighter freighterObj)
							(setq cargoValue (korFillFreighter freighterObj (@ escortData 'pricePerContainer)))

							; Mission settings
							(msnSetData gSource 'freighterID (objGetID freighterObj))
							(msnSetData gSource 'destID (objGetID destObj))

							(msnSetData gSource 'escortType escortType)
							(msnSetData gSource 'missionXP (if gateMission 75 100))
							(msnSetData gSource 'cargoValue (@ escortData 'cargoValue))
							(msnSetData gSource 'reward (@ escortData 'escortFee))

							; Remember the minimum player level to escort and the minimum
							; player speed.
							(msnSetData gSource 'minPlayerLevel (objGetStaticData freighterObj "korolovMinLevel"))
							(msnSetData gSource 'minPlayerSpeed (+ (shpGetMaxSpeed freighterObj) 2))
							
							; Remember the mission for this transport, so we don't
							; change it later.
							(objSetData freighterObj 'missionID (objGetID gSource))
							(objSetObjRefData freighterObj "korolovDest" destObj)

							; Remember freighter and destination, in case they get destroyed
							
							(msnRegisterForEvents gSource destObj)
							(msnRegisterForEvents gSource freighterObj)
							)
						)
					)
			</OnCreate>
			
			<OnDestroy>
				(block (
					(freighterObj (objGetObjByID (msnGetData gSource 'freighterID)))
					)
					(if freighterObj
						(objSetData freighterObj 'missionID Nil)
						)
					)
			</OnDestroy>

			<OnAcceptedUndock>
				(block (
					(destObj (objGetObjByID (msnGetData gSource 'destID)))
					(freighterObj (objGetObjByID (msnGetData gSource 'freighterID)))
					(stationObj (objGetObjByID (msnGetProperty gSource 'ownerID)))
					)
					(objSetObjRefData freighterObj "korolovDest" Nil)
					(objSetData freighterObj "korolovPlayerEscort" True)

					; Order the freighter
					(shpCancelOrders freighterObj)
					(if (objMatches destObj Nil "G")
						(shpOrder freighterObj 'gate destObj)
						(block Nil
							(shpOrder freighterObj 'dock destObj)
							(shpOrder freighterObj 'wait Nil (random 3 6))
							(shpOrder freighterObj 'dock stationObj)
							)
						)

					(objSendMessage gPlayerShip freighterObj
						(msnTranslate gSource (cat "msgBeginEscort:" (random 1 6)) {
							shipName: (objGetName freighterObj)
							destName: (objGetName destObj)
							})
						)
					(objSetIdentified freighterObj)

					; Order the pirates
					(chrRaidTransport freighterObj stationObj destObj (msnGetData gSource 'cargoValue))
					)
			</OnAcceptedUndock>

			<OnSetPlayerTarget>
				(rpgSetTarget gSource aReason (objGetObjByID (msnGetData gSource 'freighterID)) 'escort)
			</OnSetPlayerTarget>

			<OnCompleted>
				(block (
					(freighterObj (objGetObjByID (msnGetData gSource 'freighterID)))
					)
					(korEscortMissionCompleted gSource aReason gData)
					
					;	Clear out the mission object from this freighter so that the freighter can
					;	get a new mission.
					
					(if freighterObj
						(objSetData freighterObj 'missionID Nil)
						)
					)
			</OnCompleted>

			<OnReward>
				(korGiveReward gSource)
			</OnReward>

			<OnObjDestroyed>
				(switch
					;	If the mission hasn't started yet, and either the freighter or the destination
					;	have been destroyed, then we cancel the mission.

					(and (msnGetProperty gSource 'isOpen)
							(or (= (objGetID aObjDestroyed) (msnGetData gSource 'freighterID))
									(= (objGetID aObjDestroyed) (msnGetData gSource 'destID))
									)
							)
						(msnDestroy gSource)

					;	If the freighter entered a stargate, then nothing to do.

					(= aDestroyReason 'enteredStargate)
						Nil

					;	If the freighter has been destroyed, then the mission fails

					(= (objGetID aObjDestroyed) (msnGetData gSource 'freighterID))
						(block Nil
							(msnSetData gSource 'playerDestroyedFreighter (and gPlayerShip (= aOrderGiver gPlayerShip)))
							(msnFailure gSource)
							)
					)
			</OnObjDestroyed>

			<OnObjDocked>
				(switch
					; If a freighter on a mission docked, then mission is successful
					(and
						(= (objGetID aObjDocked) (msnGetData gSource 'freighterID))
						(= (objGetID aDockTarget) (msnGetProperty gSource 'ownerID))
						)
						(block Nil
							(objSetData aObjDocked "korolovPlayerEscort" Nil)
							(msnSuccess gSource)
							)
					)
			</OnObjDocked>

			<OnObjEnteredGate>
				(switch
					; If a freighter on a mission, then mission is successful
					(= (objGetID aObj) (msnGetData gSource 'freighterID))
						(msnSuccess gSource)
					)
			</OnObjEnteredGate>
		</Events>

		<Image	imageID="&rsKorolovLogo;" imageWidth="152" imageHeight="150"/>

		<Language>
			<Text id="Name">
				Escort Korolov Freighter
			</Text>

			<Text id="Summary">
				(block (
					(ship (objGetObjByID (msnGetData gSource 'freighterID)))
					(dest (objGetObjByID (msnGetData gSource 'destID)))
					)
					(msnTranslate gSource 'textSummary {
						shipName: (objGetName ship 'article)
						destName: (objGetName dest 'article)
						systemName: (sysGetName)
						payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
						})
					)
			</Text>
			<Text id="textSummary">
				Your mission is to escort %shipName% to %destName% and defend it from any attackers.

				System: %systemName%\n
				Payment: %payment%
			</Text>
			<Text id="listSummary">
				(block (
					(ship (objGetObjByID (msnGetData gSource 'freighterID)))
					(dest (objGetObjByID (msnGetData gSource 'destID)))
					(destName (objGetName dest 'article))
					(paymentValue (msnGetData gSource 'reward))
					(payment 
						(if (= paymentValue 0)
							(msnTranslate gSource 'listSummary.noPayment)
							(fmtCurrency 'credit paymentValue)
							)
						)
					)
					(switch
						(objMatches dest Nil "G")
							(msnTranslate gSource 'listSummary.toGate { destName:destName payment:payment })
							
						(msnTranslate gSource 'listSummary.roundTrip { destName:destName payment:payment })
						)
					)
			</Text>
			<Text id="listSummary.noPayment">N/A</Text>
			<Text id="listSummary.roundTrip">
				From Korolov Shipping to %destName% and back\n
				Payment: %payment%
			</Text>
			<Text id="listSummary.toGate">
				From Korolov Shipping to %destName%\n
				Payment: %payment%
			</Text>
			
			<Text id="Briefing">
				(block (
					(ship (objGetObjByID (msnGetData gSource 'freighterID)))
					(dest (objGetObjByID (msnGetData gSource 'destID)))
					(cargoValue (intRoundUp (msnGetData gSource 'cargoValue) 1000))
					)
					(msnTranslate gSource
						(if (objMatches dest Nil "G")
							"textBriefing:toGate"
							"textBriefing:roundTrip"
							)
						{
							shipName: (objGetName ship 'article)
							shipClass: (shpGetClassName ship 4)
							cargoValue: (fmtCurrency 'credit cargoValue)
							destName: (objGetName dest 'article)
							payment: (fmtCurrency 'credit (msnGetData gSource 'reward))
							}
						)
					)
			</Text>
			<Text id="textBriefing:roundTrip">
					%ShipName% (%shipClass%) is transporting %cargoValue% worth of cargo.
					She will pay %payment% if you escort her safely to %destName% and back again.

					Do you wish to accept this assignment?
			</Text>
			<Text id="textBriefing:toGate">
					%ShipName% (%shipClass%) is transporting %cargoValue% worth of cargo.
					She will pay %payment% if you escort her safely to %destName%.

					Do you wish to accept this assignment?
			</Text>

			<String id="AcceptReply">
				"Great! Keep that freighter safe. Good luck!"
			</String>

			<String id="DeclineReply">
				"Oh well"
			</String>

			<String id="InProgress">
				"The freighter you're supposed to be escorting is already on its way!"
			</String>
			<Text id="FailureDebrief">
				(if (msnGetData gSource 'playerDestroyedFreighter)
					(msnTranslate gSource "textFailureDebrief:blacklist")
					(msnTranslate gSource "textFailureDebrief:default")
					)
			</Text>
			<Text id="textFailureDebrief:blacklist">
				"Either your poor marksmanship or deliberate malice destroyed the
				freighter entrusted to your care! You will never work for us again, captain."
			</Text>
			<Text id="textFailureDebrief:default">
				"Your timidity under fire and your lack of skill doomed the poor crew
				of your freighter and its cargo!"
			</Text>
			<Text id="SuccessDebrief">
				(korSuccessDebrief gSource)
			</Text>

			<Text id="msgBeginEscort:1">Glad to have you with us, %name%.</Text>
			<Text id="msgBeginEscort:2">On course for %destName%.</Text>
			<Text id="msgBeginEscort:3">%ShipName% reporting in.</Text>
			<Text id="msgBeginEscort:4">Nice to have you on our wing.</Text>
			<Text id="msgBeginEscort:5">%ShipName% on course.</Text>
			<Text id="msgBeginEscort:6">%ShipName% on course for %destName%.</Text>
		</Language>
	</MissionType>

</TranscendenceModule>
