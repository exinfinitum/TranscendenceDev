<?xml version="1.0" encoding="utf-8"?>

<TranscendenceModule>

<!-- ENCOUNTERS -->

	<!-- Trading Post -->

	<StationType UNID="&stCorporateTradingPost;"
			name=				"corporate trading post"
			sovereign=			"&svCorporate;"
			inherit=			"&baCorporateStation;"

			dockScreen=			"Main"
			abandonedScreen=	"&dsRPGAbandonedStation;"
			dockingPorts=		"8"

			multiHull=			"true"
			armorID=			"&itAdvancedPlasteelPlate;"
			hitPoints=			"350"
			regen=				"12"
			explosionType=		"&vtBlastExplosion3;"
			ejectaType=			"&vtWreckEjecta;"

			attributes=			"corporate, corporateCustoms, envAir, envEarth, envFire, envWater, friendly, independent, generic, human, populated"
			>

		<!-- Encounter Info -->

		<Encounter
				systemCriteria=			"+corporateSpace;"
				systemAffinity=			"*"
				levelFrequency=			"---rc uur-- ----- ----- -----"
				maxInSystem=			"1"

				locationCriteria=		"+planetary"
				enemyExclusionRadius=	"50"
				/>

		<Image			imageID="&rsStations4;" imageX="0" imageY="448" imageWidth="192" imageHeight="192"/>

		<Animations>
			<Animation x="-39" y="-45">
				<Image	imageID="&rsTradingPostAnimation;" imageX="0" imageY="0" imageWidth="64" imageHeight="80" imageFrameCount="40" imageTicksPerFrame="4" />
			</Animation>
		</Animations>

		<Ships>
			<Lookup count="2" table="&tbCorpDefenders;"/>
			<Lookup count="1d4" table="&tbCommPrivateCrafts;"/>
		</Ships>

		<Reinforcements minShips="4">
			<Table>
				<Lookup chance="75" table="&tbCorpDefenders;"/>
				<Lookup chance="25" table="&tbCommPrivateCrafts;"/>
			</Table>
		</Reinforcements>

		<Items>
			<RandomItem count="20-30" 
					criteria=		"* -defective; -Illegal; -Military; -Alien; -Specialty; -NotStandard; -NotForSale;"
					levelFrequency=	"systemLevel:vru|c|urv"
					/>
		</Items>

		<Trade currency="credit">
			<Sell	criteria="*NU -defective; -Illegal; -NotForSale; -ID;"	priceAdj="100"/>
			<Buy	criteria="amdNU -Illegal; -NotForSale;"	priceAdj="50"/>
			<Buy	criteria="*NU -Illegal; -ID; -NotForSale;"	priceAdj="90"/>
			<Buy	criteria="*NU -Illegal; -ID;"				priceAdj="10"/>

			<BalanceTrade	criteria="{human.basicFood}"	impact="10"/>
			<BalanceTrade	criteria="{human.lux}"		impact="10"/>
			<BalanceTrade	criteria="{human.res}"		impact="5"/>
		</Trade>

		<Events>
			<OnObjDestroyed>
				(if (and (eq (objGetData gSource "MissionStatus") "intransit")
						(eq aObjDestroyed (objGetObjRefData gSource "Transport")))
					(block Nil
						(objSetData gSource "MissionStatus" "failed")
						)
					)
			</OnObjDestroyed>

			<OnObjDocked>
				(if (and (eq (objGetData gSource "MissionStatus") "intransit")
						(eq aObjDocked (objGetObjRefData gSource "Transport"))
						(eq aDockTarget gSource))
					(block Nil
						(objRemoveItem aObjDocked (objGetData gSource "Order"))
						(objSetData gSource "MissionStatus" "arrived")
						)
					)
			</OnObjDocked>
		</Events>

		<DockScreens>
			<Main>
				<Panes>
					<Default descID="descMain">
						<Actions>
							<Action id="actionOrderItems" default="1">
								(switch
									(eq (objGetData gSource "MissionStatus") "intransit")
										(scrShowScreen gScreen "OrderInTransit")

									(eq (objGetData gSource "MissionStatus") "arrived")
										(scrShowScreen gScreen "OrderReady")

									(eq (objGetData gSource "MissionStatus") "failed")
										(scrShowScreen gScreen "OrderFailed")

									; If the player has exceeded quota, then she cannot order
									(geq (objGetData gSource "OrderCount") 1)
										(scrShowScreen gScreen "QuotaExceeded")

									; Show order screen	
									(scrShowScreen gScreen "OrderItem")
									)
							</Action>

							<Action id="actionBuyItems">
								(scrShowScreen gScreen &dsRPGCommoditiesExchangeBuy;)
							</Action>

							<Action id="actionSellItems">
								(scrShowScreen gScreen &dsRPGCommoditiesExchangeSell;)
							</Action>

							<Action id="actionUndock" cancel="1">
								<Exit/>
							</Action>
						</Actions>
					</Default>
				</Panes>
			</Main>

			<OrderItem>
				<Panes>
					<Default
							descID="descOrderDefault"
							showTextInput="true">

						<Actions>
							<Action id="actionSearch" default="1">
								(block (theItem)
									(setq theItem (itmCreateByName "* -Illegal; -Military; -Alien; -ID; -CannotOrder; -NotForSale; &lt;10" (scrGetInputText gScreen) 1))

									(switch
										; If we couldn't understand, say so
										(not theItem)
											(scrShowPane gScreen "UnknownItem")

										; Otherwise, ask for a count
										(block (theCost maxCount)
											(setq theCost (itmGetActualPrice theItem))

											; Add 40% markup
											(setq theCost (divide (multiply theCost 140) 100))

											; Compute max count
											(switch
												(leq (itmGetFrequency theItem) 1)
													(setq maxCount 1)

												(leq (itmGetFrequency theItem) 4)
													(setq maxCount (itmGetMaxAppearing theItem))

												(leq (itmGetFrequency theItem) 10)
													(setq maxCount (multiply 3 (itmGetMaxAppearing theItem)))

												(setq maxCount (multiply 10 (itmGetMaxAppearing theItem)))
												)
												
											(scrSetData gScreen 'orderItem theItem)
											(scrSetData gScreen 'unitCost theCost)
											(scrSetData gScreen 'maxCount maxCount)
											(scrSetData gScreen 'pluralName (itmGetName theItem 0x102))
											(if (gr maxCount 1)
												(scrShowPane gScreen "GetCount")
												(scrShowPane gScreen "OneAvailable")
												)
											)
										)
									)
							</Action>

							<Action id="actionCancelSpecial" cancel="1">
								(scrShowScreen gScreen "Main")
							</Action>
						</Actions>
					</Default>

					<GetCount
							showCounter="true">

						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descGetCount {
								pluralName:(scrGetData gScreen 'pluralName)
								maxCount:(scrGetData gScreen 'maxCount)
								})
						</OnPaneInit>

						<Actions>
							<Action id="actionGetPrice" default="1">
								(switch
									(gr (scrGetCounter gScreen) (scrGetData gScreen 'maxCount))
										(scrSetCounter gScreen (scrGetData gScreen 'maxCount))

									(gr (scrGetCounter gScreen) 0)
										(block Nil
											(scrSetData gScreen 'orderItem (itmSetCount (scrGetData gScreen 'orderItem) (scrGetCounter gScreen)))
											(scrShowPane gScreen "ConfirmOrder")
											)
									)
							</Action>

							<Action id="actionCancel" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</GetCount>
					
					<OneAvailable>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descOneAvailable { pluralName:(scrGetData gScreen 'pluralName) })
						</OnPaneInit>

						<Actions>
							<Action id="actionGetPrice" default="1">
								(scrShowPane gScreen "ConfirmOrder")
							</Action>

							<Action id="actionCancel" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</OneAvailable>

					<ConfirmOrder>
						<OnPaneInit>
							(block (
								(theItem (scrGetData gScreen 'orderItem))
								(itemCount (itmGetCount theItem))
								(unitCost (scrGetData gScreen 'unitCost))
								(itemsCost (multiply itemCount unitCost))
								; Shipping cost 500 credits per ton
								(shippingCost (multiply 500 (divide (add (multiply (itmGetMass theItem) itemCount) 999) 1000)))
								(totalCost (add itemsCost shippingCost))
								multipleItems finalString
								)
									
								(if (gr itemCount 1)
									(setq multipleItems (scrTranslate gScreen 'priceForMultiple { itemCount:itemCount itemsCost:(fmtCurrency 'credit itemsCost) } ))
									(setq multipleItems " ")
									)
								(if (gr totalCost (plyGetCredits gPlayer))
									(block Nil
										(setq finalString (scrTranslate gScreen 'notEnoughCredits))
										(scrEnableAction gScreen 'actionPlaceOrder Nil)
										)
									(setq finalString (scrTranslate gScreen 'confirmOrderQuery))
									)
									
								(scrSetData gScreen 'totalCost totalCost)
								(scrSetDescTranslate gScreen 'descConfirmOrder {
									itemName: (itmGetName theItem 0x108)
									unitCost: (fmtCurrency 'credit unitCost)
									multipleItems: multipleItems
									shippingCost: (fmtCurrency 'credit shippingCost)
									totalCost: (fmtCurrency 'credit totalCost)
									finalString: finalString
									})
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionPlaceOrder" default="1">
								(block (
									(theItem (scrGetData gScreen 'orderItem))
									(theCost (scrGetData gScreen 'totalCost))
									transport
									)
										
									; Create a transport at the nearest gate and put the item on it
									(setq transport (sysCreateShip &tbCorporateDeliveryTransport; (objGetNearestStargate gSource) &svCorporate;))
									(objAddItem transport theItem)
									(objSetProperty transport 'exitGateTimer (random 120 180))
									(objSetProperty transport 'identified True)

									; Order the transport to dock with the station and then gate out
									(shpCancelOrders transport)
									(shpOrder transport 'sendMessage gPlayerShip (objTranslate gSource 'msgTransportArrived))
									(shpOrder transport 'dock gSource)
									(shpOrder transport 'wait (random 5 10))
									(shpOrder transport 'gate)

									(objSetShowAsDestination transport '(autoClearOnDock autoClearOnDestroyed))

									; Register the transport so we know if it got destroyed
									(objRegisterForEvents gSource transport)

									; Remember the item and the transport
									(objSetData gSource "Order" theItem)
									(objSetObjRefData gSource "Transport" transport)

									; Set the mission status
									(objSetData gSource "MissionStatus" "intransit")

									; Charge the player
									(plyCharge gPlayer theCost)
									(plyRecordBuyItem gPlayer theItem theCost)
									(objIncData gSource "OrderCount" 1)

									(scrShowPane gScreen "ThankYou")
									)
							</Action>

							<Action id="actionCancel" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</ConfirmOrder>

					<ThankYou descID="descThankYou">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowScreen gScreen "Main")
							</Action>
						</Actions>
					</ThankYou>

					<UnknownItem descID="descUnknownItem">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowPane gScreen "Default")
							</Action>
						</Actions>
					</UnknownItem>
				</Panes>
			</OrderItem>

			<OrderInTransit>
				<Panes>
					<Default>
						<OnPaneInit>
							(block (
								(transportObj (objGetObjRefData gSource 'Transport))
								)
								(switch
									;	If transport is still in gate, then not yet arrived

									(objGetProperty transportObj 'exitGateTimer)
										(scrSetDescTranslate gScreen 'descInGate {
											itemName:(itmGetName (objGetData gSource "Order") 0x108)
											})

									;	Otherwise, transport is en route.

									(scrSetDescTranslate gScreen 'descInTransit {
										itemName:(itmGetName (objGetData gSource "Order") 0x108)
										distance:(fmtNumber (objGetDistance gSource transportObj))
										})
									)
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowScreen gScreen "Main")
							</Action>
						</Actions>
					</Default>
				</Panes>
			</OrderInTransit>

			<OrderReady>
				<Panes>
					<Default>
						<OnPaneInit>
							(block (
								(theItem (objGetData gSource "Order"))
								(spaceNeeded (multiply (itmGetMass theItem) (itmGetCount theItem)))
								)

								(if (geq (objGetCargoSpaceLeft gPlayerShip) spaceNeeded)
									(block Nil
										(scrSetDescTranslate gScreen 'descOrderReady { itemName:(itmGetName theItem 0x108) })
										(itmSetKnown theItem)
										(objAddItem gPlayerShip theItem)
										(objSetData gSource "MissionStatus" Nil)
										)
									(scrSetDescTranslate gScreen 'descNoSpace { itemName:(itmGetName theItem 0x108) })
									)
								)
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowScreen gScreen "Main")
							</Action>
						</Actions>
					</Default>
				</Panes>
			</OrderReady>

			<OrderFailed>
				<Panes>
					<Default>
						<OnPaneInit>
							(scrSetDescTranslate gScreen 'descOrderFailed { itemName:(itmGetName (objGetData gSource "Order") 0x108) })
						</OnPaneInit>

						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(block Nil
									(objSetData gSource "MissionStatus" Nil)
									(scrShowScreen gScreen "Main")
									)
							</Action>
						</Actions>
					</Default>
				</Panes>
			</OrderFailed>

			<QuotaExceeded>
				<Panes>
					<Default descID="descQuotaExceeded">
						<Actions>
							<Action id="actionContinue" default="1" cancel="1">
								(scrShowScreen gScreen "Main")
							</Action>
						</Actions>
					</Default>
				</Panes>
			</QuotaExceeded>

		</DockScreens>

		<DockingPorts>
			<Port x="0"		y="92" />
			<Port x="38"	y="85" />
			<Port x="105"	y="60" />
			<Port x="124"	y="-20" />
			<Port x="64"	y="-92" />
			<Port x="0"		y="-120" />
			<Port x="-102"	y="-66" />
			<Port x="-100"	y="16" />
			<Port x="-84"	y="78" />
		</DockingPorts>

        <Language>
			<Text id="actionOrderItems">[O]rder Items</Text>
			<Text id="actionSearch">[Enter] Search</Text>
			<Text id="actionCancelSpecial">[Esc] Cancel</Text>
			<Text id="actionGetPrice">[G]et Price Quote</Text>
			<Text id="actionPlaceOrder">[P]lace Order</Text>
			
			<Text id="descMain">

				You are docked at a corporate trading post.

			</Text>
			<Text id="descOrderDefault">

				Please enter an item to search for in our catalog database:

			</Text>
			<Text id="descOneAvailable">

				The catalog contains a listing for %pluralName%.
				There is one left in the warehouse.
				
				Do you wish to order it?

			</Text>
			<Text id="descGetCount">

				The catalog contains a listing for %pluralName%.
				There are %maxCount% left in the warehouse.
				
				How many do you wish to order?

			</Text>
			<Text id="descConfirmOrder">

				Order: %itemName%\n
				Unit price: %unitCost% %multipleItems%\n
				Shipping &amp; Handling: %shippingCost%\n
				Total: %totalCost%
				
				%finalString%

			</Text>
			<String id="priceForMultiple">(%itemCount% for %itemsCost%)</String>
			<Text id="notEnoughCredits">

				Unfortunately, you do not have enough credits to complete the order.

			</Text>
			<Text id="confirmOrderQuery">

				Do you wish to place the order?

			</Text>
			<Text id="descThankYou">

				Your order has shipped! A transport carrying your order has been 
				dispatched and will arrive soon.
				
				Please check back at this screen to see the status of your order.

			</Text>
			<Text id="descUnknownItem">

				Sorry, there are no items in the catalog matching that description.

			</Text>
			<Text id="descInGate">

				Your order for %itemName% has shipped and is en route.
				The transport holding your order is currently in another system.
			
			</Text>
			<Text id="descInTransit">

				Your order for %itemName% has shipped and is en route.
				The transport holding your order is currently %distance% light-seconds away.

			</Text>
			<Text id="descOrderReady">

				Your order for %itemName% has arrived and has been placed in your cargo hold.
				
				Thank you for your business!

			</Text>
			<Text id="descNoSpace">

				Your order for %itemName% is ready. Unfortunately, you do not have enough 
				room in your cargo hold. Please return when you have freed up enough room.

			</Text>
			<Text id="descOrderFailed">

				We regret to inform you that your order for %itemName% has been destroyed in transit.
				As we are not liable for losses due to external events, we respectfully recommend 
				that you pursue the matter with your insurance company, if any.

			</Text>
			<Text id="descQuotaExceeded">

				Sorry, only one order per customer!
				
				Please buy our in-stock items or visit another Trading Post at a system near you.

			</Text>

			<Text id="msgTransportArrived">Freighter arrived</Text>

            <Text id="core.mapDescCustom">
				(block (
					(status (objGetData gSource 'MissionStatus))
					)
					(switch
						(= status 'intransit)
							(objTranslate gSource 'mapDesc.intransit)

						(= status 'arrived)
							(objTranslate gSource 'mapDesc.arrived)

						(= status 'failed)
							(objTranslate gSource 'mapDesc.failed)

						(geq (objGetData gSource 'OrderCount) 1)
							(objTranslate gSource 'mapDesc.notAvailable)

						(objTranslate gSource 'mapDesc.available)
						)
					)
            </Text>
			<Text id="mapDesc.available">Catalog ordering available &mdash; %tradeDesc%</Text>
			<Text id="mapDesc.notAvailable">%tradeDesc%</Text>
			<Text id="mapDesc.intransit">Order in transit &mdash; %tradeDesc%</Text>
			<Text id="mapDesc.arrived">Order ready for pick up &mdash; %tradeDesc%</Text>
			<Text id="mapDesc.failed">Order destroyed in transit &mdash; %tradeDesc%</Text>
        </Language>
	</StationType>

<!-- TABLES -->

	<ShipTable unid="&tbCorporateDeliveryTransport;">
		<LevelTable>
			<Ship levelFrequency="ccrv- -----" count="1" class="&scEI100;" orders="gateOnThreat"/>
			<Ship levelFrequency="-ccrv -----" count="1" class="&scEI200;" orders="gateOnThreat"/>
			<Ship levelFrequency="--ccr v----" count="1" class="&scEI500;" orders="gateOnThreat"/>
			<Ship levelFrequency="---cc rvvvv" count="1" class="&scEI7000;" orders="gateOnThreat"/>
		</LevelTable>
	</ShipTable>

<!-- RESOURCES -->

	<Image UNID="&rsTradingPostAnimation;"	bitmap="Resources\TradingPostGenericAd.jpg" bitmask="Resources\TradingPostGenericAdMask.bmp" loadOnUse="true"/>
	
</TranscendenceModule>
