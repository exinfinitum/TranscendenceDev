#version 330 core
out vec4 FragColor;
  
in vec3 ourColor;
in vec2 TexCoord;

uniform sampler2D ourTexture;
uniform vec2 quadSize;

float getGlowBoundaries_20(float epsilon, vec2 texture_uv, sampler2D obj_texture, vec2 texture_size)
{
vec2 onePixel = vec2(1.0, 1.0) / texture_size;
vec2 quadSize_float = quadSize / texture_size;
vec2 quad_index = vec2(float(int(texture_uv[0] / quadSize_float[0])), float(int(texture_uv[1] / quadSize_float[1])));

vec2 offset0 = vec2(onePixel[0] * -20.0, onePixel[1] * 0.0);
vec2 texCoords0 =  vec2(texture_uv[0], texture_uv[1]) + offset0;
float texAlpha0 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3]);
bool texInBounds0 = (abs(int(texCoords0[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords0[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords0[0] > 0.0f && texCoords0[0] < 1.0f && texCoords0[1] > 0.0f && texCoords0[1] < 1.0f;
float sample0 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3] > epsilon)) * 0.001100f * float(texInBounds0);
vec2 offset1 = vec2(onePixel[0] * -19.0, onePixel[1] * -1.0);
vec2 texCoords1 =  vec2(texture_uv[0], texture_uv[1]) + offset1;
float texAlpha1 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3]);
bool texInBounds1 = (abs(int(texCoords1[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords1[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords1[0] > 0.0f && texCoords1[0] < 1.0f && texCoords1[1] > 0.0f && texCoords1[1] < 1.0f;
float sample1 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3] > epsilon)) * 0.001113f * float(texInBounds1);
vec2 offset2 = vec2(onePixel[0] * -19.0, onePixel[1] * 0.0);
vec2 texCoords2 =  vec2(texture_uv[0], texture_uv[1]) + offset2;
float texAlpha2 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3]);
bool texInBounds2 = (abs(int(texCoords2[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords2[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords2[0] > 0.0f && texCoords2[0] < 1.0f && texCoords2[1] > 0.0f && texCoords2[1] < 1.0f;
float sample2 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3] > epsilon)) * 0.001113f * float(texInBounds2);
vec2 offset3 = vec2(onePixel[0] * -19.0, onePixel[1] * 1.0);
vec2 texCoords3 =  vec2(texture_uv[0], texture_uv[1]) + offset3;
float texAlpha3 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3]);
bool texInBounds3 = (abs(int(texCoords3[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords3[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords3[0] > 0.0f && texCoords3[0] < 1.0f && texCoords3[1] > 0.0f && texCoords3[1] < 1.0f;
float sample3 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3] > epsilon)) * 0.001113f * float(texInBounds3);
vec2 offset4 = vec2(onePixel[0] * -18.0, onePixel[1] * -2.0);
vec2 texCoords4 =  vec2(texture_uv[0], texture_uv[1]) + offset4;
float texAlpha4 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3]);
bool texInBounds4 = (abs(int(texCoords4[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords4[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords4[0] > 0.0f && texCoords4[0] < 1.0f && texCoords4[1] > 0.0f && texCoords4[1] < 1.0f;
float sample4 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3] > epsilon)) * 0.001124f * float(texInBounds4);
vec2 offset5 = vec2(onePixel[0] * -18.0, onePixel[1] * -1.0);
vec2 texCoords5 =  vec2(texture_uv[0], texture_uv[1]) + offset5;
float texAlpha5 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3]);
bool texInBounds5 = (abs(int(texCoords5[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords5[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords5[0] > 0.0f && texCoords5[0] < 1.0f && texCoords5[1] > 0.0f && texCoords5[1] < 1.0f;
float sample5 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3] > epsilon)) * 0.001125f * float(texInBounds5);
vec2 offset6 = vec2(onePixel[0] * -18.0, onePixel[1] * 0.0);
vec2 texCoords6 =  vec2(texture_uv[0], texture_uv[1]) + offset6;
float texAlpha6 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3]);
bool texInBounds6 = (abs(int(texCoords6[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords6[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords6[0] > 0.0f && texCoords6[0] < 1.0f && texCoords6[1] > 0.0f && texCoords6[1] < 1.0f;
float sample6 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3] > epsilon)) * 0.001125f * float(texInBounds6);
vec2 offset7 = vec2(onePixel[0] * -18.0, onePixel[1] * 1.0);
vec2 texCoords7 =  vec2(texture_uv[0], texture_uv[1]) + offset7;
float texAlpha7 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3]);
bool texInBounds7 = (abs(int(texCoords7[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords7[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords7[0] > 0.0f && texCoords7[0] < 1.0f && texCoords7[1] > 0.0f && texCoords7[1] < 1.0f;
float sample7 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3] > epsilon)) * 0.001125f * float(texInBounds7);
vec2 offset8 = vec2(onePixel[0] * -18.0, onePixel[1] * 2.0);
vec2 texCoords8 =  vec2(texture_uv[0], texture_uv[1]) + offset8;
float texAlpha8 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3]);
bool texInBounds8 = (abs(int(texCoords8[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords8[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords8[0] > 0.0f && texCoords8[0] < 1.0f && texCoords8[1] > 0.0f && texCoords8[1] < 1.0f;
float sample8 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3] > epsilon)) * 0.001124f * float(texInBounds8);
vec2 offset9 = vec2(onePixel[0] * -17.0, onePixel[1] * -3.0);
vec2 texCoords9 =  vec2(texture_uv[0], texture_uv[1]) + offset9;
float texAlpha9 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3]);
bool texInBounds9 = (abs(int(texCoords9[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords9[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords9[0] > 0.0f && texCoords9[0] < 1.0f && texCoords9[1] > 0.0f && texCoords9[1] < 1.0f;
float sample9 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3] > epsilon)) * 0.001134f * float(texInBounds9);
vec2 offset10 = vec2(onePixel[0] * -17.0, onePixel[1] * -2.0);
vec2 texCoords10 =  vec2(texture_uv[0], texture_uv[1]) + offset10;
float texAlpha10 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3]);
bool texInBounds10 = (abs(int(texCoords10[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords10[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords10[0] > 0.0f && texCoords10[0] < 1.0f && texCoords10[1] > 0.0f && texCoords10[1] < 1.0f;
float sample10 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3] > epsilon)) * 0.001136f * float(texInBounds10);
vec2 offset11 = vec2(onePixel[0] * -17.0, onePixel[1] * -1.0);
vec2 texCoords11 =  vec2(texture_uv[0], texture_uv[1]) + offset11;
float texAlpha11 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3]);
bool texInBounds11 = (abs(int(texCoords11[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords11[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords11[0] > 0.0f && texCoords11[0] < 1.0f && texCoords11[1] > 0.0f && texCoords11[1] < 1.0f;
float sample11 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3] > epsilon)) * 0.001137f * float(texInBounds11);
vec2 offset12 = vec2(onePixel[0] * -17.0, onePixel[1] * 0.0);
vec2 texCoords12 =  vec2(texture_uv[0], texture_uv[1]) + offset12;
float texAlpha12 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3]);
bool texInBounds12 = (abs(int(texCoords12[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords12[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords12[0] > 0.0f && texCoords12[0] < 1.0f && texCoords12[1] > 0.0f && texCoords12[1] < 1.0f;
float sample12 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3] > epsilon)) * 0.001137f * float(texInBounds12);
vec2 offset13 = vec2(onePixel[0] * -17.0, onePixel[1] * 1.0);
vec2 texCoords13 =  vec2(texture_uv[0], texture_uv[1]) + offset13;
float texAlpha13 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3]);
bool texInBounds13 = (abs(int(texCoords13[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords13[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords13[0] > 0.0f && texCoords13[0] < 1.0f && texCoords13[1] > 0.0f && texCoords13[1] < 1.0f;
float sample13 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3] > epsilon)) * 0.001137f * float(texInBounds13);
vec2 offset14 = vec2(onePixel[0] * -17.0, onePixel[1] * 2.0);
vec2 texCoords14 =  vec2(texture_uv[0], texture_uv[1]) + offset14;
float texAlpha14 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3]);
bool texInBounds14 = (abs(int(texCoords14[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords14[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords14[0] > 0.0f && texCoords14[0] < 1.0f && texCoords14[1] > 0.0f && texCoords14[1] < 1.0f;
float sample14 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3] > epsilon)) * 0.001136f * float(texInBounds14);
vec2 offset15 = vec2(onePixel[0] * -17.0, onePixel[1] * 3.0);
vec2 texCoords15 =  vec2(texture_uv[0], texture_uv[1]) + offset15;
float texAlpha15 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3]);
bool texInBounds15 = (abs(int(texCoords15[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords15[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords15[0] > 0.0f && texCoords15[0] < 1.0f && texCoords15[1] > 0.0f && texCoords15[1] < 1.0f;
float sample15 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3] > epsilon)) * 0.001134f * float(texInBounds15);
vec2 offset16 = vec2(onePixel[0] * -16.0, onePixel[1] * -4.0);
vec2 texCoords16 =  vec2(texture_uv[0], texture_uv[1]) + offset16;
float texAlpha16 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3]);
bool texInBounds16 = (abs(int(texCoords16[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords16[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords16[0] > 0.0f && texCoords16[0] < 1.0f && texCoords16[1] > 0.0f && texCoords16[1] < 1.0f;
float sample16 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3] > epsilon)) * 0.001143f * float(texInBounds16);
vec2 offset17 = vec2(onePixel[0] * -16.0, onePixel[1] * -3.0);
vec2 texCoords17 =  vec2(texture_uv[0], texture_uv[1]) + offset17;
float texAlpha17 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3]);
bool texInBounds17 = (abs(int(texCoords17[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords17[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords17[0] > 0.0f && texCoords17[0] < 1.0f && texCoords17[1] > 0.0f && texCoords17[1] < 1.0f;
float sample17 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3] > epsilon)) * 0.001145f * float(texInBounds17);
vec2 offset18 = vec2(onePixel[0] * -16.0, onePixel[1] * -2.0);
vec2 texCoords18 =  vec2(texture_uv[0], texture_uv[1]) + offset18;
float texAlpha18 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3]);
bool texInBounds18 = (abs(int(texCoords18[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords18[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords18[0] > 0.0f && texCoords18[0] < 1.0f && texCoords18[1] > 0.0f && texCoords18[1] < 1.0f;
float sample18 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3] > epsilon)) * 0.001147f * float(texInBounds18);
vec2 offset19 = vec2(onePixel[0] * -16.0, onePixel[1] * -1.0);
vec2 texCoords19 =  vec2(texture_uv[0], texture_uv[1]) + offset19;
float texAlpha19 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3]);
bool texInBounds19 = (abs(int(texCoords19[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords19[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords19[0] > 0.0f && texCoords19[0] < 1.0f && texCoords19[1] > 0.0f && texCoords19[1] < 1.0f;
float sample19 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3] > epsilon)) * 0.001148f * float(texInBounds19);
vec2 offset20 = vec2(onePixel[0] * -16.0, onePixel[1] * 0.0);
vec2 texCoords20 =  vec2(texture_uv[0], texture_uv[1]) + offset20;
float texAlpha20 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3]);
bool texInBounds20 = (abs(int(texCoords20[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords20[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords20[0] > 0.0f && texCoords20[0] < 1.0f && texCoords20[1] > 0.0f && texCoords20[1] < 1.0f;
float sample20 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3] > epsilon)) * 0.001148f * float(texInBounds20);
vec2 offset21 = vec2(onePixel[0] * -16.0, onePixel[1] * 1.0);
vec2 texCoords21 =  vec2(texture_uv[0], texture_uv[1]) + offset21;
float texAlpha21 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3]);
bool texInBounds21 = (abs(int(texCoords21[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords21[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords21[0] > 0.0f && texCoords21[0] < 1.0f && texCoords21[1] > 0.0f && texCoords21[1] < 1.0f;
float sample21 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3] > epsilon)) * 0.001148f * float(texInBounds21);
vec2 offset22 = vec2(onePixel[0] * -16.0, onePixel[1] * 2.0);
vec2 texCoords22 =  vec2(texture_uv[0], texture_uv[1]) + offset22;
float texAlpha22 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3]);
bool texInBounds22 = (abs(int(texCoords22[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords22[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords22[0] > 0.0f && texCoords22[0] < 1.0f && texCoords22[1] > 0.0f && texCoords22[1] < 1.0f;
float sample22 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3] > epsilon)) * 0.001147f * float(texInBounds22);
vec2 offset23 = vec2(onePixel[0] * -16.0, onePixel[1] * 3.0);
vec2 texCoords23 =  vec2(texture_uv[0], texture_uv[1]) + offset23;
float texAlpha23 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3]);
bool texInBounds23 = (abs(int(texCoords23[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords23[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords23[0] > 0.0f && texCoords23[0] < 1.0f && texCoords23[1] > 0.0f && texCoords23[1] < 1.0f;
float sample23 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3] > epsilon)) * 0.001145f * float(texInBounds23);
vec2 offset24 = vec2(onePixel[0] * -16.0, onePixel[1] * 4.0);
vec2 texCoords24 =  vec2(texture_uv[0], texture_uv[1]) + offset24;
float texAlpha24 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3]);
bool texInBounds24 = (abs(int(texCoords24[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords24[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords24[0] > 0.0f && texCoords24[0] < 1.0f && texCoords24[1] > 0.0f && texCoords24[1] < 1.0f;
float sample24 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3] > epsilon)) * 0.001143f * float(texInBounds24);
vec2 offset25 = vec2(onePixel[0] * -15.0, onePixel[1] * -5.0);
vec2 texCoords25 =  vec2(texture_uv[0], texture_uv[1]) + offset25;
float texAlpha25 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3]);
bool texInBounds25 = (abs(int(texCoords25[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords25[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords25[0] > 0.0f && texCoords25[0] < 1.0f && texCoords25[1] > 0.0f && texCoords25[1] < 1.0f;
float sample25 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3] > epsilon)) * 0.001150f * float(texInBounds25);
vec2 offset26 = vec2(onePixel[0] * -15.0, onePixel[1] * -4.0);
vec2 texCoords26 =  vec2(texture_uv[0], texture_uv[1]) + offset26;
float texAlpha26 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3]);
bool texInBounds26 = (abs(int(texCoords26[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords26[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords26[0] > 0.0f && texCoords26[0] < 1.0f && texCoords26[1] > 0.0f && texCoords26[1] < 1.0f;
float sample26 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3] > epsilon)) * 0.001154f * float(texInBounds26);
vec2 offset27 = vec2(onePixel[0] * -15.0, onePixel[1] * -3.0);
vec2 texCoords27 =  vec2(texture_uv[0], texture_uv[1]) + offset27;
float texAlpha27 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3]);
bool texInBounds27 = (abs(int(texCoords27[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords27[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords27[0] > 0.0f && texCoords27[0] < 1.0f && texCoords27[1] > 0.0f && texCoords27[1] < 1.0f;
float sample27 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3] > epsilon)) * 0.001156f * float(texInBounds27);
vec2 offset28 = vec2(onePixel[0] * -15.0, onePixel[1] * -2.0);
vec2 texCoords28 =  vec2(texture_uv[0], texture_uv[1]) + offset28;
float texAlpha28 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3]);
bool texInBounds28 = (abs(int(texCoords28[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords28[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords28[0] > 0.0f && texCoords28[0] < 1.0f && texCoords28[1] > 0.0f && texCoords28[1] < 1.0f;
float sample28 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3] > epsilon)) * 0.001158f * float(texInBounds28);
vec2 offset29 = vec2(onePixel[0] * -15.0, onePixel[1] * -1.0);
vec2 texCoords29 =  vec2(texture_uv[0], texture_uv[1]) + offset29;
float texAlpha29 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3]);
bool texInBounds29 = (abs(int(texCoords29[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords29[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords29[0] > 0.0f && texCoords29[0] < 1.0f && texCoords29[1] > 0.0f && texCoords29[1] < 1.0f;
float sample29 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3] > epsilon)) * 0.001159f * float(texInBounds29);
vec2 offset30 = vec2(onePixel[0] * -15.0, onePixel[1] * 0.0);
vec2 texCoords30 =  vec2(texture_uv[0], texture_uv[1]) + offset30;
float texAlpha30 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3]);
bool texInBounds30 = (abs(int(texCoords30[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords30[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords30[0] > 0.0f && texCoords30[0] < 1.0f && texCoords30[1] > 0.0f && texCoords30[1] < 1.0f;
float sample30 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3] > epsilon)) * 0.001159f * float(texInBounds30);
vec2 offset31 = vec2(onePixel[0] * -15.0, onePixel[1] * 1.0);
vec2 texCoords31 =  vec2(texture_uv[0], texture_uv[1]) + offset31;
float texAlpha31 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3]);
bool texInBounds31 = (abs(int(texCoords31[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords31[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords31[0] > 0.0f && texCoords31[0] < 1.0f && texCoords31[1] > 0.0f && texCoords31[1] < 1.0f;
float sample31 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3] > epsilon)) * 0.001159f * float(texInBounds31);
vec2 offset32 = vec2(onePixel[0] * -15.0, onePixel[1] * 2.0);
vec2 texCoords32 =  vec2(texture_uv[0], texture_uv[1]) + offset32;
float texAlpha32 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3]);
bool texInBounds32 = (abs(int(texCoords32[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords32[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords32[0] > 0.0f && texCoords32[0] < 1.0f && texCoords32[1] > 0.0f && texCoords32[1] < 1.0f;
float sample32 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3] > epsilon)) * 0.001158f * float(texInBounds32);
vec2 offset33 = vec2(onePixel[0] * -15.0, onePixel[1] * 3.0);
vec2 texCoords33 =  vec2(texture_uv[0], texture_uv[1]) + offset33;
float texAlpha33 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3]);
bool texInBounds33 = (abs(int(texCoords33[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords33[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords33[0] > 0.0f && texCoords33[0] < 1.0f && texCoords33[1] > 0.0f && texCoords33[1] < 1.0f;
float sample33 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3] > epsilon)) * 0.001156f * float(texInBounds33);
vec2 offset34 = vec2(onePixel[0] * -15.0, onePixel[1] * 4.0);
vec2 texCoords34 =  vec2(texture_uv[0], texture_uv[1]) + offset34;
float texAlpha34 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3]);
bool texInBounds34 = (abs(int(texCoords34[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords34[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords34[0] > 0.0f && texCoords34[0] < 1.0f && texCoords34[1] > 0.0f && texCoords34[1] < 1.0f;
float sample34 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3] > epsilon)) * 0.001154f * float(texInBounds34);
vec2 offset35 = vec2(onePixel[0] * -15.0, onePixel[1] * 5.0);
vec2 texCoords35 =  vec2(texture_uv[0], texture_uv[1]) + offset35;
float texAlpha35 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3]);
bool texInBounds35 = (abs(int(texCoords35[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords35[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords35[0] > 0.0f && texCoords35[0] < 1.0f && texCoords35[1] > 0.0f && texCoords35[1] < 1.0f;
float sample35 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3] > epsilon)) * 0.001150f * float(texInBounds35);
vec2 offset36 = vec2(onePixel[0] * -14.0, onePixel[1] * -6.0);
vec2 texCoords36 =  vec2(texture_uv[0], texture_uv[1]) + offset36;
float texAlpha36 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3]);
bool texInBounds36 = (abs(int(texCoords36[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords36[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords36[0] > 0.0f && texCoords36[0] < 1.0f && texCoords36[1] > 0.0f && texCoords36[1] < 1.0f;
float sample36 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3] > epsilon)) * 0.001157f * float(texInBounds36);
vec2 offset37 = vec2(onePixel[0] * -14.0, onePixel[1] * -5.0);
vec2 texCoords37 =  vec2(texture_uv[0], texture_uv[1]) + offset37;
float texAlpha37 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3]);
bool texInBounds37 = (abs(int(texCoords37[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords37[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords37[0] > 0.0f && texCoords37[0] < 1.0f && texCoords37[1] > 0.0f && texCoords37[1] < 1.0f;
float sample37 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3] > epsilon)) * 0.001160f * float(texInBounds37);
vec2 offset38 = vec2(onePixel[0] * -14.0, onePixel[1] * -4.0);
vec2 texCoords38 =  vec2(texture_uv[0], texture_uv[1]) + offset38;
float texAlpha38 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3]);
bool texInBounds38 = (abs(int(texCoords38[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords38[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords38[0] > 0.0f && texCoords38[0] < 1.0f && texCoords38[1] > 0.0f && texCoords38[1] < 1.0f;
float sample38 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3] > epsilon)) * 0.001164f * float(texInBounds38);
vec2 offset39 = vec2(onePixel[0] * -14.0, onePixel[1] * -3.0);
vec2 texCoords39 =  vec2(texture_uv[0], texture_uv[1]) + offset39;
float texAlpha39 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3]);
bool texInBounds39 = (abs(int(texCoords39[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords39[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords39[0] > 0.0f && texCoords39[0] < 1.0f && texCoords39[1] > 0.0f && texCoords39[1] < 1.0f;
float sample39 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3] > epsilon)) * 0.001166f * float(texInBounds39);
vec2 offset40 = vec2(onePixel[0] * -14.0, onePixel[1] * -2.0);
vec2 texCoords40 =  vec2(texture_uv[0], texture_uv[1]) + offset40;
float texAlpha40 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3]);
bool texInBounds40 = (abs(int(texCoords40[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords40[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords40[0] > 0.0f && texCoords40[0] < 1.0f && texCoords40[1] > 0.0f && texCoords40[1] < 1.0f;
float sample40 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3] > epsilon)) * 0.001168f * float(texInBounds40);
vec2 offset41 = vec2(onePixel[0] * -14.0, onePixel[1] * -1.0);
vec2 texCoords41 =  vec2(texture_uv[0], texture_uv[1]) + offset41;
float texAlpha41 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3]);
bool texInBounds41 = (abs(int(texCoords41[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords41[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords41[0] > 0.0f && texCoords41[0] < 1.0f && texCoords41[1] > 0.0f && texCoords41[1] < 1.0f;
float sample41 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3] > epsilon)) * 0.001169f * float(texInBounds41);
vec2 offset42 = vec2(onePixel[0] * -14.0, onePixel[1] * 0.0);
vec2 texCoords42 =  vec2(texture_uv[0], texture_uv[1]) + offset42;
float texAlpha42 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3]);
bool texInBounds42 = (abs(int(texCoords42[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords42[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords42[0] > 0.0f && texCoords42[0] < 1.0f && texCoords42[1] > 0.0f && texCoords42[1] < 1.0f;
float sample42 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3] > epsilon)) * 0.001169f * float(texInBounds42);
vec2 offset43 = vec2(onePixel[0] * -14.0, onePixel[1] * 1.0);
vec2 texCoords43 =  vec2(texture_uv[0], texture_uv[1]) + offset43;
float texAlpha43 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3]);
bool texInBounds43 = (abs(int(texCoords43[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords43[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords43[0] > 0.0f && texCoords43[0] < 1.0f && texCoords43[1] > 0.0f && texCoords43[1] < 1.0f;
float sample43 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3] > epsilon)) * 0.001169f * float(texInBounds43);
vec2 offset44 = vec2(onePixel[0] * -14.0, onePixel[1] * 2.0);
vec2 texCoords44 =  vec2(texture_uv[0], texture_uv[1]) + offset44;
float texAlpha44 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3]);
bool texInBounds44 = (abs(int(texCoords44[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords44[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords44[0] > 0.0f && texCoords44[0] < 1.0f && texCoords44[1] > 0.0f && texCoords44[1] < 1.0f;
float sample44 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3] > epsilon)) * 0.001168f * float(texInBounds44);
vec2 offset45 = vec2(onePixel[0] * -14.0, onePixel[1] * 3.0);
vec2 texCoords45 =  vec2(texture_uv[0], texture_uv[1]) + offset45;
float texAlpha45 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3]);
bool texInBounds45 = (abs(int(texCoords45[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords45[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords45[0] > 0.0f && texCoords45[0] < 1.0f && texCoords45[1] > 0.0f && texCoords45[1] < 1.0f;
float sample45 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3] > epsilon)) * 0.001166f * float(texInBounds45);
vec2 offset46 = vec2(onePixel[0] * -14.0, onePixel[1] * 4.0);
vec2 texCoords46 =  vec2(texture_uv[0], texture_uv[1]) + offset46;
float texAlpha46 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3]);
bool texInBounds46 = (abs(int(texCoords46[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords46[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords46[0] > 0.0f && texCoords46[0] < 1.0f && texCoords46[1] > 0.0f && texCoords46[1] < 1.0f;
float sample46 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3] > epsilon)) * 0.001164f * float(texInBounds46);
vec2 offset47 = vec2(onePixel[0] * -14.0, onePixel[1] * 5.0);
vec2 texCoords47 =  vec2(texture_uv[0], texture_uv[1]) + offset47;
float texAlpha47 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3]);
bool texInBounds47 = (abs(int(texCoords47[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords47[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords47[0] > 0.0f && texCoords47[0] < 1.0f && texCoords47[1] > 0.0f && texCoords47[1] < 1.0f;
float sample47 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3] > epsilon)) * 0.001160f * float(texInBounds47);
vec2 offset48 = vec2(onePixel[0] * -14.0, onePixel[1] * 6.0);
vec2 texCoords48 =  vec2(texture_uv[0], texture_uv[1]) + offset48;
float texAlpha48 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3]);
bool texInBounds48 = (abs(int(texCoords48[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords48[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords48[0] > 0.0f && texCoords48[0] < 1.0f && texCoords48[1] > 0.0f && texCoords48[1] < 1.0f;
float sample48 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3] > epsilon)) * 0.001157f * float(texInBounds48);
vec2 offset49 = vec2(onePixel[0] * -13.0, onePixel[1] * -7.0);
vec2 texCoords49 =  vec2(texture_uv[0], texture_uv[1]) + offset49;
float texAlpha49 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3]);
bool texInBounds49 = (abs(int(texCoords49[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords49[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords49[0] > 0.0f && texCoords49[0] < 1.0f && texCoords49[1] > 0.0f && texCoords49[1] < 1.0f;
float sample49 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3] > epsilon)) * 0.001161f * float(texInBounds49);
vec2 offset50 = vec2(onePixel[0] * -13.0, onePixel[1] * -6.0);
vec2 texCoords50 =  vec2(texture_uv[0], texture_uv[1]) + offset50;
float texAlpha50 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3]);
bool texInBounds50 = (abs(int(texCoords50[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords50[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords50[0] > 0.0f && texCoords50[0] < 1.0f && texCoords50[1] > 0.0f && texCoords50[1] < 1.0f;
float sample50 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3] > epsilon)) * 0.001166f * float(texInBounds50);
vec2 offset51 = vec2(onePixel[0] * -13.0, onePixel[1] * -5.0);
vec2 texCoords51 =  vec2(texture_uv[0], texture_uv[1]) + offset51;
float texAlpha51 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3]);
bool texInBounds51 = (abs(int(texCoords51[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords51[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords51[0] > 0.0f && texCoords51[0] < 1.0f && texCoords51[1] > 0.0f && texCoords51[1] < 1.0f;
float sample51 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3] > epsilon)) * 0.001170f * float(texInBounds51);
vec2 offset52 = vec2(onePixel[0] * -13.0, onePixel[1] * -4.0);
vec2 texCoords52 =  vec2(texture_uv[0], texture_uv[1]) + offset52;
float texAlpha52 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3]);
bool texInBounds52 = (abs(int(texCoords52[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords52[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords52[0] > 0.0f && texCoords52[0] < 1.0f && texCoords52[1] > 0.0f && texCoords52[1] < 1.0f;
float sample52 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3] > epsilon)) * 0.001173f * float(texInBounds52);
vec2 offset53 = vec2(onePixel[0] * -13.0, onePixel[1] * -3.0);
vec2 texCoords53 =  vec2(texture_uv[0], texture_uv[1]) + offset53;
float texAlpha53 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3]);
bool texInBounds53 = (abs(int(texCoords53[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords53[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords53[0] > 0.0f && texCoords53[0] < 1.0f && texCoords53[1] > 0.0f && texCoords53[1] < 1.0f;
float sample53 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3] > epsilon)) * 0.001175f * float(texInBounds53);
vec2 offset54 = vec2(onePixel[0] * -13.0, onePixel[1] * -2.0);
vec2 texCoords54 =  vec2(texture_uv[0], texture_uv[1]) + offset54;
float texAlpha54 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3]);
bool texInBounds54 = (abs(int(texCoords54[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords54[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords54[0] > 0.0f && texCoords54[0] < 1.0f && texCoords54[1] > 0.0f && texCoords54[1] < 1.0f;
float sample54 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3] > epsilon)) * 0.001177f * float(texInBounds54);
vec2 offset55 = vec2(onePixel[0] * -13.0, onePixel[1] * -1.0);
vec2 texCoords55 =  vec2(texture_uv[0], texture_uv[1]) + offset55;
float texAlpha55 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3]);
bool texInBounds55 = (abs(int(texCoords55[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords55[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords55[0] > 0.0f && texCoords55[0] < 1.0f && texCoords55[1] > 0.0f && texCoords55[1] < 1.0f;
float sample55 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3] > epsilon)) * 0.001178f * float(texInBounds55);
vec2 offset56 = vec2(onePixel[0] * -13.0, onePixel[1] * 0.0);
vec2 texCoords56 =  vec2(texture_uv[0], texture_uv[1]) + offset56;
float texAlpha56 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3]);
bool texInBounds56 = (abs(int(texCoords56[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords56[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords56[0] > 0.0f && texCoords56[0] < 1.0f && texCoords56[1] > 0.0f && texCoords56[1] < 1.0f;
float sample56 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3] > epsilon)) * 0.001178f * float(texInBounds56);
vec2 offset57 = vec2(onePixel[0] * -13.0, onePixel[1] * 1.0);
vec2 texCoords57 =  vec2(texture_uv[0], texture_uv[1]) + offset57;
float texAlpha57 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3]);
bool texInBounds57 = (abs(int(texCoords57[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords57[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords57[0] > 0.0f && texCoords57[0] < 1.0f && texCoords57[1] > 0.0f && texCoords57[1] < 1.0f;
float sample57 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3] > epsilon)) * 0.001178f * float(texInBounds57);
vec2 offset58 = vec2(onePixel[0] * -13.0, onePixel[1] * 2.0);
vec2 texCoords58 =  vec2(texture_uv[0], texture_uv[1]) + offset58;
float texAlpha58 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3]);
bool texInBounds58 = (abs(int(texCoords58[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords58[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords58[0] > 0.0f && texCoords58[0] < 1.0f && texCoords58[1] > 0.0f && texCoords58[1] < 1.0f;
float sample58 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3] > epsilon)) * 0.001177f * float(texInBounds58);
vec2 offset59 = vec2(onePixel[0] * -13.0, onePixel[1] * 3.0);
vec2 texCoords59 =  vec2(texture_uv[0], texture_uv[1]) + offset59;
float texAlpha59 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3]);
bool texInBounds59 = (abs(int(texCoords59[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords59[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords59[0] > 0.0f && texCoords59[0] < 1.0f && texCoords59[1] > 0.0f && texCoords59[1] < 1.0f;
float sample59 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3] > epsilon)) * 0.001175f * float(texInBounds59);
vec2 offset60 = vec2(onePixel[0] * -13.0, onePixel[1] * 4.0);
vec2 texCoords60 =  vec2(texture_uv[0], texture_uv[1]) + offset60;
float texAlpha60 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3]);
bool texInBounds60 = (abs(int(texCoords60[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords60[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords60[0] > 0.0f && texCoords60[0] < 1.0f && texCoords60[1] > 0.0f && texCoords60[1] < 1.0f;
float sample60 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3] > epsilon)) * 0.001173f * float(texInBounds60);
vec2 offset61 = vec2(onePixel[0] * -13.0, onePixel[1] * 5.0);
vec2 texCoords61 =  vec2(texture_uv[0], texture_uv[1]) + offset61;
float texAlpha61 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3]);
bool texInBounds61 = (abs(int(texCoords61[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords61[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords61[0] > 0.0f && texCoords61[0] < 1.0f && texCoords61[1] > 0.0f && texCoords61[1] < 1.0f;
float sample61 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3] > epsilon)) * 0.001170f * float(texInBounds61);
vec2 offset62 = vec2(onePixel[0] * -13.0, onePixel[1] * 6.0);
vec2 texCoords62 =  vec2(texture_uv[0], texture_uv[1]) + offset62;
float texAlpha62 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3]);
bool texInBounds62 = (abs(int(texCoords62[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords62[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords62[0] > 0.0f && texCoords62[0] < 1.0f && texCoords62[1] > 0.0f && texCoords62[1] < 1.0f;
float sample62 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3] > epsilon)) * 0.001166f * float(texInBounds62);
vec2 offset63 = vec2(onePixel[0] * -13.0, onePixel[1] * 7.0);
vec2 texCoords63 =  vec2(texture_uv[0], texture_uv[1]) + offset63;
float texAlpha63 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3]);
bool texInBounds63 = (abs(int(texCoords63[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords63[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords63[0] > 0.0f && texCoords63[0] < 1.0f && texCoords63[1] > 0.0f && texCoords63[1] < 1.0f;
float sample63 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3] > epsilon)) * 0.001161f * float(texInBounds63);
vec2 offset64 = vec2(onePixel[0] * -12.0, onePixel[1] * -8.0);
vec2 texCoords64 =  vec2(texture_uv[0], texture_uv[1]) + offset64;
float texAlpha64 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3]);
bool texInBounds64 = (abs(int(texCoords64[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords64[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords64[0] > 0.0f && texCoords64[0] < 1.0f && texCoords64[1] > 0.0f && texCoords64[1] < 1.0f;
float sample64 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3] > epsilon)) * 0.001165f * float(texInBounds64);
vec2 offset65 = vec2(onePixel[0] * -12.0, onePixel[1] * -7.0);
vec2 texCoords65 =  vec2(texture_uv[0], texture_uv[1]) + offset65;
float texAlpha65 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3]);
bool texInBounds65 = (abs(int(texCoords65[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords65[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords65[0] > 0.0f && texCoords65[0] < 1.0f && texCoords65[1] > 0.0f && texCoords65[1] < 1.0f;
float sample65 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3] > epsilon)) * 0.001170f * float(texInBounds65);
vec2 offset66 = vec2(onePixel[0] * -12.0, onePixel[1] * -6.0);
vec2 texCoords66 =  vec2(texture_uv[0], texture_uv[1]) + offset66;
float texAlpha66 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3]);
bool texInBounds66 = (abs(int(texCoords66[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords66[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords66[0] > 0.0f && texCoords66[0] < 1.0f && texCoords66[1] > 0.0f && texCoords66[1] < 1.0f;
float sample66 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3] > epsilon)) * 0.001175f * float(texInBounds66);
vec2 offset67 = vec2(onePixel[0] * -12.0, onePixel[1] * -5.0);
vec2 texCoords67 =  vec2(texture_uv[0], texture_uv[1]) + offset67;
float texAlpha67 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3]);
bool texInBounds67 = (abs(int(texCoords67[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords67[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords67[0] > 0.0f && texCoords67[0] < 1.0f && texCoords67[1] > 0.0f && texCoords67[1] < 1.0f;
float sample67 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3] > epsilon)) * 0.001178f * float(texInBounds67);
vec2 offset68 = vec2(onePixel[0] * -12.0, onePixel[1] * -4.0);
vec2 texCoords68 =  vec2(texture_uv[0], texture_uv[1]) + offset68;
float texAlpha68 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3]);
bool texInBounds68 = (abs(int(texCoords68[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords68[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords68[0] > 0.0f && texCoords68[0] < 1.0f && texCoords68[1] > 0.0f && texCoords68[1] < 1.0f;
float sample68 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3] > epsilon)) * 0.001182f * float(texInBounds68);
vec2 offset69 = vec2(onePixel[0] * -12.0, onePixel[1] * -3.0);
vec2 texCoords69 =  vec2(texture_uv[0], texture_uv[1]) + offset69;
float texAlpha69 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3]);
bool texInBounds69 = (abs(int(texCoords69[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords69[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords69[0] > 0.0f && texCoords69[0] < 1.0f && texCoords69[1] > 0.0f && texCoords69[1] < 1.0f;
float sample69 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3] > epsilon)) * 0.001184f * float(texInBounds69);
vec2 offset70 = vec2(onePixel[0] * -12.0, onePixel[1] * -2.0);
vec2 texCoords70 =  vec2(texture_uv[0], texture_uv[1]) + offset70;
float texAlpha70 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3]);
bool texInBounds70 = (abs(int(texCoords70[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords70[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords70[0] > 0.0f && texCoords70[0] < 1.0f && texCoords70[1] > 0.0f && texCoords70[1] < 1.0f;
float sample70 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3] > epsilon)) * 0.001186f * float(texInBounds70);
vec2 offset71 = vec2(onePixel[0] * -12.0, onePixel[1] * -1.0);
vec2 texCoords71 =  vec2(texture_uv[0], texture_uv[1]) + offset71;
float texAlpha71 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3]);
bool texInBounds71 = (abs(int(texCoords71[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords71[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords71[0] > 0.0f && texCoords71[0] < 1.0f && texCoords71[1] > 0.0f && texCoords71[1] < 1.0f;
float sample71 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3] > epsilon)) * 0.001187f * float(texInBounds71);
vec2 offset72 = vec2(onePixel[0] * -12.0, onePixel[1] * 0.0);
vec2 texCoords72 =  vec2(texture_uv[0], texture_uv[1]) + offset72;
float texAlpha72 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3]);
bool texInBounds72 = (abs(int(texCoords72[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords72[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords72[0] > 0.0f && texCoords72[0] < 1.0f && texCoords72[1] > 0.0f && texCoords72[1] < 1.0f;
float sample72 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3] > epsilon)) * 0.001187f * float(texInBounds72);
vec2 offset73 = vec2(onePixel[0] * -12.0, onePixel[1] * 1.0);
vec2 texCoords73 =  vec2(texture_uv[0], texture_uv[1]) + offset73;
float texAlpha73 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3]);
bool texInBounds73 = (abs(int(texCoords73[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords73[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords73[0] > 0.0f && texCoords73[0] < 1.0f && texCoords73[1] > 0.0f && texCoords73[1] < 1.0f;
float sample73 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3] > epsilon)) * 0.001187f * float(texInBounds73);
vec2 offset74 = vec2(onePixel[0] * -12.0, onePixel[1] * 2.0);
vec2 texCoords74 =  vec2(texture_uv[0], texture_uv[1]) + offset74;
float texAlpha74 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3]);
bool texInBounds74 = (abs(int(texCoords74[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords74[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords74[0] > 0.0f && texCoords74[0] < 1.0f && texCoords74[1] > 0.0f && texCoords74[1] < 1.0f;
float sample74 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3] > epsilon)) * 0.001186f * float(texInBounds74);
vec2 offset75 = vec2(onePixel[0] * -12.0, onePixel[1] * 3.0);
vec2 texCoords75 =  vec2(texture_uv[0], texture_uv[1]) + offset75;
float texAlpha75 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3]);
bool texInBounds75 = (abs(int(texCoords75[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords75[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords75[0] > 0.0f && texCoords75[0] < 1.0f && texCoords75[1] > 0.0f && texCoords75[1] < 1.0f;
float sample75 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3] > epsilon)) * 0.001184f * float(texInBounds75);
vec2 offset76 = vec2(onePixel[0] * -12.0, onePixel[1] * 4.0);
vec2 texCoords76 =  vec2(texture_uv[0], texture_uv[1]) + offset76;
float texAlpha76 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3]);
bool texInBounds76 = (abs(int(texCoords76[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords76[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords76[0] > 0.0f && texCoords76[0] < 1.0f && texCoords76[1] > 0.0f && texCoords76[1] < 1.0f;
float sample76 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3] > epsilon)) * 0.001182f * float(texInBounds76);
vec2 offset77 = vec2(onePixel[0] * -12.0, onePixel[1] * 5.0);
vec2 texCoords77 =  vec2(texture_uv[0], texture_uv[1]) + offset77;
float texAlpha77 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3]);
bool texInBounds77 = (abs(int(texCoords77[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords77[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords77[0] > 0.0f && texCoords77[0] < 1.0f && texCoords77[1] > 0.0f && texCoords77[1] < 1.0f;
float sample77 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3] > epsilon)) * 0.001178f * float(texInBounds77);
vec2 offset78 = vec2(onePixel[0] * -12.0, onePixel[1] * 6.0);
vec2 texCoords78 =  vec2(texture_uv[0], texture_uv[1]) + offset78;
float texAlpha78 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3]);
bool texInBounds78 = (abs(int(texCoords78[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords78[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords78[0] > 0.0f && texCoords78[0] < 1.0f && texCoords78[1] > 0.0f && texCoords78[1] < 1.0f;
float sample78 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3] > epsilon)) * 0.001175f * float(texInBounds78);
vec2 offset79 = vec2(onePixel[0] * -12.0, onePixel[1] * 7.0);
vec2 texCoords79 =  vec2(texture_uv[0], texture_uv[1]) + offset79;
float texAlpha79 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3]);
bool texInBounds79 = (abs(int(texCoords79[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords79[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords79[0] > 0.0f && texCoords79[0] < 1.0f && texCoords79[1] > 0.0f && texCoords79[1] < 1.0f;
float sample79 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3] > epsilon)) * 0.001170f * float(texInBounds79);
vec2 offset80 = vec2(onePixel[0] * -12.0, onePixel[1] * 8.0);
vec2 texCoords80 =  vec2(texture_uv[0], texture_uv[1]) + offset80;
float texAlpha80 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3]);
bool texInBounds80 = (abs(int(texCoords80[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords80[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords80[0] > 0.0f && texCoords80[0] < 1.0f && texCoords80[1] > 0.0f && texCoords80[1] < 1.0f;
float sample80 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3] > epsilon)) * 0.001165f * float(texInBounds80);
vec2 offset81 = vec2(onePixel[0] * -11.0, onePixel[1] * -9.0);
vec2 texCoords81 =  vec2(texture_uv[0], texture_uv[1]) + offset81;
float texAlpha81 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3]);
bool texInBounds81 = (abs(int(texCoords81[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords81[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords81[0] > 0.0f && texCoords81[0] < 1.0f && texCoords81[1] > 0.0f && texCoords81[1] < 1.0f;
float sample81 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3] > epsilon)) * 0.001167f * float(texInBounds81);
vec2 offset82 = vec2(onePixel[0] * -11.0, onePixel[1] * -8.0);
vec2 texCoords82 =  vec2(texture_uv[0], texture_uv[1]) + offset82;
float texAlpha82 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3]);
bool texInBounds82 = (abs(int(texCoords82[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords82[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords82[0] > 0.0f && texCoords82[0] < 1.0f && texCoords82[1] > 0.0f && texCoords82[1] < 1.0f;
float sample82 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3] > epsilon)) * 0.001173f * float(texInBounds82);
vec2 offset83 = vec2(onePixel[0] * -11.0, onePixel[1] * -7.0);
vec2 texCoords83 =  vec2(texture_uv[0], texture_uv[1]) + offset83;
float texAlpha83 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3]);
bool texInBounds83 = (abs(int(texCoords83[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords83[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords83[0] > 0.0f && texCoords83[0] < 1.0f && texCoords83[1] > 0.0f && texCoords83[1] < 1.0f;
float sample83 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3] > epsilon)) * 0.001178f * float(texInBounds83);
vec2 offset84 = vec2(onePixel[0] * -11.0, onePixel[1] * -6.0);
vec2 texCoords84 =  vec2(texture_uv[0], texture_uv[1]) + offset84;
float texAlpha84 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3]);
bool texInBounds84 = (abs(int(texCoords84[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords84[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords84[0] > 0.0f && texCoords84[0] < 1.0f && texCoords84[1] > 0.0f && texCoords84[1] < 1.0f;
float sample84 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3] > epsilon)) * 0.001183f * float(texInBounds84);
vec2 offset85 = vec2(onePixel[0] * -11.0, onePixel[1] * -5.0);
vec2 texCoords85 =  vec2(texture_uv[0], texture_uv[1]) + offset85;
float texAlpha85 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3]);
bool texInBounds85 = (abs(int(texCoords85[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords85[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords85[0] > 0.0f && texCoords85[0] < 1.0f && texCoords85[1] > 0.0f && texCoords85[1] < 1.0f;
float sample85 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3] > epsilon)) * 0.001187f * float(texInBounds85);
vec2 offset86 = vec2(onePixel[0] * -11.0, onePixel[1] * -4.0);
vec2 texCoords86 =  vec2(texture_uv[0], texture_uv[1]) + offset86;
float texAlpha86 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3]);
bool texInBounds86 = (abs(int(texCoords86[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords86[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords86[0] > 0.0f && texCoords86[0] < 1.0f && texCoords86[1] > 0.0f && texCoords86[1] < 1.0f;
float sample86 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3] > epsilon)) * 0.001190f * float(texInBounds86);
vec2 offset87 = vec2(onePixel[0] * -11.0, onePixel[1] * -3.0);
vec2 texCoords87 =  vec2(texture_uv[0], texture_uv[1]) + offset87;
float texAlpha87 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3]);
bool texInBounds87 = (abs(int(texCoords87[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords87[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords87[0] > 0.0f && texCoords87[0] < 1.0f && texCoords87[1] > 0.0f && texCoords87[1] < 1.0f;
float sample87 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3] > epsilon)) * 0.001192f * float(texInBounds87);
vec2 offset88 = vec2(onePixel[0] * -11.0, onePixel[1] * -2.0);
vec2 texCoords88 =  vec2(texture_uv[0], texture_uv[1]) + offset88;
float texAlpha88 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3]);
bool texInBounds88 = (abs(int(texCoords88[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords88[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords88[0] > 0.0f && texCoords88[0] < 1.0f && texCoords88[1] > 0.0f && texCoords88[1] < 1.0f;
float sample88 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3] > epsilon)) * 0.001194f * float(texInBounds88);
vec2 offset89 = vec2(onePixel[0] * -11.0, onePixel[1] * -1.0);
vec2 texCoords89 =  vec2(texture_uv[0], texture_uv[1]) + offset89;
float texAlpha89 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3]);
bool texInBounds89 = (abs(int(texCoords89[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords89[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords89[0] > 0.0f && texCoords89[0] < 1.0f && texCoords89[1] > 0.0f && texCoords89[1] < 1.0f;
float sample89 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3] > epsilon)) * 0.001195f * float(texInBounds89);
vec2 offset90 = vec2(onePixel[0] * -11.0, onePixel[1] * 0.0);
vec2 texCoords90 =  vec2(texture_uv[0], texture_uv[1]) + offset90;
float texAlpha90 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3]);
bool texInBounds90 = (abs(int(texCoords90[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords90[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords90[0] > 0.0f && texCoords90[0] < 1.0f && texCoords90[1] > 0.0f && texCoords90[1] < 1.0f;
float sample90 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3] > epsilon)) * 0.001195f * float(texInBounds90);
vec2 offset91 = vec2(onePixel[0] * -11.0, onePixel[1] * 1.0);
vec2 texCoords91 =  vec2(texture_uv[0], texture_uv[1]) + offset91;
float texAlpha91 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3]);
bool texInBounds91 = (abs(int(texCoords91[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords91[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords91[0] > 0.0f && texCoords91[0] < 1.0f && texCoords91[1] > 0.0f && texCoords91[1] < 1.0f;
float sample91 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3] > epsilon)) * 0.001195f * float(texInBounds91);
vec2 offset92 = vec2(onePixel[0] * -11.0, onePixel[1] * 2.0);
vec2 texCoords92 =  vec2(texture_uv[0], texture_uv[1]) + offset92;
float texAlpha92 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3]);
bool texInBounds92 = (abs(int(texCoords92[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords92[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords92[0] > 0.0f && texCoords92[0] < 1.0f && texCoords92[1] > 0.0f && texCoords92[1] < 1.0f;
float sample92 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3] > epsilon)) * 0.001194f * float(texInBounds92);
vec2 offset93 = vec2(onePixel[0] * -11.0, onePixel[1] * 3.0);
vec2 texCoords93 =  vec2(texture_uv[0], texture_uv[1]) + offset93;
float texAlpha93 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3]);
bool texInBounds93 = (abs(int(texCoords93[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords93[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords93[0] > 0.0f && texCoords93[0] < 1.0f && texCoords93[1] > 0.0f && texCoords93[1] < 1.0f;
float sample93 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3] > epsilon)) * 0.001192f * float(texInBounds93);
vec2 offset94 = vec2(onePixel[0] * -11.0, onePixel[1] * 4.0);
vec2 texCoords94 =  vec2(texture_uv[0], texture_uv[1]) + offset94;
float texAlpha94 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3]);
bool texInBounds94 = (abs(int(texCoords94[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords94[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords94[0] > 0.0f && texCoords94[0] < 1.0f && texCoords94[1] > 0.0f && texCoords94[1] < 1.0f;
float sample94 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3] > epsilon)) * 0.001190f * float(texInBounds94);
vec2 offset95 = vec2(onePixel[0] * -11.0, onePixel[1] * 5.0);
vec2 texCoords95 =  vec2(texture_uv[0], texture_uv[1]) + offset95;
float texAlpha95 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3]);
bool texInBounds95 = (abs(int(texCoords95[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords95[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords95[0] > 0.0f && texCoords95[0] < 1.0f && texCoords95[1] > 0.0f && texCoords95[1] < 1.0f;
float sample95 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3] > epsilon)) * 0.001187f * float(texInBounds95);
vec2 offset96 = vec2(onePixel[0] * -11.0, onePixel[1] * 6.0);
vec2 texCoords96 =  vec2(texture_uv[0], texture_uv[1]) + offset96;
float texAlpha96 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3]);
bool texInBounds96 = (abs(int(texCoords96[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords96[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords96[0] > 0.0f && texCoords96[0] < 1.0f && texCoords96[1] > 0.0f && texCoords96[1] < 1.0f;
float sample96 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3] > epsilon)) * 0.001183f * float(texInBounds96);
vec2 offset97 = vec2(onePixel[0] * -11.0, onePixel[1] * 7.0);
vec2 texCoords97 =  vec2(texture_uv[0], texture_uv[1]) + offset97;
float texAlpha97 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3]);
bool texInBounds97 = (abs(int(texCoords97[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords97[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords97[0] > 0.0f && texCoords97[0] < 1.0f && texCoords97[1] > 0.0f && texCoords97[1] < 1.0f;
float sample97 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3] > epsilon)) * 0.001178f * float(texInBounds97);
vec2 offset98 = vec2(onePixel[0] * -11.0, onePixel[1] * 8.0);
vec2 texCoords98 =  vec2(texture_uv[0], texture_uv[1]) + offset98;
float texAlpha98 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3]);
bool texInBounds98 = (abs(int(texCoords98[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords98[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords98[0] > 0.0f && texCoords98[0] < 1.0f && texCoords98[1] > 0.0f && texCoords98[1] < 1.0f;
float sample98 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3] > epsilon)) * 0.001173f * float(texInBounds98);
vec2 offset99 = vec2(onePixel[0] * -11.0, onePixel[1] * 9.0);
vec2 texCoords99 =  vec2(texture_uv[0], texture_uv[1]) + offset99;
float texAlpha99 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3]);
bool texInBounds99 = (abs(int(texCoords99[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords99[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords99[0] > 0.0f && texCoords99[0] < 1.0f && texCoords99[1] > 0.0f && texCoords99[1] < 1.0f;
float sample99 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3] > epsilon)) * 0.001167f * float(texInBounds99);
vec2 offset100 = vec2(onePixel[0] * -10.0, onePixel[1] * -10.0);
vec2 texCoords100 =  vec2(texture_uv[0], texture_uv[1]) + offset100;
float texAlpha100 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3]);
bool texInBounds100 = (abs(int(texCoords100[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords100[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords100[0] > 0.0f && texCoords100[0] < 1.0f && texCoords100[1] > 0.0f && texCoords100[1] < 1.0f;
float sample100 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3] > epsilon)) * 0.001168f * float(texInBounds100);
vec2 offset101 = vec2(onePixel[0] * -10.0, onePixel[1] * -9.0);
vec2 texCoords101 =  vec2(texture_uv[0], texture_uv[1]) + offset101;
float texAlpha101 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3]);
bool texInBounds101 = (abs(int(texCoords101[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords101[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords101[0] > 0.0f && texCoords101[0] < 1.0f && texCoords101[1] > 0.0f && texCoords101[1] < 1.0f;
float sample101 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3] > epsilon)) * 0.001174f * float(texInBounds101);
vec2 offset102 = vec2(onePixel[0] * -10.0, onePixel[1] * -8.0);
vec2 texCoords102 =  vec2(texture_uv[0], texture_uv[1]) + offset102;
float texAlpha102 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3]);
bool texInBounds102 = (abs(int(texCoords102[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords102[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords102[0] > 0.0f && texCoords102[0] < 1.0f && texCoords102[1] > 0.0f && texCoords102[1] < 1.0f;
float sample102 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3] > epsilon)) * 0.001180f * float(texInBounds102);
vec2 offset103 = vec2(onePixel[0] * -10.0, onePixel[1] * -7.0);
vec2 texCoords103 =  vec2(texture_uv[0], texture_uv[1]) + offset103;
float texAlpha103 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3]);
bool texInBounds103 = (abs(int(texCoords103[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords103[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords103[0] > 0.0f && texCoords103[0] < 1.0f && texCoords103[1] > 0.0f && texCoords103[1] < 1.0f;
float sample103 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3] > epsilon)) * 0.001186f * float(texInBounds103);
vec2 offset104 = vec2(onePixel[0] * -10.0, onePixel[1] * -6.0);
vec2 texCoords104 =  vec2(texture_uv[0], texture_uv[1]) + offset104;
float texAlpha104 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3]);
bool texInBounds104 = (abs(int(texCoords104[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords104[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords104[0] > 0.0f && texCoords104[0] < 1.0f && texCoords104[1] > 0.0f && texCoords104[1] < 1.0f;
float sample104 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3] > epsilon)) * 0.001190f * float(texInBounds104);
vec2 offset105 = vec2(onePixel[0] * -10.0, onePixel[1] * -5.0);
vec2 texCoords105 =  vec2(texture_uv[0], texture_uv[1]) + offset105;
float texAlpha105 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3]);
bool texInBounds105 = (abs(int(texCoords105[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords105[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords105[0] > 0.0f && texCoords105[0] < 1.0f && texCoords105[1] > 0.0f && texCoords105[1] < 1.0f;
float sample105 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3] > epsilon)) * 0.001194f * float(texInBounds105);
vec2 offset106 = vec2(onePixel[0] * -10.0, onePixel[1] * -4.0);
vec2 texCoords106 =  vec2(texture_uv[0], texture_uv[1]) + offset106;
float texAlpha106 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3]);
bool texInBounds106 = (abs(int(texCoords106[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords106[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords106[0] > 0.0f && texCoords106[0] < 1.0f && texCoords106[1] > 0.0f && texCoords106[1] < 1.0f;
float sample106 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3] > epsilon)) * 0.001197f * float(texInBounds106);
vec2 offset107 = vec2(onePixel[0] * -10.0, onePixel[1] * -3.0);
vec2 texCoords107 =  vec2(texture_uv[0], texture_uv[1]) + offset107;
float texAlpha107 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3]);
bool texInBounds107 = (abs(int(texCoords107[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords107[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords107[0] > 0.0f && texCoords107[0] < 1.0f && texCoords107[1] > 0.0f && texCoords107[1] < 1.0f;
float sample107 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3] > epsilon)) * 0.001200f * float(texInBounds107);
vec2 offset108 = vec2(onePixel[0] * -10.0, onePixel[1] * -2.0);
vec2 texCoords108 =  vec2(texture_uv[0], texture_uv[1]) + offset108;
float texAlpha108 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3]);
bool texInBounds108 = (abs(int(texCoords108[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords108[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords108[0] > 0.0f && texCoords108[0] < 1.0f && texCoords108[1] > 0.0f && texCoords108[1] < 1.0f;
float sample108 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3] > epsilon)) * 0.001202f * float(texInBounds108);
vec2 offset109 = vec2(onePixel[0] * -10.0, onePixel[1] * -1.0);
vec2 texCoords109 =  vec2(texture_uv[0], texture_uv[1]) + offset109;
float texAlpha109 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3]);
bool texInBounds109 = (abs(int(texCoords109[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords109[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords109[0] > 0.0f && texCoords109[0] < 1.0f && texCoords109[1] > 0.0f && texCoords109[1] < 1.0f;
float sample109 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3] > epsilon)) * 0.001203f * float(texInBounds109);
vec2 offset110 = vec2(onePixel[0] * -10.0, onePixel[1] * 0.0);
vec2 texCoords110 =  vec2(texture_uv[0], texture_uv[1]) + offset110;
float texAlpha110 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3]);
bool texInBounds110 = (abs(int(texCoords110[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords110[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords110[0] > 0.0f && texCoords110[0] < 1.0f && texCoords110[1] > 0.0f && texCoords110[1] < 1.0f;
float sample110 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3] > epsilon)) * 0.001203f * float(texInBounds110);
vec2 offset111 = vec2(onePixel[0] * -10.0, onePixel[1] * 1.0);
vec2 texCoords111 =  vec2(texture_uv[0], texture_uv[1]) + offset111;
float texAlpha111 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3]);
bool texInBounds111 = (abs(int(texCoords111[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords111[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords111[0] > 0.0f && texCoords111[0] < 1.0f && texCoords111[1] > 0.0f && texCoords111[1] < 1.0f;
float sample111 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3] > epsilon)) * 0.001203f * float(texInBounds111);
vec2 offset112 = vec2(onePixel[0] * -10.0, onePixel[1] * 2.0);
vec2 texCoords112 =  vec2(texture_uv[0], texture_uv[1]) + offset112;
float texAlpha112 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3]);
bool texInBounds112 = (abs(int(texCoords112[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords112[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords112[0] > 0.0f && texCoords112[0] < 1.0f && texCoords112[1] > 0.0f && texCoords112[1] < 1.0f;
float sample112 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3] > epsilon)) * 0.001202f * float(texInBounds112);
vec2 offset113 = vec2(onePixel[0] * -10.0, onePixel[1] * 3.0);
vec2 texCoords113 =  vec2(texture_uv[0], texture_uv[1]) + offset113;
float texAlpha113 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3]);
bool texInBounds113 = (abs(int(texCoords113[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords113[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords113[0] > 0.0f && texCoords113[0] < 1.0f && texCoords113[1] > 0.0f && texCoords113[1] < 1.0f;
float sample113 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3] > epsilon)) * 0.001200f * float(texInBounds113);
vec2 offset114 = vec2(onePixel[0] * -10.0, onePixel[1] * 4.0);
vec2 texCoords114 =  vec2(texture_uv[0], texture_uv[1]) + offset114;
float texAlpha114 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3]);
bool texInBounds114 = (abs(int(texCoords114[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords114[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords114[0] > 0.0f && texCoords114[0] < 1.0f && texCoords114[1] > 0.0f && texCoords114[1] < 1.0f;
float sample114 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3] > epsilon)) * 0.001197f * float(texInBounds114);
vec2 offset115 = vec2(onePixel[0] * -10.0, onePixel[1] * 5.0);
vec2 texCoords115 =  vec2(texture_uv[0], texture_uv[1]) + offset115;
float texAlpha115 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3]);
bool texInBounds115 = (abs(int(texCoords115[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords115[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords115[0] > 0.0f && texCoords115[0] < 1.0f && texCoords115[1] > 0.0f && texCoords115[1] < 1.0f;
float sample115 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3] > epsilon)) * 0.001194f * float(texInBounds115);
vec2 offset116 = vec2(onePixel[0] * -10.0, onePixel[1] * 6.0);
vec2 texCoords116 =  vec2(texture_uv[0], texture_uv[1]) + offset116;
float texAlpha116 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3]);
bool texInBounds116 = (abs(int(texCoords116[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords116[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords116[0] > 0.0f && texCoords116[0] < 1.0f && texCoords116[1] > 0.0f && texCoords116[1] < 1.0f;
float sample116 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3] > epsilon)) * 0.001190f * float(texInBounds116);
vec2 offset117 = vec2(onePixel[0] * -10.0, onePixel[1] * 7.0);
vec2 texCoords117 =  vec2(texture_uv[0], texture_uv[1]) + offset117;
float texAlpha117 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3]);
bool texInBounds117 = (abs(int(texCoords117[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords117[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords117[0] > 0.0f && texCoords117[0] < 1.0f && texCoords117[1] > 0.0f && texCoords117[1] < 1.0f;
float sample117 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3] > epsilon)) * 0.001186f * float(texInBounds117);
vec2 offset118 = vec2(onePixel[0] * -10.0, onePixel[1] * 8.0);
vec2 texCoords118 =  vec2(texture_uv[0], texture_uv[1]) + offset118;
float texAlpha118 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3]);
bool texInBounds118 = (abs(int(texCoords118[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords118[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords118[0] > 0.0f && texCoords118[0] < 1.0f && texCoords118[1] > 0.0f && texCoords118[1] < 1.0f;
float sample118 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3] > epsilon)) * 0.001180f * float(texInBounds118);
vec2 offset119 = vec2(onePixel[0] * -10.0, onePixel[1] * 9.0);
vec2 texCoords119 =  vec2(texture_uv[0], texture_uv[1]) + offset119;
float texAlpha119 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3]);
bool texInBounds119 = (abs(int(texCoords119[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords119[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords119[0] > 0.0f && texCoords119[0] < 1.0f && texCoords119[1] > 0.0f && texCoords119[1] < 1.0f;
float sample119 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3] > epsilon)) * 0.001174f * float(texInBounds119);
vec2 offset120 = vec2(onePixel[0] * -10.0, onePixel[1] * 10.0);
vec2 texCoords120 =  vec2(texture_uv[0], texture_uv[1]) + offset120;
float texAlpha120 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3]);
bool texInBounds120 = (abs(int(texCoords120[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords120[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords120[0] > 0.0f && texCoords120[0] < 1.0f && texCoords120[1] > 0.0f && texCoords120[1] < 1.0f;
float sample120 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3] > epsilon)) * 0.001168f * float(texInBounds120);
vec2 offset121 = vec2(onePixel[0] * -9.0, onePixel[1] * -11.0);
vec2 texCoords121 =  vec2(texture_uv[0], texture_uv[1]) + offset121;
float texAlpha121 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3]);
bool texInBounds121 = (abs(int(texCoords121[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords121[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords121[0] > 0.0f && texCoords121[0] < 1.0f && texCoords121[1] > 0.0f && texCoords121[1] < 1.0f;
float sample121 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3] > epsilon)) * 0.001167f * float(texInBounds121);
vec2 offset122 = vec2(onePixel[0] * -9.0, onePixel[1] * -10.0);
vec2 texCoords122 =  vec2(texture_uv[0], texture_uv[1]) + offset122;
float texAlpha122 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3]);
bool texInBounds122 = (abs(int(texCoords122[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords122[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords122[0] > 0.0f && texCoords122[0] < 1.0f && texCoords122[1] > 0.0f && texCoords122[1] < 1.0f;
float sample122 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3] > epsilon)) * 0.001174f * float(texInBounds122);
vec2 offset123 = vec2(onePixel[0] * -9.0, onePixel[1] * -9.0);
vec2 texCoords123 =  vec2(texture_uv[0], texture_uv[1]) + offset123;
float texAlpha123 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3]);
bool texInBounds123 = (abs(int(texCoords123[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords123[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords123[0] > 0.0f && texCoords123[0] < 1.0f && texCoords123[1] > 0.0f && texCoords123[1] < 1.0f;
float sample123 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3] > epsilon)) * 0.001181f * float(texInBounds123);
vec2 offset124 = vec2(onePixel[0] * -9.0, onePixel[1] * -8.0);
vec2 texCoords124 =  vec2(texture_uv[0], texture_uv[1]) + offset124;
float texAlpha124 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3]);
bool texInBounds124 = (abs(int(texCoords124[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords124[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords124[0] > 0.0f && texCoords124[0] < 1.0f && texCoords124[1] > 0.0f && texCoords124[1] < 1.0f;
float sample124 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3] > epsilon)) * 0.001187f * float(texInBounds124);
vec2 offset125 = vec2(onePixel[0] * -9.0, onePixel[1] * -7.0);
vec2 texCoords125 =  vec2(texture_uv[0], texture_uv[1]) + offset125;
float texAlpha125 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3]);
bool texInBounds125 = (abs(int(texCoords125[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords125[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords125[0] > 0.0f && texCoords125[0] < 1.0f && texCoords125[1] > 0.0f && texCoords125[1] < 1.0f;
float sample125 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3] > epsilon)) * 0.001192f * float(texInBounds125);
vec2 offset126 = vec2(onePixel[0] * -9.0, onePixel[1] * -6.0);
vec2 texCoords126 =  vec2(texture_uv[0], texture_uv[1]) + offset126;
float texAlpha126 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3]);
bool texInBounds126 = (abs(int(texCoords126[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords126[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords126[0] > 0.0f && texCoords126[0] < 1.0f && texCoords126[1] > 0.0f && texCoords126[1] < 1.0f;
float sample126 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3] > epsilon)) * 0.001197f * float(texInBounds126);
vec2 offset127 = vec2(onePixel[0] * -9.0, onePixel[1] * -5.0);
vec2 texCoords127 =  vec2(texture_uv[0], texture_uv[1]) + offset127;
float texAlpha127 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3]);
bool texInBounds127 = (abs(int(texCoords127[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords127[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords127[0] > 0.0f && texCoords127[0] < 1.0f && texCoords127[1] > 0.0f && texCoords127[1] < 1.0f;
float sample127 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3] > epsilon)) * 0.001201f * float(texInBounds127);
vec2 offset128 = vec2(onePixel[0] * -9.0, onePixel[1] * -4.0);
vec2 texCoords128 =  vec2(texture_uv[0], texture_uv[1]) + offset128;
float texAlpha128 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3]);
bool texInBounds128 = (abs(int(texCoords128[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords128[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords128[0] > 0.0f && texCoords128[0] < 1.0f && texCoords128[1] > 0.0f && texCoords128[1] < 1.0f;
float sample128 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3] > epsilon)) * 0.001204f * float(texInBounds128);
vec2 offset129 = vec2(onePixel[0] * -9.0, onePixel[1] * -3.0);
vec2 texCoords129 =  vec2(texture_uv[0], texture_uv[1]) + offset129;
float texAlpha129 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3]);
bool texInBounds129 = (abs(int(texCoords129[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords129[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords129[0] > 0.0f && texCoords129[0] < 1.0f && texCoords129[1] > 0.0f && texCoords129[1] < 1.0f;
float sample129 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3] > epsilon)) * 0.001207f * float(texInBounds129);
vec2 offset130 = vec2(onePixel[0] * -9.0, onePixel[1] * -2.0);
vec2 texCoords130 =  vec2(texture_uv[0], texture_uv[1]) + offset130;
float texAlpha130 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3]);
bool texInBounds130 = (abs(int(texCoords130[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords130[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords130[0] > 0.0f && texCoords130[0] < 1.0f && texCoords130[1] > 0.0f && texCoords130[1] < 1.0f;
float sample130 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3] > epsilon)) * 0.001208f * float(texInBounds130);
vec2 offset131 = vec2(onePixel[0] * -9.0, onePixel[1] * -1.0);
vec2 texCoords131 =  vec2(texture_uv[0], texture_uv[1]) + offset131;
float texAlpha131 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3]);
bool texInBounds131 = (abs(int(texCoords131[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords131[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords131[0] > 0.0f && texCoords131[0] < 1.0f && texCoords131[1] > 0.0f && texCoords131[1] < 1.0f;
float sample131 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3] > epsilon)) * 0.001209f * float(texInBounds131);
vec2 offset132 = vec2(onePixel[0] * -9.0, onePixel[1] * 0.0);
vec2 texCoords132 =  vec2(texture_uv[0], texture_uv[1]) + offset132;
float texAlpha132 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3]);
bool texInBounds132 = (abs(int(texCoords132[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords132[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords132[0] > 0.0f && texCoords132[0] < 1.0f && texCoords132[1] > 0.0f && texCoords132[1] < 1.0f;
float sample132 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3] > epsilon)) * 0.001210f * float(texInBounds132);
vec2 offset133 = vec2(onePixel[0] * -9.0, onePixel[1] * 1.0);
vec2 texCoords133 =  vec2(texture_uv[0], texture_uv[1]) + offset133;
float texAlpha133 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3]);
bool texInBounds133 = (abs(int(texCoords133[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords133[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords133[0] > 0.0f && texCoords133[0] < 1.0f && texCoords133[1] > 0.0f && texCoords133[1] < 1.0f;
float sample133 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3] > epsilon)) * 0.001209f * float(texInBounds133);
vec2 offset134 = vec2(onePixel[0] * -9.0, onePixel[1] * 2.0);
vec2 texCoords134 =  vec2(texture_uv[0], texture_uv[1]) + offset134;
float texAlpha134 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3]);
bool texInBounds134 = (abs(int(texCoords134[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords134[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords134[0] > 0.0f && texCoords134[0] < 1.0f && texCoords134[1] > 0.0f && texCoords134[1] < 1.0f;
float sample134 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3] > epsilon)) * 0.001208f * float(texInBounds134);
vec2 offset135 = vec2(onePixel[0] * -9.0, onePixel[1] * 3.0);
vec2 texCoords135 =  vec2(texture_uv[0], texture_uv[1]) + offset135;
float texAlpha135 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3]);
bool texInBounds135 = (abs(int(texCoords135[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords135[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords135[0] > 0.0f && texCoords135[0] < 1.0f && texCoords135[1] > 0.0f && texCoords135[1] < 1.0f;
float sample135 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3] > epsilon)) * 0.001207f * float(texInBounds135);
vec2 offset136 = vec2(onePixel[0] * -9.0, onePixel[1] * 4.0);
vec2 texCoords136 =  vec2(texture_uv[0], texture_uv[1]) + offset136;
float texAlpha136 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3]);
bool texInBounds136 = (abs(int(texCoords136[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords136[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords136[0] > 0.0f && texCoords136[0] < 1.0f && texCoords136[1] > 0.0f && texCoords136[1] < 1.0f;
float sample136 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3] > epsilon)) * 0.001204f * float(texInBounds136);
vec2 offset137 = vec2(onePixel[0] * -9.0, onePixel[1] * 5.0);
vec2 texCoords137 =  vec2(texture_uv[0], texture_uv[1]) + offset137;
float texAlpha137 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3]);
bool texInBounds137 = (abs(int(texCoords137[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords137[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords137[0] > 0.0f && texCoords137[0] < 1.0f && texCoords137[1] > 0.0f && texCoords137[1] < 1.0f;
float sample137 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3] > epsilon)) * 0.001201f * float(texInBounds137);
vec2 offset138 = vec2(onePixel[0] * -9.0, onePixel[1] * 6.0);
vec2 texCoords138 =  vec2(texture_uv[0], texture_uv[1]) + offset138;
float texAlpha138 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3]);
bool texInBounds138 = (abs(int(texCoords138[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords138[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords138[0] > 0.0f && texCoords138[0] < 1.0f && texCoords138[1] > 0.0f && texCoords138[1] < 1.0f;
float sample138 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3] > epsilon)) * 0.001197f * float(texInBounds138);
vec2 offset139 = vec2(onePixel[0] * -9.0, onePixel[1] * 7.0);
vec2 texCoords139 =  vec2(texture_uv[0], texture_uv[1]) + offset139;
float texAlpha139 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3]);
bool texInBounds139 = (abs(int(texCoords139[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords139[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords139[0] > 0.0f && texCoords139[0] < 1.0f && texCoords139[1] > 0.0f && texCoords139[1] < 1.0f;
float sample139 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3] > epsilon)) * 0.001192f * float(texInBounds139);
vec2 offset140 = vec2(onePixel[0] * -9.0, onePixel[1] * 8.0);
vec2 texCoords140 =  vec2(texture_uv[0], texture_uv[1]) + offset140;
float texAlpha140 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3]);
bool texInBounds140 = (abs(int(texCoords140[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords140[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords140[0] > 0.0f && texCoords140[0] < 1.0f && texCoords140[1] > 0.0f && texCoords140[1] < 1.0f;
float sample140 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3] > epsilon)) * 0.001187f * float(texInBounds140);
vec2 offset141 = vec2(onePixel[0] * -9.0, onePixel[1] * 9.0);
vec2 texCoords141 =  vec2(texture_uv[0], texture_uv[1]) + offset141;
float texAlpha141 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3]);
bool texInBounds141 = (abs(int(texCoords141[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords141[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords141[0] > 0.0f && texCoords141[0] < 1.0f && texCoords141[1] > 0.0f && texCoords141[1] < 1.0f;
float sample141 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3] > epsilon)) * 0.001181f * float(texInBounds141);
vec2 offset142 = vec2(onePixel[0] * -9.0, onePixel[1] * 10.0);
vec2 texCoords142 =  vec2(texture_uv[0], texture_uv[1]) + offset142;
float texAlpha142 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3]);
bool texInBounds142 = (abs(int(texCoords142[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords142[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords142[0] > 0.0f && texCoords142[0] < 1.0f && texCoords142[1] > 0.0f && texCoords142[1] < 1.0f;
float sample142 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3] > epsilon)) * 0.001174f * float(texInBounds142);
vec2 offset143 = vec2(onePixel[0] * -9.0, onePixel[1] * 11.0);
vec2 texCoords143 =  vec2(texture_uv[0], texture_uv[1]) + offset143;
float texAlpha143 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3]);
bool texInBounds143 = (abs(int(texCoords143[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords143[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords143[0] > 0.0f && texCoords143[0] < 1.0f && texCoords143[1] > 0.0f && texCoords143[1] < 1.0f;
float sample143 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3] > epsilon)) * 0.001167f * float(texInBounds143);
vec2 offset144 = vec2(onePixel[0] * -8.0, onePixel[1] * -12.0);
vec2 texCoords144 =  vec2(texture_uv[0], texture_uv[1]) + offset144;
float texAlpha144 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3]);
bool texInBounds144 = (abs(int(texCoords144[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords144[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords144[0] > 0.0f && texCoords144[0] < 1.0f && texCoords144[1] > 0.0f && texCoords144[1] < 1.0f;
float sample144 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3] > epsilon)) * 0.001165f * float(texInBounds144);
vec2 offset145 = vec2(onePixel[0] * -8.0, onePixel[1] * -11.0);
vec2 texCoords145 =  vec2(texture_uv[0], texture_uv[1]) + offset145;
float texAlpha145 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3]);
bool texInBounds145 = (abs(int(texCoords145[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords145[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords145[0] > 0.0f && texCoords145[0] < 1.0f && texCoords145[1] > 0.0f && texCoords145[1] < 1.0f;
float sample145 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3] > epsilon)) * 0.001173f * float(texInBounds145);
vec2 offset146 = vec2(onePixel[0] * -8.0, onePixel[1] * -10.0);
vec2 texCoords146 =  vec2(texture_uv[0], texture_uv[1]) + offset146;
float texAlpha146 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3]);
bool texInBounds146 = (abs(int(texCoords146[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords146[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords146[0] > 0.0f && texCoords146[0] < 1.0f && texCoords146[1] > 0.0f && texCoords146[1] < 1.0f;
float sample146 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3] > epsilon)) * 0.001180f * float(texInBounds146);
vec2 offset147 = vec2(onePixel[0] * -8.0, onePixel[1] * -9.0);
vec2 texCoords147 =  vec2(texture_uv[0], texture_uv[1]) + offset147;
float texAlpha147 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3]);
bool texInBounds147 = (abs(int(texCoords147[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords147[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords147[0] > 0.0f && texCoords147[0] < 1.0f && texCoords147[1] > 0.0f && texCoords147[1] < 1.0f;
float sample147 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3] > epsilon)) * 0.001187f * float(texInBounds147);
vec2 offset148 = vec2(onePixel[0] * -8.0, onePixel[1] * -8.0);
vec2 texCoords148 =  vec2(texture_uv[0], texture_uv[1]) + offset148;
float texAlpha148 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3]);
bool texInBounds148 = (abs(int(texCoords148[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords148[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords148[0] > 0.0f && texCoords148[0] < 1.0f && texCoords148[1] > 0.0f && texCoords148[1] < 1.0f;
float sample148 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3] > epsilon)) * 0.001193f * float(texInBounds148);
vec2 offset149 = vec2(onePixel[0] * -8.0, onePixel[1] * -7.0);
vec2 texCoords149 =  vec2(texture_uv[0], texture_uv[1]) + offset149;
float texAlpha149 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3]);
bool texInBounds149 = (abs(int(texCoords149[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords149[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords149[0] > 0.0f && texCoords149[0] < 1.0f && texCoords149[1] > 0.0f && texCoords149[1] < 1.0f;
float sample149 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3] > epsilon)) * 0.001198f * float(texInBounds149);
vec2 offset150 = vec2(onePixel[0] * -8.0, onePixel[1] * -6.0);
vec2 texCoords150 =  vec2(texture_uv[0], texture_uv[1]) + offset150;
float texAlpha150 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3]);
bool texInBounds150 = (abs(int(texCoords150[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords150[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords150[0] > 0.0f && texCoords150[0] < 1.0f && texCoords150[1] > 0.0f && texCoords150[1] < 1.0f;
float sample150 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3] > epsilon)) * 0.001203f * float(texInBounds150);
vec2 offset151 = vec2(onePixel[0] * -8.0, onePixel[1] * -5.0);
vec2 texCoords151 =  vec2(texture_uv[0], texture_uv[1]) + offset151;
float texAlpha151 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3]);
bool texInBounds151 = (abs(int(texCoords151[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords151[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords151[0] > 0.0f && texCoords151[0] < 1.0f && texCoords151[1] > 0.0f && texCoords151[1] < 1.0f;
float sample151 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3] > epsilon)) * 0.001207f * float(texInBounds151);
vec2 offset152 = vec2(onePixel[0] * -8.0, onePixel[1] * -4.0);
vec2 texCoords152 =  vec2(texture_uv[0], texture_uv[1]) + offset152;
float texAlpha152 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3]);
bool texInBounds152 = (abs(int(texCoords152[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords152[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords152[0] > 0.0f && texCoords152[0] < 1.0f && texCoords152[1] > 0.0f && texCoords152[1] < 1.0f;
float sample152 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3] > epsilon)) * 0.001210f * float(texInBounds152);
vec2 offset153 = vec2(onePixel[0] * -8.0, onePixel[1] * -3.0);
vec2 texCoords153 =  vec2(texture_uv[0], texture_uv[1]) + offset153;
float texAlpha153 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3]);
bool texInBounds153 = (abs(int(texCoords153[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords153[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords153[0] > 0.0f && texCoords153[0] < 1.0f && texCoords153[1] > 0.0f && texCoords153[1] < 1.0f;
float sample153 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3] > epsilon)) * 0.001213f * float(texInBounds153);
vec2 offset154 = vec2(onePixel[0] * -8.0, onePixel[1] * -2.0);
vec2 texCoords154 =  vec2(texture_uv[0], texture_uv[1]) + offset154;
float texAlpha154 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3]);
bool texInBounds154 = (abs(int(texCoords154[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords154[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords154[0] > 0.0f && texCoords154[0] < 1.0f && texCoords154[1] > 0.0f && texCoords154[1] < 1.0f;
float sample154 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3] > epsilon)) * 0.001214f * float(texInBounds154);
vec2 offset155 = vec2(onePixel[0] * -8.0, onePixel[1] * -1.0);
vec2 texCoords155 =  vec2(texture_uv[0], texture_uv[1]) + offset155;
float texAlpha155 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3]);
bool texInBounds155 = (abs(int(texCoords155[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords155[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords155[0] > 0.0f && texCoords155[0] < 1.0f && texCoords155[1] > 0.0f && texCoords155[1] < 1.0f;
float sample155 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3] > epsilon)) * 0.001216f * float(texInBounds155);
vec2 offset156 = vec2(onePixel[0] * -8.0, onePixel[1] * 0.0);
vec2 texCoords156 =  vec2(texture_uv[0], texture_uv[1]) + offset156;
float texAlpha156 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3]);
bool texInBounds156 = (abs(int(texCoords156[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords156[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords156[0] > 0.0f && texCoords156[0] < 1.0f && texCoords156[1] > 0.0f && texCoords156[1] < 1.0f;
float sample156 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3] > epsilon)) * 0.001216f * float(texInBounds156);
vec2 offset157 = vec2(onePixel[0] * -8.0, onePixel[1] * 1.0);
vec2 texCoords157 =  vec2(texture_uv[0], texture_uv[1]) + offset157;
float texAlpha157 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3]);
bool texInBounds157 = (abs(int(texCoords157[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords157[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords157[0] > 0.0f && texCoords157[0] < 1.0f && texCoords157[1] > 0.0f && texCoords157[1] < 1.0f;
float sample157 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3] > epsilon)) * 0.001216f * float(texInBounds157);
vec2 offset158 = vec2(onePixel[0] * -8.0, onePixel[1] * 2.0);
vec2 texCoords158 =  vec2(texture_uv[0], texture_uv[1]) + offset158;
float texAlpha158 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3]);
bool texInBounds158 = (abs(int(texCoords158[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords158[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords158[0] > 0.0f && texCoords158[0] < 1.0f && texCoords158[1] > 0.0f && texCoords158[1] < 1.0f;
float sample158 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3] > epsilon)) * 0.001214f * float(texInBounds158);
vec2 offset159 = vec2(onePixel[0] * -8.0, onePixel[1] * 3.0);
vec2 texCoords159 =  vec2(texture_uv[0], texture_uv[1]) + offset159;
float texAlpha159 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3]);
bool texInBounds159 = (abs(int(texCoords159[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords159[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords159[0] > 0.0f && texCoords159[0] < 1.0f && texCoords159[1] > 0.0f && texCoords159[1] < 1.0f;
float sample159 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3] > epsilon)) * 0.001213f * float(texInBounds159);
vec2 offset160 = vec2(onePixel[0] * -8.0, onePixel[1] * 4.0);
vec2 texCoords160 =  vec2(texture_uv[0], texture_uv[1]) + offset160;
float texAlpha160 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3]);
bool texInBounds160 = (abs(int(texCoords160[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords160[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords160[0] > 0.0f && texCoords160[0] < 1.0f && texCoords160[1] > 0.0f && texCoords160[1] < 1.0f;
float sample160 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3] > epsilon)) * 0.001210f * float(texInBounds160);
vec2 offset161 = vec2(onePixel[0] * -8.0, onePixel[1] * 5.0);
vec2 texCoords161 =  vec2(texture_uv[0], texture_uv[1]) + offset161;
float texAlpha161 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3]);
bool texInBounds161 = (abs(int(texCoords161[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords161[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords161[0] > 0.0f && texCoords161[0] < 1.0f && texCoords161[1] > 0.0f && texCoords161[1] < 1.0f;
float sample161 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3] > epsilon)) * 0.001207f * float(texInBounds161);
vec2 offset162 = vec2(onePixel[0] * -8.0, onePixel[1] * 6.0);
vec2 texCoords162 =  vec2(texture_uv[0], texture_uv[1]) + offset162;
float texAlpha162 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3]);
bool texInBounds162 = (abs(int(texCoords162[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords162[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords162[0] > 0.0f && texCoords162[0] < 1.0f && texCoords162[1] > 0.0f && texCoords162[1] < 1.0f;
float sample162 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3] > epsilon)) * 0.001203f * float(texInBounds162);
vec2 offset163 = vec2(onePixel[0] * -8.0, onePixel[1] * 7.0);
vec2 texCoords163 =  vec2(texture_uv[0], texture_uv[1]) + offset163;
float texAlpha163 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3]);
bool texInBounds163 = (abs(int(texCoords163[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords163[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords163[0] > 0.0f && texCoords163[0] < 1.0f && texCoords163[1] > 0.0f && texCoords163[1] < 1.0f;
float sample163 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3] > epsilon)) * 0.001198f * float(texInBounds163);
vec2 offset164 = vec2(onePixel[0] * -8.0, onePixel[1] * 8.0);
vec2 texCoords164 =  vec2(texture_uv[0], texture_uv[1]) + offset164;
float texAlpha164 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3]);
bool texInBounds164 = (abs(int(texCoords164[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords164[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords164[0] > 0.0f && texCoords164[0] < 1.0f && texCoords164[1] > 0.0f && texCoords164[1] < 1.0f;
float sample164 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3] > epsilon)) * 0.001193f * float(texInBounds164);
vec2 offset165 = vec2(onePixel[0] * -8.0, onePixel[1] * 9.0);
vec2 texCoords165 =  vec2(texture_uv[0], texture_uv[1]) + offset165;
float texAlpha165 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3]);
bool texInBounds165 = (abs(int(texCoords165[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords165[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords165[0] > 0.0f && texCoords165[0] < 1.0f && texCoords165[1] > 0.0f && texCoords165[1] < 1.0f;
float sample165 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3] > epsilon)) * 0.001187f * float(texInBounds165);
vec2 offset166 = vec2(onePixel[0] * -8.0, onePixel[1] * 10.0);
vec2 texCoords166 =  vec2(texture_uv[0], texture_uv[1]) + offset166;
float texAlpha166 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3]);
bool texInBounds166 = (abs(int(texCoords166[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords166[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords166[0] > 0.0f && texCoords166[0] < 1.0f && texCoords166[1] > 0.0f && texCoords166[1] < 1.0f;
float sample166 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3] > epsilon)) * 0.001180f * float(texInBounds166);
vec2 offset167 = vec2(onePixel[0] * -8.0, onePixel[1] * 11.0);
vec2 texCoords167 =  vec2(texture_uv[0], texture_uv[1]) + offset167;
float texAlpha167 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3]);
bool texInBounds167 = (abs(int(texCoords167[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords167[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords167[0] > 0.0f && texCoords167[0] < 1.0f && texCoords167[1] > 0.0f && texCoords167[1] < 1.0f;
float sample167 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3] > epsilon)) * 0.001173f * float(texInBounds167);
vec2 offset168 = vec2(onePixel[0] * -8.0, onePixel[1] * 12.0);
vec2 texCoords168 =  vec2(texture_uv[0], texture_uv[1]) + offset168;
float texAlpha168 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3]);
bool texInBounds168 = (abs(int(texCoords168[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords168[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords168[0] > 0.0f && texCoords168[0] < 1.0f && texCoords168[1] > 0.0f && texCoords168[1] < 1.0f;
float sample168 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3] > epsilon)) * 0.001165f * float(texInBounds168);
vec2 offset169 = vec2(onePixel[0] * -7.0, onePixel[1] * -13.0);
vec2 texCoords169 =  vec2(texture_uv[0], texture_uv[1]) + offset169;
float texAlpha169 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3]);
bool texInBounds169 = (abs(int(texCoords169[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords169[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords169[0] > 0.0f && texCoords169[0] < 1.0f && texCoords169[1] > 0.0f && texCoords169[1] < 1.0f;
float sample169 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3] > epsilon)) * 0.001161f * float(texInBounds169);
vec2 offset170 = vec2(onePixel[0] * -7.0, onePixel[1] * -12.0);
vec2 texCoords170 =  vec2(texture_uv[0], texture_uv[1]) + offset170;
float texAlpha170 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3]);
bool texInBounds170 = (abs(int(texCoords170[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords170[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords170[0] > 0.0f && texCoords170[0] < 1.0f && texCoords170[1] > 0.0f && texCoords170[1] < 1.0f;
float sample170 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3] > epsilon)) * 0.001170f * float(texInBounds170);
vec2 offset171 = vec2(onePixel[0] * -7.0, onePixel[1] * -11.0);
vec2 texCoords171 =  vec2(texture_uv[0], texture_uv[1]) + offset171;
float texAlpha171 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3]);
bool texInBounds171 = (abs(int(texCoords171[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords171[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords171[0] > 0.0f && texCoords171[0] < 1.0f && texCoords171[1] > 0.0f && texCoords171[1] < 1.0f;
float sample171 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3] > epsilon)) * 0.001178f * float(texInBounds171);
vec2 offset172 = vec2(onePixel[0] * -7.0, onePixel[1] * -10.0);
vec2 texCoords172 =  vec2(texture_uv[0], texture_uv[1]) + offset172;
float texAlpha172 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3]);
bool texInBounds172 = (abs(int(texCoords172[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords172[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords172[0] > 0.0f && texCoords172[0] < 1.0f && texCoords172[1] > 0.0f && texCoords172[1] < 1.0f;
float sample172 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3] > epsilon)) * 0.001186f * float(texInBounds172);
vec2 offset173 = vec2(onePixel[0] * -7.0, onePixel[1] * -9.0);
vec2 texCoords173 =  vec2(texture_uv[0], texture_uv[1]) + offset173;
float texAlpha173 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3]);
bool texInBounds173 = (abs(int(texCoords173[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords173[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords173[0] > 0.0f && texCoords173[0] < 1.0f && texCoords173[1] > 0.0f && texCoords173[1] < 1.0f;
float sample173 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3] > epsilon)) * 0.001192f * float(texInBounds173);
vec2 offset174 = vec2(onePixel[0] * -7.0, onePixel[1] * -8.0);
vec2 texCoords174 =  vec2(texture_uv[0], texture_uv[1]) + offset174;
float texAlpha174 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3]);
bool texInBounds174 = (abs(int(texCoords174[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords174[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords174[0] > 0.0f && texCoords174[0] < 1.0f && texCoords174[1] > 0.0f && texCoords174[1] < 1.0f;
float sample174 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3] > epsilon)) * 0.001198f * float(texInBounds174);
vec2 offset175 = vec2(onePixel[0] * -7.0, onePixel[1] * -7.0);
vec2 texCoords175 =  vec2(texture_uv[0], texture_uv[1]) + offset175;
float texAlpha175 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3]);
bool texInBounds175 = (abs(int(texCoords175[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords175[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords175[0] > 0.0f && texCoords175[0] < 1.0f && texCoords175[1] > 0.0f && texCoords175[1] < 1.0f;
float sample175 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3] > epsilon)) * 0.001204f * float(texInBounds175);
vec2 offset176 = vec2(onePixel[0] * -7.0, onePixel[1] * -6.0);
vec2 texCoords176 =  vec2(texture_uv[0], texture_uv[1]) + offset176;
float texAlpha176 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3]);
bool texInBounds176 = (abs(int(texCoords176[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords176[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords176[0] > 0.0f && texCoords176[0] < 1.0f && texCoords176[1] > 0.0f && texCoords176[1] < 1.0f;
float sample176 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3] > epsilon)) * 0.001208f * float(texInBounds176);
vec2 offset177 = vec2(onePixel[0] * -7.0, onePixel[1] * -5.0);
vec2 texCoords177 =  vec2(texture_uv[0], texture_uv[1]) + offset177;
float texAlpha177 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3]);
bool texInBounds177 = (abs(int(texCoords177[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords177[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords177[0] > 0.0f && texCoords177[0] < 1.0f && texCoords177[1] > 0.0f && texCoords177[1] < 1.0f;
float sample177 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3] > epsilon)) * 0.001212f * float(texInBounds177);
vec2 offset178 = vec2(onePixel[0] * -7.0, onePixel[1] * -4.0);
vec2 texCoords178 =  vec2(texture_uv[0], texture_uv[1]) + offset178;
float texAlpha178 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3]);
bool texInBounds178 = (abs(int(texCoords178[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords178[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords178[0] > 0.0f && texCoords178[0] < 1.0f && texCoords178[1] > 0.0f && texCoords178[1] < 1.0f;
float sample178 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3] > epsilon)) * 0.001216f * float(texInBounds178);
vec2 offset179 = vec2(onePixel[0] * -7.0, onePixel[1] * -3.0);
vec2 texCoords179 =  vec2(texture_uv[0], texture_uv[1]) + offset179;
float texAlpha179 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3]);
bool texInBounds179 = (abs(int(texCoords179[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords179[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords179[0] > 0.0f && texCoords179[0] < 1.0f && texCoords179[1] > 0.0f && texCoords179[1] < 1.0f;
float sample179 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3] > epsilon)) * 0.001218f * float(texInBounds179);
vec2 offset180 = vec2(onePixel[0] * -7.0, onePixel[1] * -2.0);
vec2 texCoords180 =  vec2(texture_uv[0], texture_uv[1]) + offset180;
float texAlpha180 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3]);
bool texInBounds180 = (abs(int(texCoords180[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords180[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords180[0] > 0.0f && texCoords180[0] < 1.0f && texCoords180[1] > 0.0f && texCoords180[1] < 1.0f;
float sample180 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3] > epsilon)) * 0.001220f * float(texInBounds180);
vec2 offset181 = vec2(onePixel[0] * -7.0, onePixel[1] * -1.0);
vec2 texCoords181 =  vec2(texture_uv[0], texture_uv[1]) + offset181;
float texAlpha181 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3]);
bool texInBounds181 = (abs(int(texCoords181[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords181[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords181[0] > 0.0f && texCoords181[0] < 1.0f && texCoords181[1] > 0.0f && texCoords181[1] < 1.0f;
float sample181 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3] > epsilon)) * 0.001221f * float(texInBounds181);
vec2 offset182 = vec2(onePixel[0] * -7.0, onePixel[1] * 0.0);
vec2 texCoords182 =  vec2(texture_uv[0], texture_uv[1]) + offset182;
float texAlpha182 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3]);
bool texInBounds182 = (abs(int(texCoords182[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords182[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords182[0] > 0.0f && texCoords182[0] < 1.0f && texCoords182[1] > 0.0f && texCoords182[1] < 1.0f;
float sample182 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3] > epsilon)) * 0.001221f * float(texInBounds182);
vec2 offset183 = vec2(onePixel[0] * -7.0, onePixel[1] * 1.0);
vec2 texCoords183 =  vec2(texture_uv[0], texture_uv[1]) + offset183;
float texAlpha183 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3]);
bool texInBounds183 = (abs(int(texCoords183[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords183[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords183[0] > 0.0f && texCoords183[0] < 1.0f && texCoords183[1] > 0.0f && texCoords183[1] < 1.0f;
float sample183 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3] > epsilon)) * 0.001221f * float(texInBounds183);
vec2 offset184 = vec2(onePixel[0] * -7.0, onePixel[1] * 2.0);
vec2 texCoords184 =  vec2(texture_uv[0], texture_uv[1]) + offset184;
float texAlpha184 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3]);
bool texInBounds184 = (abs(int(texCoords184[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords184[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords184[0] > 0.0f && texCoords184[0] < 1.0f && texCoords184[1] > 0.0f && texCoords184[1] < 1.0f;
float sample184 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3] > epsilon)) * 0.001220f * float(texInBounds184);
vec2 offset185 = vec2(onePixel[0] * -7.0, onePixel[1] * 3.0);
vec2 texCoords185 =  vec2(texture_uv[0], texture_uv[1]) + offset185;
float texAlpha185 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3]);
bool texInBounds185 = (abs(int(texCoords185[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords185[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords185[0] > 0.0f && texCoords185[0] < 1.0f && texCoords185[1] > 0.0f && texCoords185[1] < 1.0f;
float sample185 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3] > epsilon)) * 0.001218f * float(texInBounds185);
vec2 offset186 = vec2(onePixel[0] * -7.0, onePixel[1] * 4.0);
vec2 texCoords186 =  vec2(texture_uv[0], texture_uv[1]) + offset186;
float texAlpha186 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3]);
bool texInBounds186 = (abs(int(texCoords186[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords186[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords186[0] > 0.0f && texCoords186[0] < 1.0f && texCoords186[1] > 0.0f && texCoords186[1] < 1.0f;
float sample186 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3] > epsilon)) * 0.001216f * float(texInBounds186);
vec2 offset187 = vec2(onePixel[0] * -7.0, onePixel[1] * 5.0);
vec2 texCoords187 =  vec2(texture_uv[0], texture_uv[1]) + offset187;
float texAlpha187 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3]);
bool texInBounds187 = (abs(int(texCoords187[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords187[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords187[0] > 0.0f && texCoords187[0] < 1.0f && texCoords187[1] > 0.0f && texCoords187[1] < 1.0f;
float sample187 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3] > epsilon)) * 0.001212f * float(texInBounds187);
vec2 offset188 = vec2(onePixel[0] * -7.0, onePixel[1] * 6.0);
vec2 texCoords188 =  vec2(texture_uv[0], texture_uv[1]) + offset188;
float texAlpha188 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3]);
bool texInBounds188 = (abs(int(texCoords188[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords188[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords188[0] > 0.0f && texCoords188[0] < 1.0f && texCoords188[1] > 0.0f && texCoords188[1] < 1.0f;
float sample188 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3] > epsilon)) * 0.001208f * float(texInBounds188);
vec2 offset189 = vec2(onePixel[0] * -7.0, onePixel[1] * 7.0);
vec2 texCoords189 =  vec2(texture_uv[0], texture_uv[1]) + offset189;
float texAlpha189 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3]);
bool texInBounds189 = (abs(int(texCoords189[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords189[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords189[0] > 0.0f && texCoords189[0] < 1.0f && texCoords189[1] > 0.0f && texCoords189[1] < 1.0f;
float sample189 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3] > epsilon)) * 0.001204f * float(texInBounds189);
vec2 offset190 = vec2(onePixel[0] * -7.0, onePixel[1] * 8.0);
vec2 texCoords190 =  vec2(texture_uv[0], texture_uv[1]) + offset190;
float texAlpha190 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3]);
bool texInBounds190 = (abs(int(texCoords190[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords190[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords190[0] > 0.0f && texCoords190[0] < 1.0f && texCoords190[1] > 0.0f && texCoords190[1] < 1.0f;
float sample190 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3] > epsilon)) * 0.001198f * float(texInBounds190);
vec2 offset191 = vec2(onePixel[0] * -7.0, onePixel[1] * 9.0);
vec2 texCoords191 =  vec2(texture_uv[0], texture_uv[1]) + offset191;
float texAlpha191 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3]);
bool texInBounds191 = (abs(int(texCoords191[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords191[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords191[0] > 0.0f && texCoords191[0] < 1.0f && texCoords191[1] > 0.0f && texCoords191[1] < 1.0f;
float sample191 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3] > epsilon)) * 0.001192f * float(texInBounds191);
vec2 offset192 = vec2(onePixel[0] * -7.0, onePixel[1] * 10.0);
vec2 texCoords192 =  vec2(texture_uv[0], texture_uv[1]) + offset192;
float texAlpha192 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3]);
bool texInBounds192 = (abs(int(texCoords192[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords192[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords192[0] > 0.0f && texCoords192[0] < 1.0f && texCoords192[1] > 0.0f && texCoords192[1] < 1.0f;
float sample192 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3] > epsilon)) * 0.001186f * float(texInBounds192);
vec2 offset193 = vec2(onePixel[0] * -7.0, onePixel[1] * 11.0);
vec2 texCoords193 =  vec2(texture_uv[0], texture_uv[1]) + offset193;
float texAlpha193 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3]);
bool texInBounds193 = (abs(int(texCoords193[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords193[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords193[0] > 0.0f && texCoords193[0] < 1.0f && texCoords193[1] > 0.0f && texCoords193[1] < 1.0f;
float sample193 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3] > epsilon)) * 0.001178f * float(texInBounds193);
vec2 offset194 = vec2(onePixel[0] * -7.0, onePixel[1] * 12.0);
vec2 texCoords194 =  vec2(texture_uv[0], texture_uv[1]) + offset194;
float texAlpha194 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3]);
bool texInBounds194 = (abs(int(texCoords194[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords194[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords194[0] > 0.0f && texCoords194[0] < 1.0f && texCoords194[1] > 0.0f && texCoords194[1] < 1.0f;
float sample194 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3] > epsilon)) * 0.001170f * float(texInBounds194);
vec2 offset195 = vec2(onePixel[0] * -7.0, onePixel[1] * 13.0);
vec2 texCoords195 =  vec2(texture_uv[0], texture_uv[1]) + offset195;
float texAlpha195 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3]);
bool texInBounds195 = (abs(int(texCoords195[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords195[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords195[0] > 0.0f && texCoords195[0] < 1.0f && texCoords195[1] > 0.0f && texCoords195[1] < 1.0f;
float sample195 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3] > epsilon)) * 0.001161f * float(texInBounds195);
vec2 offset196 = vec2(onePixel[0] * -6.0, onePixel[1] * -14.0);
vec2 texCoords196 =  vec2(texture_uv[0], texture_uv[1]) + offset196;
float texAlpha196 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3]);
bool texInBounds196 = (abs(int(texCoords196[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords196[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords196[0] > 0.0f && texCoords196[0] < 1.0f && texCoords196[1] > 0.0f && texCoords196[1] < 1.0f;
float sample196 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3] > epsilon)) * 0.001157f * float(texInBounds196);
vec2 offset197 = vec2(onePixel[0] * -6.0, onePixel[1] * -13.0);
vec2 texCoords197 =  vec2(texture_uv[0], texture_uv[1]) + offset197;
float texAlpha197 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3]);
bool texInBounds197 = (abs(int(texCoords197[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords197[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords197[0] > 0.0f && texCoords197[0] < 1.0f && texCoords197[1] > 0.0f && texCoords197[1] < 1.0f;
float sample197 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3] > epsilon)) * 0.001166f * float(texInBounds197);
vec2 offset198 = vec2(onePixel[0] * -6.0, onePixel[1] * -12.0);
vec2 texCoords198 =  vec2(texture_uv[0], texture_uv[1]) + offset198;
float texAlpha198 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3]);
bool texInBounds198 = (abs(int(texCoords198[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords198[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords198[0] > 0.0f && texCoords198[0] < 1.0f && texCoords198[1] > 0.0f && texCoords198[1] < 1.0f;
float sample198 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3] > epsilon)) * 0.001175f * float(texInBounds198);
vec2 offset199 = vec2(onePixel[0] * -6.0, onePixel[1] * -11.0);
vec2 texCoords199 =  vec2(texture_uv[0], texture_uv[1]) + offset199;
float texAlpha199 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3]);
bool texInBounds199 = (abs(int(texCoords199[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords199[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords199[0] > 0.0f && texCoords199[0] < 1.0f && texCoords199[1] > 0.0f && texCoords199[1] < 1.0f;
float sample199 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3] > epsilon)) * 0.001183f * float(texInBounds199);
vec2 offset200 = vec2(onePixel[0] * -6.0, onePixel[1] * -10.0);
vec2 texCoords200 =  vec2(texture_uv[0], texture_uv[1]) + offset200;
float texAlpha200 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3]);
bool texInBounds200 = (abs(int(texCoords200[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords200[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords200[0] > 0.0f && texCoords200[0] < 1.0f && texCoords200[1] > 0.0f && texCoords200[1] < 1.0f;
float sample200 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3] > epsilon)) * 0.001190f * float(texInBounds200);
vec2 offset201 = vec2(onePixel[0] * -6.0, onePixel[1] * -9.0);
vec2 texCoords201 =  vec2(texture_uv[0], texture_uv[1]) + offset201;
float texAlpha201 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3]);
bool texInBounds201 = (abs(int(texCoords201[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords201[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords201[0] > 0.0f && texCoords201[0] < 1.0f && texCoords201[1] > 0.0f && texCoords201[1] < 1.0f;
float sample201 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3] > epsilon)) * 0.001197f * float(texInBounds201);
vec2 offset202 = vec2(onePixel[0] * -6.0, onePixel[1] * -8.0);
vec2 texCoords202 =  vec2(texture_uv[0], texture_uv[1]) + offset202;
float texAlpha202 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3]);
bool texInBounds202 = (abs(int(texCoords202[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords202[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords202[0] > 0.0f && texCoords202[0] < 1.0f && texCoords202[1] > 0.0f && texCoords202[1] < 1.0f;
float sample202 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3] > epsilon)) * 0.001203f * float(texInBounds202);
vec2 offset203 = vec2(onePixel[0] * -6.0, onePixel[1] * -7.0);
vec2 texCoords203 =  vec2(texture_uv[0], texture_uv[1]) + offset203;
float texAlpha203 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3]);
bool texInBounds203 = (abs(int(texCoords203[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords203[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords203[0] > 0.0f && texCoords203[0] < 1.0f && texCoords203[1] > 0.0f && texCoords203[1] < 1.0f;
float sample203 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3] > epsilon)) * 0.001208f * float(texInBounds203);
vec2 offset204 = vec2(onePixel[0] * -6.0, onePixel[1] * -6.0);
vec2 texCoords204 =  vec2(texture_uv[0], texture_uv[1]) + offset204;
float texAlpha204 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3]);
bool texInBounds204 = (abs(int(texCoords204[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords204[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords204[0] > 0.0f && texCoords204[0] < 1.0f && texCoords204[1] > 0.0f && texCoords204[1] < 1.0f;
float sample204 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3] > epsilon)) * 0.001213f * float(texInBounds204);
vec2 offset205 = vec2(onePixel[0] * -6.0, onePixel[1] * -5.0);
vec2 texCoords205 =  vec2(texture_uv[0], texture_uv[1]) + offset205;
float texAlpha205 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3]);
bool texInBounds205 = (abs(int(texCoords205[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords205[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords205[0] > 0.0f && texCoords205[0] < 1.0f && texCoords205[1] > 0.0f && texCoords205[1] < 1.0f;
float sample205 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3] > epsilon)) * 0.001217f * float(texInBounds205);
vec2 offset206 = vec2(onePixel[0] * -6.0, onePixel[1] * -4.0);
vec2 texCoords206 =  vec2(texture_uv[0], texture_uv[1]) + offset206;
float texAlpha206 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3]);
bool texInBounds206 = (abs(int(texCoords206[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords206[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords206[0] > 0.0f && texCoords206[0] < 1.0f && texCoords206[1] > 0.0f && texCoords206[1] < 1.0f;
float sample206 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3] > epsilon)) * 0.001220f * float(texInBounds206);
vec2 offset207 = vec2(onePixel[0] * -6.0, onePixel[1] * -3.0);
vec2 texCoords207 =  vec2(texture_uv[0], texture_uv[1]) + offset207;
float texAlpha207 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3]);
bool texInBounds207 = (abs(int(texCoords207[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords207[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords207[0] > 0.0f && texCoords207[0] < 1.0f && texCoords207[1] > 0.0f && texCoords207[1] < 1.0f;
float sample207 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3] > epsilon)) * 0.001223f * float(texInBounds207);
vec2 offset208 = vec2(onePixel[0] * -6.0, onePixel[1] * -2.0);
vec2 texCoords208 =  vec2(texture_uv[0], texture_uv[1]) + offset208;
float texAlpha208 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3]);
bool texInBounds208 = (abs(int(texCoords208[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords208[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords208[0] > 0.0f && texCoords208[0] < 1.0f && texCoords208[1] > 0.0f && texCoords208[1] < 1.0f;
float sample208 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3] > epsilon)) * 0.001225f * float(texInBounds208);
vec2 offset209 = vec2(onePixel[0] * -6.0, onePixel[1] * -1.0);
vec2 texCoords209 =  vec2(texture_uv[0], texture_uv[1]) + offset209;
float texAlpha209 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3]);
bool texInBounds209 = (abs(int(texCoords209[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords209[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords209[0] > 0.0f && texCoords209[0] < 1.0f && texCoords209[1] > 0.0f && texCoords209[1] < 1.0f;
float sample209 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3] > epsilon)) * 0.001226f * float(texInBounds209);
vec2 offset210 = vec2(onePixel[0] * -6.0, onePixel[1] * 0.0);
vec2 texCoords210 =  vec2(texture_uv[0], texture_uv[1]) + offset210;
float texAlpha210 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3]);
bool texInBounds210 = (abs(int(texCoords210[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords210[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords210[0] > 0.0f && texCoords210[0] < 1.0f && texCoords210[1] > 0.0f && texCoords210[1] < 1.0f;
float sample210 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3] > epsilon)) * 0.001226f * float(texInBounds210);
vec2 offset211 = vec2(onePixel[0] * -6.0, onePixel[1] * 1.0);
vec2 texCoords211 =  vec2(texture_uv[0], texture_uv[1]) + offset211;
float texAlpha211 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3]);
bool texInBounds211 = (abs(int(texCoords211[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords211[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords211[0] > 0.0f && texCoords211[0] < 1.0f && texCoords211[1] > 0.0f && texCoords211[1] < 1.0f;
float sample211 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3] > epsilon)) * 0.001226f * float(texInBounds211);
vec2 offset212 = vec2(onePixel[0] * -6.0, onePixel[1] * 2.0);
vec2 texCoords212 =  vec2(texture_uv[0], texture_uv[1]) + offset212;
float texAlpha212 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3]);
bool texInBounds212 = (abs(int(texCoords212[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords212[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords212[0] > 0.0f && texCoords212[0] < 1.0f && texCoords212[1] > 0.0f && texCoords212[1] < 1.0f;
float sample212 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3] > epsilon)) * 0.001225f * float(texInBounds212);
vec2 offset213 = vec2(onePixel[0] * -6.0, onePixel[1] * 3.0);
vec2 texCoords213 =  vec2(texture_uv[0], texture_uv[1]) + offset213;
float texAlpha213 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3]);
bool texInBounds213 = (abs(int(texCoords213[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords213[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords213[0] > 0.0f && texCoords213[0] < 1.0f && texCoords213[1] > 0.0f && texCoords213[1] < 1.0f;
float sample213 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3] > epsilon)) * 0.001223f * float(texInBounds213);
vec2 offset214 = vec2(onePixel[0] * -6.0, onePixel[1] * 4.0);
vec2 texCoords214 =  vec2(texture_uv[0], texture_uv[1]) + offset214;
float texAlpha214 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3]);
bool texInBounds214 = (abs(int(texCoords214[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords214[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords214[0] > 0.0f && texCoords214[0] < 1.0f && texCoords214[1] > 0.0f && texCoords214[1] < 1.0f;
float sample214 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3] > epsilon)) * 0.001220f * float(texInBounds214);
vec2 offset215 = vec2(onePixel[0] * -6.0, onePixel[1] * 5.0);
vec2 texCoords215 =  vec2(texture_uv[0], texture_uv[1]) + offset215;
float texAlpha215 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3]);
bool texInBounds215 = (abs(int(texCoords215[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords215[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords215[0] > 0.0f && texCoords215[0] < 1.0f && texCoords215[1] > 0.0f && texCoords215[1] < 1.0f;
float sample215 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3] > epsilon)) * 0.001217f * float(texInBounds215);
vec2 offset216 = vec2(onePixel[0] * -6.0, onePixel[1] * 6.0);
vec2 texCoords216 =  vec2(texture_uv[0], texture_uv[1]) + offset216;
float texAlpha216 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3]);
bool texInBounds216 = (abs(int(texCoords216[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords216[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords216[0] > 0.0f && texCoords216[0] < 1.0f && texCoords216[1] > 0.0f && texCoords216[1] < 1.0f;
float sample216 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3] > epsilon)) * 0.001213f * float(texInBounds216);
vec2 offset217 = vec2(onePixel[0] * -6.0, onePixel[1] * 7.0);
vec2 texCoords217 =  vec2(texture_uv[0], texture_uv[1]) + offset217;
float texAlpha217 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3]);
bool texInBounds217 = (abs(int(texCoords217[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords217[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords217[0] > 0.0f && texCoords217[0] < 1.0f && texCoords217[1] > 0.0f && texCoords217[1] < 1.0f;
float sample217 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3] > epsilon)) * 0.001208f * float(texInBounds217);
vec2 offset218 = vec2(onePixel[0] * -6.0, onePixel[1] * 8.0);
vec2 texCoords218 =  vec2(texture_uv[0], texture_uv[1]) + offset218;
float texAlpha218 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3]);
bool texInBounds218 = (abs(int(texCoords218[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords218[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords218[0] > 0.0f && texCoords218[0] < 1.0f && texCoords218[1] > 0.0f && texCoords218[1] < 1.0f;
float sample218 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3] > epsilon)) * 0.001203f * float(texInBounds218);
vec2 offset219 = vec2(onePixel[0] * -6.0, onePixel[1] * 9.0);
vec2 texCoords219 =  vec2(texture_uv[0], texture_uv[1]) + offset219;
float texAlpha219 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3]);
bool texInBounds219 = (abs(int(texCoords219[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords219[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords219[0] > 0.0f && texCoords219[0] < 1.0f && texCoords219[1] > 0.0f && texCoords219[1] < 1.0f;
float sample219 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3] > epsilon)) * 0.001197f * float(texInBounds219);
vec2 offset220 = vec2(onePixel[0] * -6.0, onePixel[1] * 10.0);
vec2 texCoords220 =  vec2(texture_uv[0], texture_uv[1]) + offset220;
float texAlpha220 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3]);
bool texInBounds220 = (abs(int(texCoords220[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords220[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords220[0] > 0.0f && texCoords220[0] < 1.0f && texCoords220[1] > 0.0f && texCoords220[1] < 1.0f;
float sample220 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3] > epsilon)) * 0.001190f * float(texInBounds220);
vec2 offset221 = vec2(onePixel[0] * -6.0, onePixel[1] * 11.0);
vec2 texCoords221 =  vec2(texture_uv[0], texture_uv[1]) + offset221;
float texAlpha221 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset221)[3]);
bool texInBounds221 = (abs(int(texCoords221[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords221[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords221[0] > 0.0f && texCoords221[0] < 1.0f && texCoords221[1] > 0.0f && texCoords221[1] < 1.0f;
float sample221 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset221)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset221)[3] > epsilon)) * 0.001183f * float(texInBounds221);
vec2 offset222 = vec2(onePixel[0] * -6.0, onePixel[1] * 12.0);
vec2 texCoords222 =  vec2(texture_uv[0], texture_uv[1]) + offset222;
float texAlpha222 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset222)[3]);
bool texInBounds222 = (abs(int(texCoords222[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords222[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords222[0] > 0.0f && texCoords222[0] < 1.0f && texCoords222[1] > 0.0f && texCoords222[1] < 1.0f;
float sample222 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset222)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset222)[3] > epsilon)) * 0.001175f * float(texInBounds222);
vec2 offset223 = vec2(onePixel[0] * -6.0, onePixel[1] * 13.0);
vec2 texCoords223 =  vec2(texture_uv[0], texture_uv[1]) + offset223;
float texAlpha223 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset223)[3]);
bool texInBounds223 = (abs(int(texCoords223[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords223[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords223[0] > 0.0f && texCoords223[0] < 1.0f && texCoords223[1] > 0.0f && texCoords223[1] < 1.0f;
float sample223 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset223)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset223)[3] > epsilon)) * 0.001166f * float(texInBounds223);
vec2 offset224 = vec2(onePixel[0] * -6.0, onePixel[1] * 14.0);
vec2 texCoords224 =  vec2(texture_uv[0], texture_uv[1]) + offset224;
float texAlpha224 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset224)[3]);
bool texInBounds224 = (abs(int(texCoords224[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords224[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords224[0] > 0.0f && texCoords224[0] < 1.0f && texCoords224[1] > 0.0f && texCoords224[1] < 1.0f;
float sample224 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset224)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset224)[3] > epsilon)) * 0.001157f * float(texInBounds224);
vec2 offset225 = vec2(onePixel[0] * -5.0, onePixel[1] * -15.0);
vec2 texCoords225 =  vec2(texture_uv[0], texture_uv[1]) + offset225;
float texAlpha225 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset225)[3]);
bool texInBounds225 = (abs(int(texCoords225[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords225[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords225[0] > 0.0f && texCoords225[0] < 1.0f && texCoords225[1] > 0.0f && texCoords225[1] < 1.0f;
float sample225 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset225)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset225)[3] > epsilon)) * 0.001150f * float(texInBounds225);
vec2 offset226 = vec2(onePixel[0] * -5.0, onePixel[1] * -14.0);
vec2 texCoords226 =  vec2(texture_uv[0], texture_uv[1]) + offset226;
float texAlpha226 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset226)[3]);
bool texInBounds226 = (abs(int(texCoords226[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords226[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords226[0] > 0.0f && texCoords226[0] < 1.0f && texCoords226[1] > 0.0f && texCoords226[1] < 1.0f;
float sample226 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset226)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset226)[3] > epsilon)) * 0.001160f * float(texInBounds226);
vec2 offset227 = vec2(onePixel[0] * -5.0, onePixel[1] * -13.0);
vec2 texCoords227 =  vec2(texture_uv[0], texture_uv[1]) + offset227;
float texAlpha227 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset227)[3]);
bool texInBounds227 = (abs(int(texCoords227[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords227[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords227[0] > 0.0f && texCoords227[0] < 1.0f && texCoords227[1] > 0.0f && texCoords227[1] < 1.0f;
float sample227 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset227)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset227)[3] > epsilon)) * 0.001170f * float(texInBounds227);
vec2 offset228 = vec2(onePixel[0] * -5.0, onePixel[1] * -12.0);
vec2 texCoords228 =  vec2(texture_uv[0], texture_uv[1]) + offset228;
float texAlpha228 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset228)[3]);
bool texInBounds228 = (abs(int(texCoords228[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords228[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords228[0] > 0.0f && texCoords228[0] < 1.0f && texCoords228[1] > 0.0f && texCoords228[1] < 1.0f;
float sample228 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset228)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset228)[3] > epsilon)) * 0.001178f * float(texInBounds228);
vec2 offset229 = vec2(onePixel[0] * -5.0, onePixel[1] * -11.0);
vec2 texCoords229 =  vec2(texture_uv[0], texture_uv[1]) + offset229;
float texAlpha229 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset229)[3]);
bool texInBounds229 = (abs(int(texCoords229[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords229[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords229[0] > 0.0f && texCoords229[0] < 1.0f && texCoords229[1] > 0.0f && texCoords229[1] < 1.0f;
float sample229 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset229)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset229)[3] > epsilon)) * 0.001187f * float(texInBounds229);
vec2 offset230 = vec2(onePixel[0] * -5.0, onePixel[1] * -10.0);
vec2 texCoords230 =  vec2(texture_uv[0], texture_uv[1]) + offset230;
float texAlpha230 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset230)[3]);
bool texInBounds230 = (abs(int(texCoords230[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords230[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords230[0] > 0.0f && texCoords230[0] < 1.0f && texCoords230[1] > 0.0f && texCoords230[1] < 1.0f;
float sample230 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset230)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset230)[3] > epsilon)) * 0.001194f * float(texInBounds230);
vec2 offset231 = vec2(onePixel[0] * -5.0, onePixel[1] * -9.0);
vec2 texCoords231 =  vec2(texture_uv[0], texture_uv[1]) + offset231;
float texAlpha231 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset231)[3]);
bool texInBounds231 = (abs(int(texCoords231[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords231[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords231[0] > 0.0f && texCoords231[0] < 1.0f && texCoords231[1] > 0.0f && texCoords231[1] < 1.0f;
float sample231 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset231)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset231)[3] > epsilon)) * 0.001201f * float(texInBounds231);
vec2 offset232 = vec2(onePixel[0] * -5.0, onePixel[1] * -8.0);
vec2 texCoords232 =  vec2(texture_uv[0], texture_uv[1]) + offset232;
float texAlpha232 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset232)[3]);
bool texInBounds232 = (abs(int(texCoords232[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords232[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords232[0] > 0.0f && texCoords232[0] < 1.0f && texCoords232[1] > 0.0f && texCoords232[1] < 1.0f;
float sample232 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset232)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset232)[3] > epsilon)) * 0.001207f * float(texInBounds232);
vec2 offset233 = vec2(onePixel[0] * -5.0, onePixel[1] * -7.0);
vec2 texCoords233 =  vec2(texture_uv[0], texture_uv[1]) + offset233;
float texAlpha233 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset233)[3]);
bool texInBounds233 = (abs(int(texCoords233[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords233[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords233[0] > 0.0f && texCoords233[0] < 1.0f && texCoords233[1] > 0.0f && texCoords233[1] < 1.0f;
float sample233 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset233)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset233)[3] > epsilon)) * 0.001212f * float(texInBounds233);
vec2 offset234 = vec2(onePixel[0] * -5.0, onePixel[1] * -6.0);
vec2 texCoords234 =  vec2(texture_uv[0], texture_uv[1]) + offset234;
float texAlpha234 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset234)[3]);
bool texInBounds234 = (abs(int(texCoords234[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords234[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords234[0] > 0.0f && texCoords234[0] < 1.0f && texCoords234[1] > 0.0f && texCoords234[1] < 1.0f;
float sample234 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset234)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset234)[3] > epsilon)) * 0.001217f * float(texInBounds234);
vec2 offset235 = vec2(onePixel[0] * -5.0, onePixel[1] * -5.0);
vec2 texCoords235 =  vec2(texture_uv[0], texture_uv[1]) + offset235;
float texAlpha235 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset235)[3]);
bool texInBounds235 = (abs(int(texCoords235[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords235[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords235[0] > 0.0f && texCoords235[0] < 1.0f && texCoords235[1] > 0.0f && texCoords235[1] < 1.0f;
float sample235 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset235)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset235)[3] > epsilon)) * 0.001221f * float(texInBounds235);
vec2 offset236 = vec2(onePixel[0] * -5.0, onePixel[1] * -4.0);
vec2 texCoords236 =  vec2(texture_uv[0], texture_uv[1]) + offset236;
float texAlpha236 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset236)[3]);
bool texInBounds236 = (abs(int(texCoords236[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords236[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords236[0] > 0.0f && texCoords236[0] < 1.0f && texCoords236[1] > 0.0f && texCoords236[1] < 1.0f;
float sample236 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset236)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset236)[3] > epsilon)) * 0.001224f * float(texInBounds236);
vec2 offset237 = vec2(onePixel[0] * -5.0, onePixel[1] * -3.0);
vec2 texCoords237 =  vec2(texture_uv[0], texture_uv[1]) + offset237;
float texAlpha237 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset237)[3]);
bool texInBounds237 = (abs(int(texCoords237[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords237[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords237[0] > 0.0f && texCoords237[0] < 1.0f && texCoords237[1] > 0.0f && texCoords237[1] < 1.0f;
float sample237 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset237)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset237)[3] > epsilon)) * 0.001227f * float(texInBounds237);
vec2 offset238 = vec2(onePixel[0] * -5.0, onePixel[1] * -2.0);
vec2 texCoords238 =  vec2(texture_uv[0], texture_uv[1]) + offset238;
float texAlpha238 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset238)[3]);
bool texInBounds238 = (abs(int(texCoords238[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords238[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords238[0] > 0.0f && texCoords238[0] < 1.0f && texCoords238[1] > 0.0f && texCoords238[1] < 1.0f;
float sample238 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset238)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset238)[3] > epsilon)) * 0.001229f * float(texInBounds238);
vec2 offset239 = vec2(onePixel[0] * -5.0, onePixel[1] * -1.0);
vec2 texCoords239 =  vec2(texture_uv[0], texture_uv[1]) + offset239;
float texAlpha239 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset239)[3]);
bool texInBounds239 = (abs(int(texCoords239[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords239[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords239[0] > 0.0f && texCoords239[0] < 1.0f && texCoords239[1] > 0.0f && texCoords239[1] < 1.0f;
float sample239 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset239)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset239)[3] > epsilon)) * 0.001230f * float(texInBounds239);
vec2 offset240 = vec2(onePixel[0] * -5.0, onePixel[1] * 0.0);
vec2 texCoords240 =  vec2(texture_uv[0], texture_uv[1]) + offset240;
float texAlpha240 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset240)[3]);
bool texInBounds240 = (abs(int(texCoords240[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords240[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords240[0] > 0.0f && texCoords240[0] < 1.0f && texCoords240[1] > 0.0f && texCoords240[1] < 1.0f;
float sample240 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset240)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset240)[3] > epsilon)) * 0.001230f * float(texInBounds240);
vec2 offset241 = vec2(onePixel[0] * -5.0, onePixel[1] * 1.0);
vec2 texCoords241 =  vec2(texture_uv[0], texture_uv[1]) + offset241;
float texAlpha241 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset241)[3]);
bool texInBounds241 = (abs(int(texCoords241[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords241[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords241[0] > 0.0f && texCoords241[0] < 1.0f && texCoords241[1] > 0.0f && texCoords241[1] < 1.0f;
float sample241 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset241)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset241)[3] > epsilon)) * 0.001230f * float(texInBounds241);
vec2 offset242 = vec2(onePixel[0] * -5.0, onePixel[1] * 2.0);
vec2 texCoords242 =  vec2(texture_uv[0], texture_uv[1]) + offset242;
float texAlpha242 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset242)[3]);
bool texInBounds242 = (abs(int(texCoords242[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords242[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords242[0] > 0.0f && texCoords242[0] < 1.0f && texCoords242[1] > 0.0f && texCoords242[1] < 1.0f;
float sample242 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset242)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset242)[3] > epsilon)) * 0.001229f * float(texInBounds242);
vec2 offset243 = vec2(onePixel[0] * -5.0, onePixel[1] * 3.0);
vec2 texCoords243 =  vec2(texture_uv[0], texture_uv[1]) + offset243;
float texAlpha243 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset243)[3]);
bool texInBounds243 = (abs(int(texCoords243[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords243[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords243[0] > 0.0f && texCoords243[0] < 1.0f && texCoords243[1] > 0.0f && texCoords243[1] < 1.0f;
float sample243 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset243)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset243)[3] > epsilon)) * 0.001227f * float(texInBounds243);
vec2 offset244 = vec2(onePixel[0] * -5.0, onePixel[1] * 4.0);
vec2 texCoords244 =  vec2(texture_uv[0], texture_uv[1]) + offset244;
float texAlpha244 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset244)[3]);
bool texInBounds244 = (abs(int(texCoords244[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords244[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords244[0] > 0.0f && texCoords244[0] < 1.0f && texCoords244[1] > 0.0f && texCoords244[1] < 1.0f;
float sample244 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset244)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset244)[3] > epsilon)) * 0.001224f * float(texInBounds244);
vec2 offset245 = vec2(onePixel[0] * -5.0, onePixel[1] * 5.0);
vec2 texCoords245 =  vec2(texture_uv[0], texture_uv[1]) + offset245;
float texAlpha245 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset245)[3]);
bool texInBounds245 = (abs(int(texCoords245[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords245[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords245[0] > 0.0f && texCoords245[0] < 1.0f && texCoords245[1] > 0.0f && texCoords245[1] < 1.0f;
float sample245 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset245)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset245)[3] > epsilon)) * 0.001221f * float(texInBounds245);
vec2 offset246 = vec2(onePixel[0] * -5.0, onePixel[1] * 6.0);
vec2 texCoords246 =  vec2(texture_uv[0], texture_uv[1]) + offset246;
float texAlpha246 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset246)[3]);
bool texInBounds246 = (abs(int(texCoords246[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords246[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords246[0] > 0.0f && texCoords246[0] < 1.0f && texCoords246[1] > 0.0f && texCoords246[1] < 1.0f;
float sample246 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset246)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset246)[3] > epsilon)) * 0.001217f * float(texInBounds246);
vec2 offset247 = vec2(onePixel[0] * -5.0, onePixel[1] * 7.0);
vec2 texCoords247 =  vec2(texture_uv[0], texture_uv[1]) + offset247;
float texAlpha247 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset247)[3]);
bool texInBounds247 = (abs(int(texCoords247[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords247[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords247[0] > 0.0f && texCoords247[0] < 1.0f && texCoords247[1] > 0.0f && texCoords247[1] < 1.0f;
float sample247 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset247)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset247)[3] > epsilon)) * 0.001212f * float(texInBounds247);
vec2 offset248 = vec2(onePixel[0] * -5.0, onePixel[1] * 8.0);
vec2 texCoords248 =  vec2(texture_uv[0], texture_uv[1]) + offset248;
float texAlpha248 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset248)[3]);
bool texInBounds248 = (abs(int(texCoords248[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords248[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords248[0] > 0.0f && texCoords248[0] < 1.0f && texCoords248[1] > 0.0f && texCoords248[1] < 1.0f;
float sample248 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset248)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset248)[3] > epsilon)) * 0.001207f * float(texInBounds248);
vec2 offset249 = vec2(onePixel[0] * -5.0, onePixel[1] * 9.0);
vec2 texCoords249 =  vec2(texture_uv[0], texture_uv[1]) + offset249;
float texAlpha249 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset249)[3]);
bool texInBounds249 = (abs(int(texCoords249[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords249[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords249[0] > 0.0f && texCoords249[0] < 1.0f && texCoords249[1] > 0.0f && texCoords249[1] < 1.0f;
float sample249 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset249)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset249)[3] > epsilon)) * 0.001201f * float(texInBounds249);
vec2 offset250 = vec2(onePixel[0] * -5.0, onePixel[1] * 10.0);
vec2 texCoords250 =  vec2(texture_uv[0], texture_uv[1]) + offset250;
float texAlpha250 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset250)[3]);
bool texInBounds250 = (abs(int(texCoords250[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords250[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords250[0] > 0.0f && texCoords250[0] < 1.0f && texCoords250[1] > 0.0f && texCoords250[1] < 1.0f;
float sample250 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset250)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset250)[3] > epsilon)) * 0.001194f * float(texInBounds250);
vec2 offset251 = vec2(onePixel[0] * -5.0, onePixel[1] * 11.0);
vec2 texCoords251 =  vec2(texture_uv[0], texture_uv[1]) + offset251;
float texAlpha251 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset251)[3]);
bool texInBounds251 = (abs(int(texCoords251[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords251[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords251[0] > 0.0f && texCoords251[0] < 1.0f && texCoords251[1] > 0.0f && texCoords251[1] < 1.0f;
float sample251 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset251)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset251)[3] > epsilon)) * 0.001187f * float(texInBounds251);
vec2 offset252 = vec2(onePixel[0] * -5.0, onePixel[1] * 12.0);
vec2 texCoords252 =  vec2(texture_uv[0], texture_uv[1]) + offset252;
float texAlpha252 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset252)[3]);
bool texInBounds252 = (abs(int(texCoords252[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords252[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords252[0] > 0.0f && texCoords252[0] < 1.0f && texCoords252[1] > 0.0f && texCoords252[1] < 1.0f;
float sample252 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset252)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset252)[3] > epsilon)) * 0.001178f * float(texInBounds252);
vec2 offset253 = vec2(onePixel[0] * -5.0, onePixel[1] * 13.0);
vec2 texCoords253 =  vec2(texture_uv[0], texture_uv[1]) + offset253;
float texAlpha253 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset253)[3]);
bool texInBounds253 = (abs(int(texCoords253[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords253[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords253[0] > 0.0f && texCoords253[0] < 1.0f && texCoords253[1] > 0.0f && texCoords253[1] < 1.0f;
float sample253 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset253)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset253)[3] > epsilon)) * 0.001170f * float(texInBounds253);
vec2 offset254 = vec2(onePixel[0] * -5.0, onePixel[1] * 14.0);
vec2 texCoords254 =  vec2(texture_uv[0], texture_uv[1]) + offset254;
float texAlpha254 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset254)[3]);
bool texInBounds254 = (abs(int(texCoords254[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords254[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords254[0] > 0.0f && texCoords254[0] < 1.0f && texCoords254[1] > 0.0f && texCoords254[1] < 1.0f;
float sample254 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset254)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset254)[3] > epsilon)) * 0.001160f * float(texInBounds254);
vec2 offset255 = vec2(onePixel[0] * -5.0, onePixel[1] * 15.0);
vec2 texCoords255 =  vec2(texture_uv[0], texture_uv[1]) + offset255;
float texAlpha255 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset255)[3]);
bool texInBounds255 = (abs(int(texCoords255[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords255[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords255[0] > 0.0f && texCoords255[0] < 1.0f && texCoords255[1] > 0.0f && texCoords255[1] < 1.0f;
float sample255 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset255)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset255)[3] > epsilon)) * 0.001150f * float(texInBounds255);
vec2 offset256 = vec2(onePixel[0] * -4.0, onePixel[1] * -16.0);
vec2 texCoords256 =  vec2(texture_uv[0], texture_uv[1]) + offset256;
float texAlpha256 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset256)[3]);
bool texInBounds256 = (abs(int(texCoords256[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords256[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords256[0] > 0.0f && texCoords256[0] < 1.0f && texCoords256[1] > 0.0f && texCoords256[1] < 1.0f;
float sample256 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset256)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset256)[3] > epsilon)) * 0.001143f * float(texInBounds256);
vec2 offset257 = vec2(onePixel[0] * -4.0, onePixel[1] * -15.0);
vec2 texCoords257 =  vec2(texture_uv[0], texture_uv[1]) + offset257;
float texAlpha257 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset257)[3]);
bool texInBounds257 = (abs(int(texCoords257[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords257[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords257[0] > 0.0f && texCoords257[0] < 1.0f && texCoords257[1] > 0.0f && texCoords257[1] < 1.0f;
float sample257 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset257)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset257)[3] > epsilon)) * 0.001154f * float(texInBounds257);
vec2 offset258 = vec2(onePixel[0] * -4.0, onePixel[1] * -14.0);
vec2 texCoords258 =  vec2(texture_uv[0], texture_uv[1]) + offset258;
float texAlpha258 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset258)[3]);
bool texInBounds258 = (abs(int(texCoords258[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords258[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords258[0] > 0.0f && texCoords258[0] < 1.0f && texCoords258[1] > 0.0f && texCoords258[1] < 1.0f;
float sample258 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset258)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset258)[3] > epsilon)) * 0.001164f * float(texInBounds258);
vec2 offset259 = vec2(onePixel[0] * -4.0, onePixel[1] * -13.0);
vec2 texCoords259 =  vec2(texture_uv[0], texture_uv[1]) + offset259;
float texAlpha259 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset259)[3]);
bool texInBounds259 = (abs(int(texCoords259[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords259[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords259[0] > 0.0f && texCoords259[0] < 1.0f && texCoords259[1] > 0.0f && texCoords259[1] < 1.0f;
float sample259 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset259)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset259)[3] > epsilon)) * 0.001173f * float(texInBounds259);
vec2 offset260 = vec2(onePixel[0] * -4.0, onePixel[1] * -12.0);
vec2 texCoords260 =  vec2(texture_uv[0], texture_uv[1]) + offset260;
float texAlpha260 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset260)[3]);
bool texInBounds260 = (abs(int(texCoords260[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords260[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords260[0] > 0.0f && texCoords260[0] < 1.0f && texCoords260[1] > 0.0f && texCoords260[1] < 1.0f;
float sample260 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset260)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset260)[3] > epsilon)) * 0.001182f * float(texInBounds260);
vec2 offset261 = vec2(onePixel[0] * -4.0, onePixel[1] * -11.0);
vec2 texCoords261 =  vec2(texture_uv[0], texture_uv[1]) + offset261;
float texAlpha261 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset261)[3]);
bool texInBounds261 = (abs(int(texCoords261[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords261[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords261[0] > 0.0f && texCoords261[0] < 1.0f && texCoords261[1] > 0.0f && texCoords261[1] < 1.0f;
float sample261 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset261)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset261)[3] > epsilon)) * 0.001190f * float(texInBounds261);
vec2 offset262 = vec2(onePixel[0] * -4.0, onePixel[1] * -10.0);
vec2 texCoords262 =  vec2(texture_uv[0], texture_uv[1]) + offset262;
float texAlpha262 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset262)[3]);
bool texInBounds262 = (abs(int(texCoords262[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords262[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords262[0] > 0.0f && texCoords262[0] < 1.0f && texCoords262[1] > 0.0f && texCoords262[1] < 1.0f;
float sample262 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset262)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset262)[3] > epsilon)) * 0.001197f * float(texInBounds262);
vec2 offset263 = vec2(onePixel[0] * -4.0, onePixel[1] * -9.0);
vec2 texCoords263 =  vec2(texture_uv[0], texture_uv[1]) + offset263;
float texAlpha263 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset263)[3]);
bool texInBounds263 = (abs(int(texCoords263[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords263[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords263[0] > 0.0f && texCoords263[0] < 1.0f && texCoords263[1] > 0.0f && texCoords263[1] < 1.0f;
float sample263 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset263)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset263)[3] > epsilon)) * 0.001204f * float(texInBounds263);
vec2 offset264 = vec2(onePixel[0] * -4.0, onePixel[1] * -8.0);
vec2 texCoords264 =  vec2(texture_uv[0], texture_uv[1]) + offset264;
float texAlpha264 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset264)[3]);
bool texInBounds264 = (abs(int(texCoords264[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords264[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords264[0] > 0.0f && texCoords264[0] < 1.0f && texCoords264[1] > 0.0f && texCoords264[1] < 1.0f;
float sample264 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset264)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset264)[3] > epsilon)) * 0.001210f * float(texInBounds264);
vec2 offset265 = vec2(onePixel[0] * -4.0, onePixel[1] * -7.0);
vec2 texCoords265 =  vec2(texture_uv[0], texture_uv[1]) + offset265;
float texAlpha265 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset265)[3]);
bool texInBounds265 = (abs(int(texCoords265[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords265[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords265[0] > 0.0f && texCoords265[0] < 1.0f && texCoords265[1] > 0.0f && texCoords265[1] < 1.0f;
float sample265 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset265)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset265)[3] > epsilon)) * 0.001216f * float(texInBounds265);
vec2 offset266 = vec2(onePixel[0] * -4.0, onePixel[1] * -6.0);
vec2 texCoords266 =  vec2(texture_uv[0], texture_uv[1]) + offset266;
float texAlpha266 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset266)[3]);
bool texInBounds266 = (abs(int(texCoords266[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords266[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords266[0] > 0.0f && texCoords266[0] < 1.0f && texCoords266[1] > 0.0f && texCoords266[1] < 1.0f;
float sample266 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset266)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset266)[3] > epsilon)) * 0.001220f * float(texInBounds266);
vec2 offset267 = vec2(onePixel[0] * -4.0, onePixel[1] * -5.0);
vec2 texCoords267 =  vec2(texture_uv[0], texture_uv[1]) + offset267;
float texAlpha267 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset267)[3]);
bool texInBounds267 = (abs(int(texCoords267[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords267[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords267[0] > 0.0f && texCoords267[0] < 1.0f && texCoords267[1] > 0.0f && texCoords267[1] < 1.0f;
float sample267 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset267)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset267)[3] > epsilon)) * 0.001224f * float(texInBounds267);
vec2 offset268 = vec2(onePixel[0] * -4.0, onePixel[1] * -4.0);
vec2 texCoords268 =  vec2(texture_uv[0], texture_uv[1]) + offset268;
float texAlpha268 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset268)[3]);
bool texInBounds268 = (abs(int(texCoords268[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords268[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords268[0] > 0.0f && texCoords268[0] < 1.0f && texCoords268[1] > 0.0f && texCoords268[1] < 1.0f;
float sample268 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset268)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset268)[3] > epsilon)) * 0.001228f * float(texInBounds268);
vec2 offset269 = vec2(onePixel[0] * -4.0, onePixel[1] * -3.0);
vec2 texCoords269 =  vec2(texture_uv[0], texture_uv[1]) + offset269;
float texAlpha269 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset269)[3]);
bool texInBounds269 = (abs(int(texCoords269[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords269[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords269[0] > 0.0f && texCoords269[0] < 1.0f && texCoords269[1] > 0.0f && texCoords269[1] < 1.0f;
float sample269 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset269)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset269)[3] > epsilon)) * 0.001230f * float(texInBounds269);
vec2 offset270 = vec2(onePixel[0] * -4.0, onePixel[1] * -2.0);
vec2 texCoords270 =  vec2(texture_uv[0], texture_uv[1]) + offset270;
float texAlpha270 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset270)[3]);
bool texInBounds270 = (abs(int(texCoords270[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords270[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords270[0] > 0.0f && texCoords270[0] < 1.0f && texCoords270[1] > 0.0f && texCoords270[1] < 1.0f;
float sample270 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset270)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset270)[3] > epsilon)) * 0.001232f * float(texInBounds270);
vec2 offset271 = vec2(onePixel[0] * -4.0, onePixel[1] * -1.0);
vec2 texCoords271 =  vec2(texture_uv[0], texture_uv[1]) + offset271;
float texAlpha271 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset271)[3]);
bool texInBounds271 = (abs(int(texCoords271[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords271[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords271[0] > 0.0f && texCoords271[0] < 1.0f && texCoords271[1] > 0.0f && texCoords271[1] < 1.0f;
float sample271 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset271)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset271)[3] > epsilon)) * 0.001233f * float(texInBounds271);
vec2 offset272 = vec2(onePixel[0] * -4.0, onePixel[1] * 0.0);
vec2 texCoords272 =  vec2(texture_uv[0], texture_uv[1]) + offset272;
float texAlpha272 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset272)[3]);
bool texInBounds272 = (abs(int(texCoords272[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords272[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords272[0] > 0.0f && texCoords272[0] < 1.0f && texCoords272[1] > 0.0f && texCoords272[1] < 1.0f;
float sample272 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset272)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset272)[3] > epsilon)) * 0.001233f * float(texInBounds272);
vec2 offset273 = vec2(onePixel[0] * -4.0, onePixel[1] * 1.0);
vec2 texCoords273 =  vec2(texture_uv[0], texture_uv[1]) + offset273;
float texAlpha273 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset273)[3]);
bool texInBounds273 = (abs(int(texCoords273[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords273[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords273[0] > 0.0f && texCoords273[0] < 1.0f && texCoords273[1] > 0.0f && texCoords273[1] < 1.0f;
float sample273 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset273)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset273)[3] > epsilon)) * 0.001233f * float(texInBounds273);
vec2 offset274 = vec2(onePixel[0] * -4.0, onePixel[1] * 2.0);
vec2 texCoords274 =  vec2(texture_uv[0], texture_uv[1]) + offset274;
float texAlpha274 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset274)[3]);
bool texInBounds274 = (abs(int(texCoords274[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords274[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords274[0] > 0.0f && texCoords274[0] < 1.0f && texCoords274[1] > 0.0f && texCoords274[1] < 1.0f;
float sample274 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset274)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset274)[3] > epsilon)) * 0.001232f * float(texInBounds274);
vec2 offset275 = vec2(onePixel[0] * -4.0, onePixel[1] * 3.0);
vec2 texCoords275 =  vec2(texture_uv[0], texture_uv[1]) + offset275;
float texAlpha275 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset275)[3]);
bool texInBounds275 = (abs(int(texCoords275[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords275[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords275[0] > 0.0f && texCoords275[0] < 1.0f && texCoords275[1] > 0.0f && texCoords275[1] < 1.0f;
float sample275 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset275)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset275)[3] > epsilon)) * 0.001230f * float(texInBounds275);
vec2 offset276 = vec2(onePixel[0] * -4.0, onePixel[1] * 4.0);
vec2 texCoords276 =  vec2(texture_uv[0], texture_uv[1]) + offset276;
float texAlpha276 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset276)[3]);
bool texInBounds276 = (abs(int(texCoords276[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords276[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords276[0] > 0.0f && texCoords276[0] < 1.0f && texCoords276[1] > 0.0f && texCoords276[1] < 1.0f;
float sample276 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset276)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset276)[3] > epsilon)) * 0.001228f * float(texInBounds276);
vec2 offset277 = vec2(onePixel[0] * -4.0, onePixel[1] * 5.0);
vec2 texCoords277 =  vec2(texture_uv[0], texture_uv[1]) + offset277;
float texAlpha277 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset277)[3]);
bool texInBounds277 = (abs(int(texCoords277[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords277[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords277[0] > 0.0f && texCoords277[0] < 1.0f && texCoords277[1] > 0.0f && texCoords277[1] < 1.0f;
float sample277 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset277)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset277)[3] > epsilon)) * 0.001224f * float(texInBounds277);
vec2 offset278 = vec2(onePixel[0] * -4.0, onePixel[1] * 6.0);
vec2 texCoords278 =  vec2(texture_uv[0], texture_uv[1]) + offset278;
float texAlpha278 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset278)[3]);
bool texInBounds278 = (abs(int(texCoords278[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords278[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords278[0] > 0.0f && texCoords278[0] < 1.0f && texCoords278[1] > 0.0f && texCoords278[1] < 1.0f;
float sample278 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset278)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset278)[3] > epsilon)) * 0.001220f * float(texInBounds278);
vec2 offset279 = vec2(onePixel[0] * -4.0, onePixel[1] * 7.0);
vec2 texCoords279 =  vec2(texture_uv[0], texture_uv[1]) + offset279;
float texAlpha279 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset279)[3]);
bool texInBounds279 = (abs(int(texCoords279[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords279[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords279[0] > 0.0f && texCoords279[0] < 1.0f && texCoords279[1] > 0.0f && texCoords279[1] < 1.0f;
float sample279 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset279)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset279)[3] > epsilon)) * 0.001216f * float(texInBounds279);
vec2 offset280 = vec2(onePixel[0] * -4.0, onePixel[1] * 8.0);
vec2 texCoords280 =  vec2(texture_uv[0], texture_uv[1]) + offset280;
float texAlpha280 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset280)[3]);
bool texInBounds280 = (abs(int(texCoords280[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords280[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords280[0] > 0.0f && texCoords280[0] < 1.0f && texCoords280[1] > 0.0f && texCoords280[1] < 1.0f;
float sample280 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset280)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset280)[3] > epsilon)) * 0.001210f * float(texInBounds280);
vec2 offset281 = vec2(onePixel[0] * -4.0, onePixel[1] * 9.0);
vec2 texCoords281 =  vec2(texture_uv[0], texture_uv[1]) + offset281;
float texAlpha281 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset281)[3]);
bool texInBounds281 = (abs(int(texCoords281[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords281[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords281[0] > 0.0f && texCoords281[0] < 1.0f && texCoords281[1] > 0.0f && texCoords281[1] < 1.0f;
float sample281 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset281)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset281)[3] > epsilon)) * 0.001204f * float(texInBounds281);
vec2 offset282 = vec2(onePixel[0] * -4.0, onePixel[1] * 10.0);
vec2 texCoords282 =  vec2(texture_uv[0], texture_uv[1]) + offset282;
float texAlpha282 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset282)[3]);
bool texInBounds282 = (abs(int(texCoords282[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords282[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords282[0] > 0.0f && texCoords282[0] < 1.0f && texCoords282[1] > 0.0f && texCoords282[1] < 1.0f;
float sample282 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset282)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset282)[3] > epsilon)) * 0.001197f * float(texInBounds282);
vec2 offset283 = vec2(onePixel[0] * -4.0, onePixel[1] * 11.0);
vec2 texCoords283 =  vec2(texture_uv[0], texture_uv[1]) + offset283;
float texAlpha283 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset283)[3]);
bool texInBounds283 = (abs(int(texCoords283[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords283[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords283[0] > 0.0f && texCoords283[0] < 1.0f && texCoords283[1] > 0.0f && texCoords283[1] < 1.0f;
float sample283 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset283)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset283)[3] > epsilon)) * 0.001190f * float(texInBounds283);
vec2 offset284 = vec2(onePixel[0] * -4.0, onePixel[1] * 12.0);
vec2 texCoords284 =  vec2(texture_uv[0], texture_uv[1]) + offset284;
float texAlpha284 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset284)[3]);
bool texInBounds284 = (abs(int(texCoords284[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords284[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords284[0] > 0.0f && texCoords284[0] < 1.0f && texCoords284[1] > 0.0f && texCoords284[1] < 1.0f;
float sample284 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset284)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset284)[3] > epsilon)) * 0.001182f * float(texInBounds284);
vec2 offset285 = vec2(onePixel[0] * -4.0, onePixel[1] * 13.0);
vec2 texCoords285 =  vec2(texture_uv[0], texture_uv[1]) + offset285;
float texAlpha285 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset285)[3]);
bool texInBounds285 = (abs(int(texCoords285[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords285[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords285[0] > 0.0f && texCoords285[0] < 1.0f && texCoords285[1] > 0.0f && texCoords285[1] < 1.0f;
float sample285 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset285)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset285)[3] > epsilon)) * 0.001173f * float(texInBounds285);
vec2 offset286 = vec2(onePixel[0] * -4.0, onePixel[1] * 14.0);
vec2 texCoords286 =  vec2(texture_uv[0], texture_uv[1]) + offset286;
float texAlpha286 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset286)[3]);
bool texInBounds286 = (abs(int(texCoords286[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords286[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords286[0] > 0.0f && texCoords286[0] < 1.0f && texCoords286[1] > 0.0f && texCoords286[1] < 1.0f;
float sample286 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset286)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset286)[3] > epsilon)) * 0.001164f * float(texInBounds286);
vec2 offset287 = vec2(onePixel[0] * -4.0, onePixel[1] * 15.0);
vec2 texCoords287 =  vec2(texture_uv[0], texture_uv[1]) + offset287;
float texAlpha287 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset287)[3]);
bool texInBounds287 = (abs(int(texCoords287[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords287[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords287[0] > 0.0f && texCoords287[0] < 1.0f && texCoords287[1] > 0.0f && texCoords287[1] < 1.0f;
float sample287 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset287)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset287)[3] > epsilon)) * 0.001154f * float(texInBounds287);
vec2 offset288 = vec2(onePixel[0] * -4.0, onePixel[1] * 16.0);
vec2 texCoords288 =  vec2(texture_uv[0], texture_uv[1]) + offset288;
float texAlpha288 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset288)[3]);
bool texInBounds288 = (abs(int(texCoords288[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords288[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords288[0] > 0.0f && texCoords288[0] < 1.0f && texCoords288[1] > 0.0f && texCoords288[1] < 1.0f;
float sample288 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset288)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset288)[3] > epsilon)) * 0.001143f * float(texInBounds288);
vec2 offset289 = vec2(onePixel[0] * -3.0, onePixel[1] * -17.0);
vec2 texCoords289 =  vec2(texture_uv[0], texture_uv[1]) + offset289;
float texAlpha289 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset289)[3]);
bool texInBounds289 = (abs(int(texCoords289[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords289[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords289[0] > 0.0f && texCoords289[0] < 1.0f && texCoords289[1] > 0.0f && texCoords289[1] < 1.0f;
float sample289 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset289)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset289)[3] > epsilon)) * 0.001134f * float(texInBounds289);
vec2 offset290 = vec2(onePixel[0] * -3.0, onePixel[1] * -16.0);
vec2 texCoords290 =  vec2(texture_uv[0], texture_uv[1]) + offset290;
float texAlpha290 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset290)[3]);
bool texInBounds290 = (abs(int(texCoords290[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords290[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords290[0] > 0.0f && texCoords290[0] < 1.0f && texCoords290[1] > 0.0f && texCoords290[1] < 1.0f;
float sample290 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset290)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset290)[3] > epsilon)) * 0.001145f * float(texInBounds290);
vec2 offset291 = vec2(onePixel[0] * -3.0, onePixel[1] * -15.0);
vec2 texCoords291 =  vec2(texture_uv[0], texture_uv[1]) + offset291;
float texAlpha291 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset291)[3]);
bool texInBounds291 = (abs(int(texCoords291[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords291[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords291[0] > 0.0f && texCoords291[0] < 1.0f && texCoords291[1] > 0.0f && texCoords291[1] < 1.0f;
float sample291 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset291)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset291)[3] > epsilon)) * 0.001156f * float(texInBounds291);
vec2 offset292 = vec2(onePixel[0] * -3.0, onePixel[1] * -14.0);
vec2 texCoords292 =  vec2(texture_uv[0], texture_uv[1]) + offset292;
float texAlpha292 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset292)[3]);
bool texInBounds292 = (abs(int(texCoords292[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords292[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords292[0] > 0.0f && texCoords292[0] < 1.0f && texCoords292[1] > 0.0f && texCoords292[1] < 1.0f;
float sample292 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset292)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset292)[3] > epsilon)) * 0.001166f * float(texInBounds292);
vec2 offset293 = vec2(onePixel[0] * -3.0, onePixel[1] * -13.0);
vec2 texCoords293 =  vec2(texture_uv[0], texture_uv[1]) + offset293;
float texAlpha293 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset293)[3]);
bool texInBounds293 = (abs(int(texCoords293[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords293[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords293[0] > 0.0f && texCoords293[0] < 1.0f && texCoords293[1] > 0.0f && texCoords293[1] < 1.0f;
float sample293 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset293)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset293)[3] > epsilon)) * 0.001175f * float(texInBounds293);
vec2 offset294 = vec2(onePixel[0] * -3.0, onePixel[1] * -12.0);
vec2 texCoords294 =  vec2(texture_uv[0], texture_uv[1]) + offset294;
float texAlpha294 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset294)[3]);
bool texInBounds294 = (abs(int(texCoords294[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords294[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords294[0] > 0.0f && texCoords294[0] < 1.0f && texCoords294[1] > 0.0f && texCoords294[1] < 1.0f;
float sample294 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset294)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset294)[3] > epsilon)) * 0.001184f * float(texInBounds294);
vec2 offset295 = vec2(onePixel[0] * -3.0, onePixel[1] * -11.0);
vec2 texCoords295 =  vec2(texture_uv[0], texture_uv[1]) + offset295;
float texAlpha295 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset295)[3]);
bool texInBounds295 = (abs(int(texCoords295[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords295[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords295[0] > 0.0f && texCoords295[0] < 1.0f && texCoords295[1] > 0.0f && texCoords295[1] < 1.0f;
float sample295 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset295)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset295)[3] > epsilon)) * 0.001192f * float(texInBounds295);
vec2 offset296 = vec2(onePixel[0] * -3.0, onePixel[1] * -10.0);
vec2 texCoords296 =  vec2(texture_uv[0], texture_uv[1]) + offset296;
float texAlpha296 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset296)[3]);
bool texInBounds296 = (abs(int(texCoords296[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords296[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords296[0] > 0.0f && texCoords296[0] < 1.0f && texCoords296[1] > 0.0f && texCoords296[1] < 1.0f;
float sample296 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset296)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset296)[3] > epsilon)) * 0.001200f * float(texInBounds296);
vec2 offset297 = vec2(onePixel[0] * -3.0, onePixel[1] * -9.0);
vec2 texCoords297 =  vec2(texture_uv[0], texture_uv[1]) + offset297;
float texAlpha297 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset297)[3]);
bool texInBounds297 = (abs(int(texCoords297[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords297[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords297[0] > 0.0f && texCoords297[0] < 1.0f && texCoords297[1] > 0.0f && texCoords297[1] < 1.0f;
float sample297 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset297)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset297)[3] > epsilon)) * 0.001207f * float(texInBounds297);
vec2 offset298 = vec2(onePixel[0] * -3.0, onePixel[1] * -8.0);
vec2 texCoords298 =  vec2(texture_uv[0], texture_uv[1]) + offset298;
float texAlpha298 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset298)[3]);
bool texInBounds298 = (abs(int(texCoords298[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords298[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords298[0] > 0.0f && texCoords298[0] < 1.0f && texCoords298[1] > 0.0f && texCoords298[1] < 1.0f;
float sample298 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset298)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset298)[3] > epsilon)) * 0.001213f * float(texInBounds298);
vec2 offset299 = vec2(onePixel[0] * -3.0, onePixel[1] * -7.0);
vec2 texCoords299 =  vec2(texture_uv[0], texture_uv[1]) + offset299;
float texAlpha299 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset299)[3]);
bool texInBounds299 = (abs(int(texCoords299[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords299[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords299[0] > 0.0f && texCoords299[0] < 1.0f && texCoords299[1] > 0.0f && texCoords299[1] < 1.0f;
float sample299 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset299)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset299)[3] > epsilon)) * 0.001218f * float(texInBounds299);
vec2 offset300 = vec2(onePixel[0] * -3.0, onePixel[1] * -6.0);
vec2 texCoords300 =  vec2(texture_uv[0], texture_uv[1]) + offset300;
float texAlpha300 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset300)[3]);
bool texInBounds300 = (abs(int(texCoords300[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords300[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords300[0] > 0.0f && texCoords300[0] < 1.0f && texCoords300[1] > 0.0f && texCoords300[1] < 1.0f;
float sample300 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset300)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset300)[3] > epsilon)) * 0.001223f * float(texInBounds300);
vec2 offset301 = vec2(onePixel[0] * -3.0, onePixel[1] * -5.0);
vec2 texCoords301 =  vec2(texture_uv[0], texture_uv[1]) + offset301;
float texAlpha301 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset301)[3]);
bool texInBounds301 = (abs(int(texCoords301[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords301[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords301[0] > 0.0f && texCoords301[0] < 1.0f && texCoords301[1] > 0.0f && texCoords301[1] < 1.0f;
float sample301 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset301)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset301)[3] > epsilon)) * 0.001227f * float(texInBounds301);
vec2 offset302 = vec2(onePixel[0] * -3.0, onePixel[1] * -4.0);
vec2 texCoords302 =  vec2(texture_uv[0], texture_uv[1]) + offset302;
float texAlpha302 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset302)[3]);
bool texInBounds302 = (abs(int(texCoords302[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords302[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords302[0] > 0.0f && texCoords302[0] < 1.0f && texCoords302[1] > 0.0f && texCoords302[1] < 1.0f;
float sample302 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset302)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset302)[3] > epsilon)) * 0.001230f * float(texInBounds302);
vec2 offset303 = vec2(onePixel[0] * -3.0, onePixel[1] * -3.0);
vec2 texCoords303 =  vec2(texture_uv[0], texture_uv[1]) + offset303;
float texAlpha303 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset303)[3]);
bool texInBounds303 = (abs(int(texCoords303[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords303[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords303[0] > 0.0f && texCoords303[0] < 1.0f && texCoords303[1] > 0.0f && texCoords303[1] < 1.0f;
float sample303 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset303)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset303)[3] > epsilon)) * 0.001233f * float(texInBounds303);
vec2 offset304 = vec2(onePixel[0] * -3.0, onePixel[1] * -2.0);
vec2 texCoords304 =  vec2(texture_uv[0], texture_uv[1]) + offset304;
float texAlpha304 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset304)[3]);
bool texInBounds304 = (abs(int(texCoords304[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords304[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords304[0] > 0.0f && texCoords304[0] < 1.0f && texCoords304[1] > 0.0f && texCoords304[1] < 1.0f;
float sample304 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset304)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset304)[3] > epsilon)) * 0.001234f * float(texInBounds304);
vec2 offset305 = vec2(onePixel[0] * -3.0, onePixel[1] * -1.0);
vec2 texCoords305 =  vec2(texture_uv[0], texture_uv[1]) + offset305;
float texAlpha305 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset305)[3]);
bool texInBounds305 = (abs(int(texCoords305[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords305[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords305[0] > 0.0f && texCoords305[0] < 1.0f && texCoords305[1] > 0.0f && texCoords305[1] < 1.0f;
float sample305 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset305)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset305)[3] > epsilon)) * 0.001236f * float(texInBounds305);
vec2 offset306 = vec2(onePixel[0] * -3.0, onePixel[1] * 0.0);
vec2 texCoords306 =  vec2(texture_uv[0], texture_uv[1]) + offset306;
float texAlpha306 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset306)[3]);
bool texInBounds306 = (abs(int(texCoords306[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords306[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords306[0] > 0.0f && texCoords306[0] < 1.0f && texCoords306[1] > 0.0f && texCoords306[1] < 1.0f;
float sample306 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset306)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset306)[3] > epsilon)) * 0.001236f * float(texInBounds306);
vec2 offset307 = vec2(onePixel[0] * -3.0, onePixel[1] * 1.0);
vec2 texCoords307 =  vec2(texture_uv[0], texture_uv[1]) + offset307;
float texAlpha307 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset307)[3]);
bool texInBounds307 = (abs(int(texCoords307[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords307[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords307[0] > 0.0f && texCoords307[0] < 1.0f && texCoords307[1] > 0.0f && texCoords307[1] < 1.0f;
float sample307 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset307)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset307)[3] > epsilon)) * 0.001236f * float(texInBounds307);
vec2 offset308 = vec2(onePixel[0] * -3.0, onePixel[1] * 2.0);
vec2 texCoords308 =  vec2(texture_uv[0], texture_uv[1]) + offset308;
float texAlpha308 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset308)[3]);
bool texInBounds308 = (abs(int(texCoords308[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords308[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords308[0] > 0.0f && texCoords308[0] < 1.0f && texCoords308[1] > 0.0f && texCoords308[1] < 1.0f;
float sample308 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset308)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset308)[3] > epsilon)) * 0.001234f * float(texInBounds308);
vec2 offset309 = vec2(onePixel[0] * -3.0, onePixel[1] * 3.0);
vec2 texCoords309 =  vec2(texture_uv[0], texture_uv[1]) + offset309;
float texAlpha309 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset309)[3]);
bool texInBounds309 = (abs(int(texCoords309[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords309[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords309[0] > 0.0f && texCoords309[0] < 1.0f && texCoords309[1] > 0.0f && texCoords309[1] < 1.0f;
float sample309 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset309)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset309)[3] > epsilon)) * 0.001233f * float(texInBounds309);
vec2 offset310 = vec2(onePixel[0] * -3.0, onePixel[1] * 4.0);
vec2 texCoords310 =  vec2(texture_uv[0], texture_uv[1]) + offset310;
float texAlpha310 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset310)[3]);
bool texInBounds310 = (abs(int(texCoords310[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords310[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords310[0] > 0.0f && texCoords310[0] < 1.0f && texCoords310[1] > 0.0f && texCoords310[1] < 1.0f;
float sample310 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset310)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset310)[3] > epsilon)) * 0.001230f * float(texInBounds310);
vec2 offset311 = vec2(onePixel[0] * -3.0, onePixel[1] * 5.0);
vec2 texCoords311 =  vec2(texture_uv[0], texture_uv[1]) + offset311;
float texAlpha311 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset311)[3]);
bool texInBounds311 = (abs(int(texCoords311[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords311[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords311[0] > 0.0f && texCoords311[0] < 1.0f && texCoords311[1] > 0.0f && texCoords311[1] < 1.0f;
float sample311 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset311)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset311)[3] > epsilon)) * 0.001227f * float(texInBounds311);
vec2 offset312 = vec2(onePixel[0] * -3.0, onePixel[1] * 6.0);
vec2 texCoords312 =  vec2(texture_uv[0], texture_uv[1]) + offset312;
float texAlpha312 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset312)[3]);
bool texInBounds312 = (abs(int(texCoords312[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords312[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords312[0] > 0.0f && texCoords312[0] < 1.0f && texCoords312[1] > 0.0f && texCoords312[1] < 1.0f;
float sample312 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset312)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset312)[3] > epsilon)) * 0.001223f * float(texInBounds312);
vec2 offset313 = vec2(onePixel[0] * -3.0, onePixel[1] * 7.0);
vec2 texCoords313 =  vec2(texture_uv[0], texture_uv[1]) + offset313;
float texAlpha313 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset313)[3]);
bool texInBounds313 = (abs(int(texCoords313[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords313[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords313[0] > 0.0f && texCoords313[0] < 1.0f && texCoords313[1] > 0.0f && texCoords313[1] < 1.0f;
float sample313 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset313)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset313)[3] > epsilon)) * 0.001218f * float(texInBounds313);
vec2 offset314 = vec2(onePixel[0] * -3.0, onePixel[1] * 8.0);
vec2 texCoords314 =  vec2(texture_uv[0], texture_uv[1]) + offset314;
float texAlpha314 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset314)[3]);
bool texInBounds314 = (abs(int(texCoords314[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords314[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords314[0] > 0.0f && texCoords314[0] < 1.0f && texCoords314[1] > 0.0f && texCoords314[1] < 1.0f;
float sample314 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset314)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset314)[3] > epsilon)) * 0.001213f * float(texInBounds314);
vec2 offset315 = vec2(onePixel[0] * -3.0, onePixel[1] * 9.0);
vec2 texCoords315 =  vec2(texture_uv[0], texture_uv[1]) + offset315;
float texAlpha315 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset315)[3]);
bool texInBounds315 = (abs(int(texCoords315[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords315[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords315[0] > 0.0f && texCoords315[0] < 1.0f && texCoords315[1] > 0.0f && texCoords315[1] < 1.0f;
float sample315 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset315)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset315)[3] > epsilon)) * 0.001207f * float(texInBounds315);
vec2 offset316 = vec2(onePixel[0] * -3.0, onePixel[1] * 10.0);
vec2 texCoords316 =  vec2(texture_uv[0], texture_uv[1]) + offset316;
float texAlpha316 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset316)[3]);
bool texInBounds316 = (abs(int(texCoords316[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords316[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords316[0] > 0.0f && texCoords316[0] < 1.0f && texCoords316[1] > 0.0f && texCoords316[1] < 1.0f;
float sample316 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset316)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset316)[3] > epsilon)) * 0.001200f * float(texInBounds316);
vec2 offset317 = vec2(onePixel[0] * -3.0, onePixel[1] * 11.0);
vec2 texCoords317 =  vec2(texture_uv[0], texture_uv[1]) + offset317;
float texAlpha317 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset317)[3]);
bool texInBounds317 = (abs(int(texCoords317[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords317[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords317[0] > 0.0f && texCoords317[0] < 1.0f && texCoords317[1] > 0.0f && texCoords317[1] < 1.0f;
float sample317 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset317)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset317)[3] > epsilon)) * 0.001192f * float(texInBounds317);
vec2 offset318 = vec2(onePixel[0] * -3.0, onePixel[1] * 12.0);
vec2 texCoords318 =  vec2(texture_uv[0], texture_uv[1]) + offset318;
float texAlpha318 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset318)[3]);
bool texInBounds318 = (abs(int(texCoords318[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords318[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords318[0] > 0.0f && texCoords318[0] < 1.0f && texCoords318[1] > 0.0f && texCoords318[1] < 1.0f;
float sample318 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset318)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset318)[3] > epsilon)) * 0.001184f * float(texInBounds318);
vec2 offset319 = vec2(onePixel[0] * -3.0, onePixel[1] * 13.0);
vec2 texCoords319 =  vec2(texture_uv[0], texture_uv[1]) + offset319;
float texAlpha319 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset319)[3]);
bool texInBounds319 = (abs(int(texCoords319[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords319[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords319[0] > 0.0f && texCoords319[0] < 1.0f && texCoords319[1] > 0.0f && texCoords319[1] < 1.0f;
float sample319 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset319)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset319)[3] > epsilon)) * 0.001175f * float(texInBounds319);
vec2 offset320 = vec2(onePixel[0] * -3.0, onePixel[1] * 14.0);
vec2 texCoords320 =  vec2(texture_uv[0], texture_uv[1]) + offset320;
float texAlpha320 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset320)[3]);
bool texInBounds320 = (abs(int(texCoords320[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords320[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords320[0] > 0.0f && texCoords320[0] < 1.0f && texCoords320[1] > 0.0f && texCoords320[1] < 1.0f;
float sample320 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset320)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset320)[3] > epsilon)) * 0.001166f * float(texInBounds320);
vec2 offset321 = vec2(onePixel[0] * -3.0, onePixel[1] * 15.0);
vec2 texCoords321 =  vec2(texture_uv[0], texture_uv[1]) + offset321;
float texAlpha321 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset321)[3]);
bool texInBounds321 = (abs(int(texCoords321[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords321[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords321[0] > 0.0f && texCoords321[0] < 1.0f && texCoords321[1] > 0.0f && texCoords321[1] < 1.0f;
float sample321 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset321)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset321)[3] > epsilon)) * 0.001156f * float(texInBounds321);
vec2 offset322 = vec2(onePixel[0] * -3.0, onePixel[1] * 16.0);
vec2 texCoords322 =  vec2(texture_uv[0], texture_uv[1]) + offset322;
float texAlpha322 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset322)[3]);
bool texInBounds322 = (abs(int(texCoords322[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords322[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords322[0] > 0.0f && texCoords322[0] < 1.0f && texCoords322[1] > 0.0f && texCoords322[1] < 1.0f;
float sample322 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset322)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset322)[3] > epsilon)) * 0.001145f * float(texInBounds322);
vec2 offset323 = vec2(onePixel[0] * -3.0, onePixel[1] * 17.0);
vec2 texCoords323 =  vec2(texture_uv[0], texture_uv[1]) + offset323;
float texAlpha323 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset323)[3]);
bool texInBounds323 = (abs(int(texCoords323[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords323[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords323[0] > 0.0f && texCoords323[0] < 1.0f && texCoords323[1] > 0.0f && texCoords323[1] < 1.0f;
float sample323 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset323)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset323)[3] > epsilon)) * 0.001134f * float(texInBounds323);
vec2 offset324 = vec2(onePixel[0] * -2.0, onePixel[1] * -18.0);
vec2 texCoords324 =  vec2(texture_uv[0], texture_uv[1]) + offset324;
float texAlpha324 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset324)[3]);
bool texInBounds324 = (abs(int(texCoords324[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords324[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords324[0] > 0.0f && texCoords324[0] < 1.0f && texCoords324[1] > 0.0f && texCoords324[1] < 1.0f;
float sample324 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset324)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset324)[3] > epsilon)) * 0.001124f * float(texInBounds324);
vec2 offset325 = vec2(onePixel[0] * -2.0, onePixel[1] * -17.0);
vec2 texCoords325 =  vec2(texture_uv[0], texture_uv[1]) + offset325;
float texAlpha325 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset325)[3]);
bool texInBounds325 = (abs(int(texCoords325[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords325[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords325[0] > 0.0f && texCoords325[0] < 1.0f && texCoords325[1] > 0.0f && texCoords325[1] < 1.0f;
float sample325 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset325)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset325)[3] > epsilon)) * 0.001136f * float(texInBounds325);
vec2 offset326 = vec2(onePixel[0] * -2.0, onePixel[1] * -16.0);
vec2 texCoords326 =  vec2(texture_uv[0], texture_uv[1]) + offset326;
float texAlpha326 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset326)[3]);
bool texInBounds326 = (abs(int(texCoords326[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords326[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords326[0] > 0.0f && texCoords326[0] < 1.0f && texCoords326[1] > 0.0f && texCoords326[1] < 1.0f;
float sample326 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset326)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset326)[3] > epsilon)) * 0.001147f * float(texInBounds326);
vec2 offset327 = vec2(onePixel[0] * -2.0, onePixel[1] * -15.0);
vec2 texCoords327 =  vec2(texture_uv[0], texture_uv[1]) + offset327;
float texAlpha327 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset327)[3]);
bool texInBounds327 = (abs(int(texCoords327[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords327[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords327[0] > 0.0f && texCoords327[0] < 1.0f && texCoords327[1] > 0.0f && texCoords327[1] < 1.0f;
float sample327 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset327)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset327)[3] > epsilon)) * 0.001158f * float(texInBounds327);
vec2 offset328 = vec2(onePixel[0] * -2.0, onePixel[1] * -14.0);
vec2 texCoords328 =  vec2(texture_uv[0], texture_uv[1]) + offset328;
float texAlpha328 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset328)[3]);
bool texInBounds328 = (abs(int(texCoords328[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords328[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords328[0] > 0.0f && texCoords328[0] < 1.0f && texCoords328[1] > 0.0f && texCoords328[1] < 1.0f;
float sample328 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset328)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset328)[3] > epsilon)) * 0.001168f * float(texInBounds328);
vec2 offset329 = vec2(onePixel[0] * -2.0, onePixel[1] * -13.0);
vec2 texCoords329 =  vec2(texture_uv[0], texture_uv[1]) + offset329;
float texAlpha329 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset329)[3]);
bool texInBounds329 = (abs(int(texCoords329[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords329[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords329[0] > 0.0f && texCoords329[0] < 1.0f && texCoords329[1] > 0.0f && texCoords329[1] < 1.0f;
float sample329 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset329)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset329)[3] > epsilon)) * 0.001177f * float(texInBounds329);
vec2 offset330 = vec2(onePixel[0] * -2.0, onePixel[1] * -12.0);
vec2 texCoords330 =  vec2(texture_uv[0], texture_uv[1]) + offset330;
float texAlpha330 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset330)[3]);
bool texInBounds330 = (abs(int(texCoords330[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords330[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords330[0] > 0.0f && texCoords330[0] < 1.0f && texCoords330[1] > 0.0f && texCoords330[1] < 1.0f;
float sample330 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset330)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset330)[3] > epsilon)) * 0.001186f * float(texInBounds330);
vec2 offset331 = vec2(onePixel[0] * -2.0, onePixel[1] * -11.0);
vec2 texCoords331 =  vec2(texture_uv[0], texture_uv[1]) + offset331;
float texAlpha331 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset331)[3]);
bool texInBounds331 = (abs(int(texCoords331[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords331[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords331[0] > 0.0f && texCoords331[0] < 1.0f && texCoords331[1] > 0.0f && texCoords331[1] < 1.0f;
float sample331 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset331)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset331)[3] > epsilon)) * 0.001194f * float(texInBounds331);
vec2 offset332 = vec2(onePixel[0] * -2.0, onePixel[1] * -10.0);
vec2 texCoords332 =  vec2(texture_uv[0], texture_uv[1]) + offset332;
float texAlpha332 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset332)[3]);
bool texInBounds332 = (abs(int(texCoords332[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords332[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords332[0] > 0.0f && texCoords332[0] < 1.0f && texCoords332[1] > 0.0f && texCoords332[1] < 1.0f;
float sample332 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset332)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset332)[3] > epsilon)) * 0.001202f * float(texInBounds332);
vec2 offset333 = vec2(onePixel[0] * -2.0, onePixel[1] * -9.0);
vec2 texCoords333 =  vec2(texture_uv[0], texture_uv[1]) + offset333;
float texAlpha333 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset333)[3]);
bool texInBounds333 = (abs(int(texCoords333[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords333[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords333[0] > 0.0f && texCoords333[0] < 1.0f && texCoords333[1] > 0.0f && texCoords333[1] < 1.0f;
float sample333 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset333)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset333)[3] > epsilon)) * 0.001208f * float(texInBounds333);
vec2 offset334 = vec2(onePixel[0] * -2.0, onePixel[1] * -8.0);
vec2 texCoords334 =  vec2(texture_uv[0], texture_uv[1]) + offset334;
float texAlpha334 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset334)[3]);
bool texInBounds334 = (abs(int(texCoords334[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords334[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords334[0] > 0.0f && texCoords334[0] < 1.0f && texCoords334[1] > 0.0f && texCoords334[1] < 1.0f;
float sample334 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset334)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset334)[3] > epsilon)) * 0.001214f * float(texInBounds334);
vec2 offset335 = vec2(onePixel[0] * -2.0, onePixel[1] * -7.0);
vec2 texCoords335 =  vec2(texture_uv[0], texture_uv[1]) + offset335;
float texAlpha335 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset335)[3]);
bool texInBounds335 = (abs(int(texCoords335[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords335[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords335[0] > 0.0f && texCoords335[0] < 1.0f && texCoords335[1] > 0.0f && texCoords335[1] < 1.0f;
float sample335 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset335)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset335)[3] > epsilon)) * 0.001220f * float(texInBounds335);
vec2 offset336 = vec2(onePixel[0] * -2.0, onePixel[1] * -6.0);
vec2 texCoords336 =  vec2(texture_uv[0], texture_uv[1]) + offset336;
float texAlpha336 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset336)[3]);
bool texInBounds336 = (abs(int(texCoords336[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords336[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords336[0] > 0.0f && texCoords336[0] < 1.0f && texCoords336[1] > 0.0f && texCoords336[1] < 1.0f;
float sample336 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset336)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset336)[3] > epsilon)) * 0.001225f * float(texInBounds336);
vec2 offset337 = vec2(onePixel[0] * -2.0, onePixel[1] * -5.0);
vec2 texCoords337 =  vec2(texture_uv[0], texture_uv[1]) + offset337;
float texAlpha337 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset337)[3]);
bool texInBounds337 = (abs(int(texCoords337[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords337[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords337[0] > 0.0f && texCoords337[0] < 1.0f && texCoords337[1] > 0.0f && texCoords337[1] < 1.0f;
float sample337 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset337)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset337)[3] > epsilon)) * 0.001229f * float(texInBounds337);
vec2 offset338 = vec2(onePixel[0] * -2.0, onePixel[1] * -4.0);
vec2 texCoords338 =  vec2(texture_uv[0], texture_uv[1]) + offset338;
float texAlpha338 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset338)[3]);
bool texInBounds338 = (abs(int(texCoords338[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords338[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords338[0] > 0.0f && texCoords338[0] < 1.0f && texCoords338[1] > 0.0f && texCoords338[1] < 1.0f;
float sample338 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset338)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset338)[3] > epsilon)) * 0.001232f * float(texInBounds338);
vec2 offset339 = vec2(onePixel[0] * -2.0, onePixel[1] * -3.0);
vec2 texCoords339 =  vec2(texture_uv[0], texture_uv[1]) + offset339;
float texAlpha339 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset339)[3]);
bool texInBounds339 = (abs(int(texCoords339[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords339[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords339[0] > 0.0f && texCoords339[0] < 1.0f && texCoords339[1] > 0.0f && texCoords339[1] < 1.0f;
float sample339 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset339)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset339)[3] > epsilon)) * 0.001234f * float(texInBounds339);
vec2 offset340 = vec2(onePixel[0] * -2.0, onePixel[1] * -2.0);
vec2 texCoords340 =  vec2(texture_uv[0], texture_uv[1]) + offset340;
float texAlpha340 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset340)[3]);
bool texInBounds340 = (abs(int(texCoords340[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords340[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords340[0] > 0.0f && texCoords340[0] < 1.0f && texCoords340[1] > 0.0f && texCoords340[1] < 1.0f;
float sample340 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset340)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset340)[3] > epsilon)) * 0.001236f * float(texInBounds340);
vec2 offset341 = vec2(onePixel[0] * -2.0, onePixel[1] * -1.0);
vec2 texCoords341 =  vec2(texture_uv[0], texture_uv[1]) + offset341;
float texAlpha341 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset341)[3]);
bool texInBounds341 = (abs(int(texCoords341[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords341[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords341[0] > 0.0f && texCoords341[0] < 1.0f && texCoords341[1] > 0.0f && texCoords341[1] < 1.0f;
float sample341 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset341)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset341)[3] > epsilon)) * 0.001237f * float(texInBounds341);
vec2 offset342 = vec2(onePixel[0] * -2.0, onePixel[1] * 0.0);
vec2 texCoords342 =  vec2(texture_uv[0], texture_uv[1]) + offset342;
float texAlpha342 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset342)[3]);
bool texInBounds342 = (abs(int(texCoords342[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords342[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords342[0] > 0.0f && texCoords342[0] < 1.0f && texCoords342[1] > 0.0f && texCoords342[1] < 1.0f;
float sample342 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset342)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset342)[3] > epsilon)) * 0.001238f * float(texInBounds342);
vec2 offset343 = vec2(onePixel[0] * -2.0, onePixel[1] * 1.0);
vec2 texCoords343 =  vec2(texture_uv[0], texture_uv[1]) + offset343;
float texAlpha343 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset343)[3]);
bool texInBounds343 = (abs(int(texCoords343[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords343[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords343[0] > 0.0f && texCoords343[0] < 1.0f && texCoords343[1] > 0.0f && texCoords343[1] < 1.0f;
float sample343 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset343)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset343)[3] > epsilon)) * 0.001237f * float(texInBounds343);
vec2 offset344 = vec2(onePixel[0] * -2.0, onePixel[1] * 2.0);
vec2 texCoords344 =  vec2(texture_uv[0], texture_uv[1]) + offset344;
float texAlpha344 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset344)[3]);
bool texInBounds344 = (abs(int(texCoords344[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords344[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords344[0] > 0.0f && texCoords344[0] < 1.0f && texCoords344[1] > 0.0f && texCoords344[1] < 1.0f;
float sample344 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset344)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset344)[3] > epsilon)) * 0.001236f * float(texInBounds344);
vec2 offset345 = vec2(onePixel[0] * -2.0, onePixel[1] * 3.0);
vec2 texCoords345 =  vec2(texture_uv[0], texture_uv[1]) + offset345;
float texAlpha345 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset345)[3]);
bool texInBounds345 = (abs(int(texCoords345[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords345[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords345[0] > 0.0f && texCoords345[0] < 1.0f && texCoords345[1] > 0.0f && texCoords345[1] < 1.0f;
float sample345 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset345)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset345)[3] > epsilon)) * 0.001234f * float(texInBounds345);
vec2 offset346 = vec2(onePixel[0] * -2.0, onePixel[1] * 4.0);
vec2 texCoords346 =  vec2(texture_uv[0], texture_uv[1]) + offset346;
float texAlpha346 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset346)[3]);
bool texInBounds346 = (abs(int(texCoords346[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords346[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords346[0] > 0.0f && texCoords346[0] < 1.0f && texCoords346[1] > 0.0f && texCoords346[1] < 1.0f;
float sample346 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset346)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset346)[3] > epsilon)) * 0.001232f * float(texInBounds346);
vec2 offset347 = vec2(onePixel[0] * -2.0, onePixel[1] * 5.0);
vec2 texCoords347 =  vec2(texture_uv[0], texture_uv[1]) + offset347;
float texAlpha347 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset347)[3]);
bool texInBounds347 = (abs(int(texCoords347[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords347[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords347[0] > 0.0f && texCoords347[0] < 1.0f && texCoords347[1] > 0.0f && texCoords347[1] < 1.0f;
float sample347 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset347)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset347)[3] > epsilon)) * 0.001229f * float(texInBounds347);
vec2 offset348 = vec2(onePixel[0] * -2.0, onePixel[1] * 6.0);
vec2 texCoords348 =  vec2(texture_uv[0], texture_uv[1]) + offset348;
float texAlpha348 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset348)[3]);
bool texInBounds348 = (abs(int(texCoords348[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords348[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords348[0] > 0.0f && texCoords348[0] < 1.0f && texCoords348[1] > 0.0f && texCoords348[1] < 1.0f;
float sample348 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset348)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset348)[3] > epsilon)) * 0.001225f * float(texInBounds348);
vec2 offset349 = vec2(onePixel[0] * -2.0, onePixel[1] * 7.0);
vec2 texCoords349 =  vec2(texture_uv[0], texture_uv[1]) + offset349;
float texAlpha349 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset349)[3]);
bool texInBounds349 = (abs(int(texCoords349[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords349[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords349[0] > 0.0f && texCoords349[0] < 1.0f && texCoords349[1] > 0.0f && texCoords349[1] < 1.0f;
float sample349 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset349)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset349)[3] > epsilon)) * 0.001220f * float(texInBounds349);
vec2 offset350 = vec2(onePixel[0] * -2.0, onePixel[1] * 8.0);
vec2 texCoords350 =  vec2(texture_uv[0], texture_uv[1]) + offset350;
float texAlpha350 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset350)[3]);
bool texInBounds350 = (abs(int(texCoords350[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords350[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords350[0] > 0.0f && texCoords350[0] < 1.0f && texCoords350[1] > 0.0f && texCoords350[1] < 1.0f;
float sample350 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset350)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset350)[3] > epsilon)) * 0.001214f * float(texInBounds350);
vec2 offset351 = vec2(onePixel[0] * -2.0, onePixel[1] * 9.0);
vec2 texCoords351 =  vec2(texture_uv[0], texture_uv[1]) + offset351;
float texAlpha351 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset351)[3]);
bool texInBounds351 = (abs(int(texCoords351[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords351[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords351[0] > 0.0f && texCoords351[0] < 1.0f && texCoords351[1] > 0.0f && texCoords351[1] < 1.0f;
float sample351 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset351)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset351)[3] > epsilon)) * 0.001208f * float(texInBounds351);
vec2 offset352 = vec2(onePixel[0] * -2.0, onePixel[1] * 10.0);
vec2 texCoords352 =  vec2(texture_uv[0], texture_uv[1]) + offset352;
float texAlpha352 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset352)[3]);
bool texInBounds352 = (abs(int(texCoords352[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords352[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords352[0] > 0.0f && texCoords352[0] < 1.0f && texCoords352[1] > 0.0f && texCoords352[1] < 1.0f;
float sample352 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset352)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset352)[3] > epsilon)) * 0.001202f * float(texInBounds352);
vec2 offset353 = vec2(onePixel[0] * -2.0, onePixel[1] * 11.0);
vec2 texCoords353 =  vec2(texture_uv[0], texture_uv[1]) + offset353;
float texAlpha353 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset353)[3]);
bool texInBounds353 = (abs(int(texCoords353[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords353[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords353[0] > 0.0f && texCoords353[0] < 1.0f && texCoords353[1] > 0.0f && texCoords353[1] < 1.0f;
float sample353 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset353)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset353)[3] > epsilon)) * 0.001194f * float(texInBounds353);
vec2 offset354 = vec2(onePixel[0] * -2.0, onePixel[1] * 12.0);
vec2 texCoords354 =  vec2(texture_uv[0], texture_uv[1]) + offset354;
float texAlpha354 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset354)[3]);
bool texInBounds354 = (abs(int(texCoords354[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords354[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords354[0] > 0.0f && texCoords354[0] < 1.0f && texCoords354[1] > 0.0f && texCoords354[1] < 1.0f;
float sample354 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset354)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset354)[3] > epsilon)) * 0.001186f * float(texInBounds354);
vec2 offset355 = vec2(onePixel[0] * -2.0, onePixel[1] * 13.0);
vec2 texCoords355 =  vec2(texture_uv[0], texture_uv[1]) + offset355;
float texAlpha355 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset355)[3]);
bool texInBounds355 = (abs(int(texCoords355[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords355[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords355[0] > 0.0f && texCoords355[0] < 1.0f && texCoords355[1] > 0.0f && texCoords355[1] < 1.0f;
float sample355 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset355)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset355)[3] > epsilon)) * 0.001177f * float(texInBounds355);
vec2 offset356 = vec2(onePixel[0] * -2.0, onePixel[1] * 14.0);
vec2 texCoords356 =  vec2(texture_uv[0], texture_uv[1]) + offset356;
float texAlpha356 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset356)[3]);
bool texInBounds356 = (abs(int(texCoords356[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords356[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords356[0] > 0.0f && texCoords356[0] < 1.0f && texCoords356[1] > 0.0f && texCoords356[1] < 1.0f;
float sample356 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset356)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset356)[3] > epsilon)) * 0.001168f * float(texInBounds356);
vec2 offset357 = vec2(onePixel[0] * -2.0, onePixel[1] * 15.0);
vec2 texCoords357 =  vec2(texture_uv[0], texture_uv[1]) + offset357;
float texAlpha357 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset357)[3]);
bool texInBounds357 = (abs(int(texCoords357[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords357[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords357[0] > 0.0f && texCoords357[0] < 1.0f && texCoords357[1] > 0.0f && texCoords357[1] < 1.0f;
float sample357 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset357)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset357)[3] > epsilon)) * 0.001158f * float(texInBounds357);
vec2 offset358 = vec2(onePixel[0] * -2.0, onePixel[1] * 16.0);
vec2 texCoords358 =  vec2(texture_uv[0], texture_uv[1]) + offset358;
float texAlpha358 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset358)[3]);
bool texInBounds358 = (abs(int(texCoords358[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords358[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords358[0] > 0.0f && texCoords358[0] < 1.0f && texCoords358[1] > 0.0f && texCoords358[1] < 1.0f;
float sample358 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset358)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset358)[3] > epsilon)) * 0.001147f * float(texInBounds358);
vec2 offset359 = vec2(onePixel[0] * -2.0, onePixel[1] * 17.0);
vec2 texCoords359 =  vec2(texture_uv[0], texture_uv[1]) + offset359;
float texAlpha359 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset359)[3]);
bool texInBounds359 = (abs(int(texCoords359[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords359[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords359[0] > 0.0f && texCoords359[0] < 1.0f && texCoords359[1] > 0.0f && texCoords359[1] < 1.0f;
float sample359 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset359)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset359)[3] > epsilon)) * 0.001136f * float(texInBounds359);
vec2 offset360 = vec2(onePixel[0] * -2.0, onePixel[1] * 18.0);
vec2 texCoords360 =  vec2(texture_uv[0], texture_uv[1]) + offset360;
float texAlpha360 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset360)[3]);
bool texInBounds360 = (abs(int(texCoords360[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords360[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords360[0] > 0.0f && texCoords360[0] < 1.0f && texCoords360[1] > 0.0f && texCoords360[1] < 1.0f;
float sample360 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset360)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset360)[3] > epsilon)) * 0.001124f * float(texInBounds360);
vec2 offset361 = vec2(onePixel[0] * -1.0, onePixel[1] * -19.0);
vec2 texCoords361 =  vec2(texture_uv[0], texture_uv[1]) + offset361;
float texAlpha361 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset361)[3]);
bool texInBounds361 = (abs(int(texCoords361[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords361[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords361[0] > 0.0f && texCoords361[0] < 1.0f && texCoords361[1] > 0.0f && texCoords361[1] < 1.0f;
float sample361 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset361)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset361)[3] > epsilon)) * 0.001113f * float(texInBounds361);
vec2 offset362 = vec2(onePixel[0] * -1.0, onePixel[1] * -18.0);
vec2 texCoords362 =  vec2(texture_uv[0], texture_uv[1]) + offset362;
float texAlpha362 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset362)[3]);
bool texInBounds362 = (abs(int(texCoords362[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords362[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords362[0] > 0.0f && texCoords362[0] < 1.0f && texCoords362[1] > 0.0f && texCoords362[1] < 1.0f;
float sample362 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset362)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset362)[3] > epsilon)) * 0.001125f * float(texInBounds362);
vec2 offset363 = vec2(onePixel[0] * -1.0, onePixel[1] * -17.0);
vec2 texCoords363 =  vec2(texture_uv[0], texture_uv[1]) + offset363;
float texAlpha363 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset363)[3]);
bool texInBounds363 = (abs(int(texCoords363[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords363[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords363[0] > 0.0f && texCoords363[0] < 1.0f && texCoords363[1] > 0.0f && texCoords363[1] < 1.0f;
float sample363 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset363)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset363)[3] > epsilon)) * 0.001137f * float(texInBounds363);
vec2 offset364 = vec2(onePixel[0] * -1.0, onePixel[1] * -16.0);
vec2 texCoords364 =  vec2(texture_uv[0], texture_uv[1]) + offset364;
float texAlpha364 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset364)[3]);
bool texInBounds364 = (abs(int(texCoords364[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords364[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords364[0] > 0.0f && texCoords364[0] < 1.0f && texCoords364[1] > 0.0f && texCoords364[1] < 1.0f;
float sample364 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset364)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset364)[3] > epsilon)) * 0.001148f * float(texInBounds364);
vec2 offset365 = vec2(onePixel[0] * -1.0, onePixel[1] * -15.0);
vec2 texCoords365 =  vec2(texture_uv[0], texture_uv[1]) + offset365;
float texAlpha365 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset365)[3]);
bool texInBounds365 = (abs(int(texCoords365[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords365[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords365[0] > 0.0f && texCoords365[0] < 1.0f && texCoords365[1] > 0.0f && texCoords365[1] < 1.0f;
float sample365 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset365)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset365)[3] > epsilon)) * 0.001159f * float(texInBounds365);
vec2 offset366 = vec2(onePixel[0] * -1.0, onePixel[1] * -14.0);
vec2 texCoords366 =  vec2(texture_uv[0], texture_uv[1]) + offset366;
float texAlpha366 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset366)[3]);
bool texInBounds366 = (abs(int(texCoords366[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords366[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords366[0] > 0.0f && texCoords366[0] < 1.0f && texCoords366[1] > 0.0f && texCoords366[1] < 1.0f;
float sample366 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset366)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset366)[3] > epsilon)) * 0.001169f * float(texInBounds366);
vec2 offset367 = vec2(onePixel[0] * -1.0, onePixel[1] * -13.0);
vec2 texCoords367 =  vec2(texture_uv[0], texture_uv[1]) + offset367;
float texAlpha367 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset367)[3]);
bool texInBounds367 = (abs(int(texCoords367[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords367[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords367[0] > 0.0f && texCoords367[0] < 1.0f && texCoords367[1] > 0.0f && texCoords367[1] < 1.0f;
float sample367 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset367)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset367)[3] > epsilon)) * 0.001178f * float(texInBounds367);
vec2 offset368 = vec2(onePixel[0] * -1.0, onePixel[1] * -12.0);
vec2 texCoords368 =  vec2(texture_uv[0], texture_uv[1]) + offset368;
float texAlpha368 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset368)[3]);
bool texInBounds368 = (abs(int(texCoords368[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords368[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords368[0] > 0.0f && texCoords368[0] < 1.0f && texCoords368[1] > 0.0f && texCoords368[1] < 1.0f;
float sample368 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset368)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset368)[3] > epsilon)) * 0.001187f * float(texInBounds368);
vec2 offset369 = vec2(onePixel[0] * -1.0, onePixel[1] * -11.0);
vec2 texCoords369 =  vec2(texture_uv[0], texture_uv[1]) + offset369;
float texAlpha369 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset369)[3]);
bool texInBounds369 = (abs(int(texCoords369[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords369[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords369[0] > 0.0f && texCoords369[0] < 1.0f && texCoords369[1] > 0.0f && texCoords369[1] < 1.0f;
float sample369 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset369)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset369)[3] > epsilon)) * 0.001195f * float(texInBounds369);
vec2 offset370 = vec2(onePixel[0] * -1.0, onePixel[1] * -10.0);
vec2 texCoords370 =  vec2(texture_uv[0], texture_uv[1]) + offset370;
float texAlpha370 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset370)[3]);
bool texInBounds370 = (abs(int(texCoords370[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords370[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords370[0] > 0.0f && texCoords370[0] < 1.0f && texCoords370[1] > 0.0f && texCoords370[1] < 1.0f;
float sample370 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset370)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset370)[3] > epsilon)) * 0.001203f * float(texInBounds370);
vec2 offset371 = vec2(onePixel[0] * -1.0, onePixel[1] * -9.0);
vec2 texCoords371 =  vec2(texture_uv[0], texture_uv[1]) + offset371;
float texAlpha371 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset371)[3]);
bool texInBounds371 = (abs(int(texCoords371[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords371[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords371[0] > 0.0f && texCoords371[0] < 1.0f && texCoords371[1] > 0.0f && texCoords371[1] < 1.0f;
float sample371 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset371)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset371)[3] > epsilon)) * 0.001209f * float(texInBounds371);
vec2 offset372 = vec2(onePixel[0] * -1.0, onePixel[1] * -8.0);
vec2 texCoords372 =  vec2(texture_uv[0], texture_uv[1]) + offset372;
float texAlpha372 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset372)[3]);
bool texInBounds372 = (abs(int(texCoords372[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords372[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords372[0] > 0.0f && texCoords372[0] < 1.0f && texCoords372[1] > 0.0f && texCoords372[1] < 1.0f;
float sample372 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset372)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset372)[3] > epsilon)) * 0.001216f * float(texInBounds372);
vec2 offset373 = vec2(onePixel[0] * -1.0, onePixel[1] * -7.0);
vec2 texCoords373 =  vec2(texture_uv[0], texture_uv[1]) + offset373;
float texAlpha373 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset373)[3]);
bool texInBounds373 = (abs(int(texCoords373[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords373[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords373[0] > 0.0f && texCoords373[0] < 1.0f && texCoords373[1] > 0.0f && texCoords373[1] < 1.0f;
float sample373 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset373)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset373)[3] > epsilon)) * 0.001221f * float(texInBounds373);
vec2 offset374 = vec2(onePixel[0] * -1.0, onePixel[1] * -6.0);
vec2 texCoords374 =  vec2(texture_uv[0], texture_uv[1]) + offset374;
float texAlpha374 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset374)[3]);
bool texInBounds374 = (abs(int(texCoords374[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords374[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords374[0] > 0.0f && texCoords374[0] < 1.0f && texCoords374[1] > 0.0f && texCoords374[1] < 1.0f;
float sample374 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset374)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset374)[3] > epsilon)) * 0.001226f * float(texInBounds374);
vec2 offset375 = vec2(onePixel[0] * -1.0, onePixel[1] * -5.0);
vec2 texCoords375 =  vec2(texture_uv[0], texture_uv[1]) + offset375;
float texAlpha375 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset375)[3]);
bool texInBounds375 = (abs(int(texCoords375[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords375[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords375[0] > 0.0f && texCoords375[0] < 1.0f && texCoords375[1] > 0.0f && texCoords375[1] < 1.0f;
float sample375 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset375)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset375)[3] > epsilon)) * 0.001230f * float(texInBounds375);
vec2 offset376 = vec2(onePixel[0] * -1.0, onePixel[1] * -4.0);
vec2 texCoords376 =  vec2(texture_uv[0], texture_uv[1]) + offset376;
float texAlpha376 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset376)[3]);
bool texInBounds376 = (abs(int(texCoords376[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords376[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords376[0] > 0.0f && texCoords376[0] < 1.0f && texCoords376[1] > 0.0f && texCoords376[1] < 1.0f;
float sample376 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset376)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset376)[3] > epsilon)) * 0.001233f * float(texInBounds376);
vec2 offset377 = vec2(onePixel[0] * -1.0, onePixel[1] * -3.0);
vec2 texCoords377 =  vec2(texture_uv[0], texture_uv[1]) + offset377;
float texAlpha377 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset377)[3]);
bool texInBounds377 = (abs(int(texCoords377[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords377[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords377[0] > 0.0f && texCoords377[0] < 1.0f && texCoords377[1] > 0.0f && texCoords377[1] < 1.0f;
float sample377 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset377)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset377)[3] > epsilon)) * 0.001236f * float(texInBounds377);
vec2 offset378 = vec2(onePixel[0] * -1.0, onePixel[1] * -2.0);
vec2 texCoords378 =  vec2(texture_uv[0], texture_uv[1]) + offset378;
float texAlpha378 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset378)[3]);
bool texInBounds378 = (abs(int(texCoords378[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords378[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords378[0] > 0.0f && texCoords378[0] < 1.0f && texCoords378[1] > 0.0f && texCoords378[1] < 1.0f;
float sample378 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset378)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset378)[3] > epsilon)) * 0.001237f * float(texInBounds378);
vec2 offset379 = vec2(onePixel[0] * -1.0, onePixel[1] * -1.0);
vec2 texCoords379 =  vec2(texture_uv[0], texture_uv[1]) + offset379;
float texAlpha379 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset379)[3]);
bool texInBounds379 = (abs(int(texCoords379[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords379[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords379[0] > 0.0f && texCoords379[0] < 1.0f && texCoords379[1] > 0.0f && texCoords379[1] < 1.0f;
float sample379 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset379)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset379)[3] > epsilon)) * 0.001239f * float(texInBounds379);
vec2 offset380 = vec2(onePixel[0] * -1.0, onePixel[1] * 0.0);
vec2 texCoords380 =  vec2(texture_uv[0], texture_uv[1]) + offset380;
float texAlpha380 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset380)[3]);
bool texInBounds380 = (abs(int(texCoords380[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords380[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords380[0] > 0.0f && texCoords380[0] < 1.0f && texCoords380[1] > 0.0f && texCoords380[1] < 1.0f;
float sample380 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset380)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset380)[3] > epsilon)) * 0.001239f * float(texInBounds380);
vec2 offset381 = vec2(onePixel[0] * -1.0, onePixel[1] * 1.0);
vec2 texCoords381 =  vec2(texture_uv[0], texture_uv[1]) + offset381;
float texAlpha381 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset381)[3]);
bool texInBounds381 = (abs(int(texCoords381[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords381[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords381[0] > 0.0f && texCoords381[0] < 1.0f && texCoords381[1] > 0.0f && texCoords381[1] < 1.0f;
float sample381 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset381)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset381)[3] > epsilon)) * 0.001239f * float(texInBounds381);
vec2 offset382 = vec2(onePixel[0] * -1.0, onePixel[1] * 2.0);
vec2 texCoords382 =  vec2(texture_uv[0], texture_uv[1]) + offset382;
float texAlpha382 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset382)[3]);
bool texInBounds382 = (abs(int(texCoords382[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords382[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords382[0] > 0.0f && texCoords382[0] < 1.0f && texCoords382[1] > 0.0f && texCoords382[1] < 1.0f;
float sample382 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset382)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset382)[3] > epsilon)) * 0.001237f * float(texInBounds382);
vec2 offset383 = vec2(onePixel[0] * -1.0, onePixel[1] * 3.0);
vec2 texCoords383 =  vec2(texture_uv[0], texture_uv[1]) + offset383;
float texAlpha383 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset383)[3]);
bool texInBounds383 = (abs(int(texCoords383[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords383[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords383[0] > 0.0f && texCoords383[0] < 1.0f && texCoords383[1] > 0.0f && texCoords383[1] < 1.0f;
float sample383 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset383)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset383)[3] > epsilon)) * 0.001236f * float(texInBounds383);
vec2 offset384 = vec2(onePixel[0] * -1.0, onePixel[1] * 4.0);
vec2 texCoords384 =  vec2(texture_uv[0], texture_uv[1]) + offset384;
float texAlpha384 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset384)[3]);
bool texInBounds384 = (abs(int(texCoords384[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords384[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords384[0] > 0.0f && texCoords384[0] < 1.0f && texCoords384[1] > 0.0f && texCoords384[1] < 1.0f;
float sample384 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset384)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset384)[3] > epsilon)) * 0.001233f * float(texInBounds384);
vec2 offset385 = vec2(onePixel[0] * -1.0, onePixel[1] * 5.0);
vec2 texCoords385 =  vec2(texture_uv[0], texture_uv[1]) + offset385;
float texAlpha385 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset385)[3]);
bool texInBounds385 = (abs(int(texCoords385[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords385[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords385[0] > 0.0f && texCoords385[0] < 1.0f && texCoords385[1] > 0.0f && texCoords385[1] < 1.0f;
float sample385 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset385)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset385)[3] > epsilon)) * 0.001230f * float(texInBounds385);
vec2 offset386 = vec2(onePixel[0] * -1.0, onePixel[1] * 6.0);
vec2 texCoords386 =  vec2(texture_uv[0], texture_uv[1]) + offset386;
float texAlpha386 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset386)[3]);
bool texInBounds386 = (abs(int(texCoords386[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords386[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords386[0] > 0.0f && texCoords386[0] < 1.0f && texCoords386[1] > 0.0f && texCoords386[1] < 1.0f;
float sample386 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset386)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset386)[3] > epsilon)) * 0.001226f * float(texInBounds386);
vec2 offset387 = vec2(onePixel[0] * -1.0, onePixel[1] * 7.0);
vec2 texCoords387 =  vec2(texture_uv[0], texture_uv[1]) + offset387;
float texAlpha387 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset387)[3]);
bool texInBounds387 = (abs(int(texCoords387[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords387[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords387[0] > 0.0f && texCoords387[0] < 1.0f && texCoords387[1] > 0.0f && texCoords387[1] < 1.0f;
float sample387 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset387)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset387)[3] > epsilon)) * 0.001221f * float(texInBounds387);
vec2 offset388 = vec2(onePixel[0] * -1.0, onePixel[1] * 8.0);
vec2 texCoords388 =  vec2(texture_uv[0], texture_uv[1]) + offset388;
float texAlpha388 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset388)[3]);
bool texInBounds388 = (abs(int(texCoords388[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords388[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords388[0] > 0.0f && texCoords388[0] < 1.0f && texCoords388[1] > 0.0f && texCoords388[1] < 1.0f;
float sample388 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset388)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset388)[3] > epsilon)) * 0.001216f * float(texInBounds388);
vec2 offset389 = vec2(onePixel[0] * -1.0, onePixel[1] * 9.0);
vec2 texCoords389 =  vec2(texture_uv[0], texture_uv[1]) + offset389;
float texAlpha389 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset389)[3]);
bool texInBounds389 = (abs(int(texCoords389[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords389[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords389[0] > 0.0f && texCoords389[0] < 1.0f && texCoords389[1] > 0.0f && texCoords389[1] < 1.0f;
float sample389 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset389)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset389)[3] > epsilon)) * 0.001209f * float(texInBounds389);
vec2 offset390 = vec2(onePixel[0] * -1.0, onePixel[1] * 10.0);
vec2 texCoords390 =  vec2(texture_uv[0], texture_uv[1]) + offset390;
float texAlpha390 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset390)[3]);
bool texInBounds390 = (abs(int(texCoords390[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords390[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords390[0] > 0.0f && texCoords390[0] < 1.0f && texCoords390[1] > 0.0f && texCoords390[1] < 1.0f;
float sample390 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset390)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset390)[3] > epsilon)) * 0.001203f * float(texInBounds390);
vec2 offset391 = vec2(onePixel[0] * -1.0, onePixel[1] * 11.0);
vec2 texCoords391 =  vec2(texture_uv[0], texture_uv[1]) + offset391;
float texAlpha391 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset391)[3]);
bool texInBounds391 = (abs(int(texCoords391[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords391[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords391[0] > 0.0f && texCoords391[0] < 1.0f && texCoords391[1] > 0.0f && texCoords391[1] < 1.0f;
float sample391 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset391)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset391)[3] > epsilon)) * 0.001195f * float(texInBounds391);
vec2 offset392 = vec2(onePixel[0] * -1.0, onePixel[1] * 12.0);
vec2 texCoords392 =  vec2(texture_uv[0], texture_uv[1]) + offset392;
float texAlpha392 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset392)[3]);
bool texInBounds392 = (abs(int(texCoords392[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords392[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords392[0] > 0.0f && texCoords392[0] < 1.0f && texCoords392[1] > 0.0f && texCoords392[1] < 1.0f;
float sample392 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset392)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset392)[3] > epsilon)) * 0.001187f * float(texInBounds392);
vec2 offset393 = vec2(onePixel[0] * -1.0, onePixel[1] * 13.0);
vec2 texCoords393 =  vec2(texture_uv[0], texture_uv[1]) + offset393;
float texAlpha393 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset393)[3]);
bool texInBounds393 = (abs(int(texCoords393[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords393[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords393[0] > 0.0f && texCoords393[0] < 1.0f && texCoords393[1] > 0.0f && texCoords393[1] < 1.0f;
float sample393 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset393)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset393)[3] > epsilon)) * 0.001178f * float(texInBounds393);
vec2 offset394 = vec2(onePixel[0] * -1.0, onePixel[1] * 14.0);
vec2 texCoords394 =  vec2(texture_uv[0], texture_uv[1]) + offset394;
float texAlpha394 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset394)[3]);
bool texInBounds394 = (abs(int(texCoords394[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords394[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords394[0] > 0.0f && texCoords394[0] < 1.0f && texCoords394[1] > 0.0f && texCoords394[1] < 1.0f;
float sample394 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset394)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset394)[3] > epsilon)) * 0.001169f * float(texInBounds394);
vec2 offset395 = vec2(onePixel[0] * -1.0, onePixel[1] * 15.0);
vec2 texCoords395 =  vec2(texture_uv[0], texture_uv[1]) + offset395;
float texAlpha395 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset395)[3]);
bool texInBounds395 = (abs(int(texCoords395[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords395[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords395[0] > 0.0f && texCoords395[0] < 1.0f && texCoords395[1] > 0.0f && texCoords395[1] < 1.0f;
float sample395 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset395)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset395)[3] > epsilon)) * 0.001159f * float(texInBounds395);
vec2 offset396 = vec2(onePixel[0] * -1.0, onePixel[1] * 16.0);
vec2 texCoords396 =  vec2(texture_uv[0], texture_uv[1]) + offset396;
float texAlpha396 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset396)[3]);
bool texInBounds396 = (abs(int(texCoords396[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords396[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords396[0] > 0.0f && texCoords396[0] < 1.0f && texCoords396[1] > 0.0f && texCoords396[1] < 1.0f;
float sample396 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset396)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset396)[3] > epsilon)) * 0.001148f * float(texInBounds396);
vec2 offset397 = vec2(onePixel[0] * -1.0, onePixel[1] * 17.0);
vec2 texCoords397 =  vec2(texture_uv[0], texture_uv[1]) + offset397;
float texAlpha397 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset397)[3]);
bool texInBounds397 = (abs(int(texCoords397[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords397[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords397[0] > 0.0f && texCoords397[0] < 1.0f && texCoords397[1] > 0.0f && texCoords397[1] < 1.0f;
float sample397 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset397)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset397)[3] > epsilon)) * 0.001137f * float(texInBounds397);
vec2 offset398 = vec2(onePixel[0] * -1.0, onePixel[1] * 18.0);
vec2 texCoords398 =  vec2(texture_uv[0], texture_uv[1]) + offset398;
float texAlpha398 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset398)[3]);
bool texInBounds398 = (abs(int(texCoords398[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords398[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords398[0] > 0.0f && texCoords398[0] < 1.0f && texCoords398[1] > 0.0f && texCoords398[1] < 1.0f;
float sample398 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset398)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset398)[3] > epsilon)) * 0.001125f * float(texInBounds398);
vec2 offset399 = vec2(onePixel[0] * -1.0, onePixel[1] * 19.0);
vec2 texCoords399 =  vec2(texture_uv[0], texture_uv[1]) + offset399;
float texAlpha399 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset399)[3]);
bool texInBounds399 = (abs(int(texCoords399[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords399[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords399[0] > 0.0f && texCoords399[0] < 1.0f && texCoords399[1] > 0.0f && texCoords399[1] < 1.0f;
float sample399 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset399)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset399)[3] > epsilon)) * 0.001113f * float(texInBounds399);
vec2 offset400 = vec2(onePixel[0] * 0.0, onePixel[1] * -20.0);
vec2 texCoords400 =  vec2(texture_uv[0], texture_uv[1]) + offset400;
float texAlpha400 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset400)[3]);
bool texInBounds400 = (abs(int(texCoords400[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords400[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords400[0] > 0.0f && texCoords400[0] < 1.0f && texCoords400[1] > 0.0f && texCoords400[1] < 1.0f;
float sample400 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset400)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset400)[3] > epsilon)) * 0.001100f * float(texInBounds400);
vec2 offset401 = vec2(onePixel[0] * 0.0, onePixel[1] * -19.0);
vec2 texCoords401 =  vec2(texture_uv[0], texture_uv[1]) + offset401;
float texAlpha401 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset401)[3]);
bool texInBounds401 = (abs(int(texCoords401[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords401[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords401[0] > 0.0f && texCoords401[0] < 1.0f && texCoords401[1] > 0.0f && texCoords401[1] < 1.0f;
float sample401 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset401)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset401)[3] > epsilon)) * 0.001113f * float(texInBounds401);
vec2 offset402 = vec2(onePixel[0] * 0.0, onePixel[1] * -18.0);
vec2 texCoords402 =  vec2(texture_uv[0], texture_uv[1]) + offset402;
float texAlpha402 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset402)[3]);
bool texInBounds402 = (abs(int(texCoords402[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords402[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords402[0] > 0.0f && texCoords402[0] < 1.0f && texCoords402[1] > 0.0f && texCoords402[1] < 1.0f;
float sample402 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset402)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset402)[3] > epsilon)) * 0.001125f * float(texInBounds402);
vec2 offset403 = vec2(onePixel[0] * 0.0, onePixel[1] * -17.0);
vec2 texCoords403 =  vec2(texture_uv[0], texture_uv[1]) + offset403;
float texAlpha403 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset403)[3]);
bool texInBounds403 = (abs(int(texCoords403[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords403[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords403[0] > 0.0f && texCoords403[0] < 1.0f && texCoords403[1] > 0.0f && texCoords403[1] < 1.0f;
float sample403 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset403)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset403)[3] > epsilon)) * 0.001137f * float(texInBounds403);
vec2 offset404 = vec2(onePixel[0] * 0.0, onePixel[1] * -16.0);
vec2 texCoords404 =  vec2(texture_uv[0], texture_uv[1]) + offset404;
float texAlpha404 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset404)[3]);
bool texInBounds404 = (abs(int(texCoords404[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords404[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords404[0] > 0.0f && texCoords404[0] < 1.0f && texCoords404[1] > 0.0f && texCoords404[1] < 1.0f;
float sample404 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset404)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset404)[3] > epsilon)) * 0.001148f * float(texInBounds404);
vec2 offset405 = vec2(onePixel[0] * 0.0, onePixel[1] * -15.0);
vec2 texCoords405 =  vec2(texture_uv[0], texture_uv[1]) + offset405;
float texAlpha405 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset405)[3]);
bool texInBounds405 = (abs(int(texCoords405[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords405[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords405[0] > 0.0f && texCoords405[0] < 1.0f && texCoords405[1] > 0.0f && texCoords405[1] < 1.0f;
float sample405 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset405)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset405)[3] > epsilon)) * 0.001159f * float(texInBounds405);
vec2 offset406 = vec2(onePixel[0] * 0.0, onePixel[1] * -14.0);
vec2 texCoords406 =  vec2(texture_uv[0], texture_uv[1]) + offset406;
float texAlpha406 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset406)[3]);
bool texInBounds406 = (abs(int(texCoords406[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords406[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords406[0] > 0.0f && texCoords406[0] < 1.0f && texCoords406[1] > 0.0f && texCoords406[1] < 1.0f;
float sample406 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset406)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset406)[3] > epsilon)) * 0.001169f * float(texInBounds406);
vec2 offset407 = vec2(onePixel[0] * 0.0, onePixel[1] * -13.0);
vec2 texCoords407 =  vec2(texture_uv[0], texture_uv[1]) + offset407;
float texAlpha407 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset407)[3]);
bool texInBounds407 = (abs(int(texCoords407[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords407[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords407[0] > 0.0f && texCoords407[0] < 1.0f && texCoords407[1] > 0.0f && texCoords407[1] < 1.0f;
float sample407 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset407)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset407)[3] > epsilon)) * 0.001178f * float(texInBounds407);
vec2 offset408 = vec2(onePixel[0] * 0.0, onePixel[1] * -12.0);
vec2 texCoords408 =  vec2(texture_uv[0], texture_uv[1]) + offset408;
float texAlpha408 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset408)[3]);
bool texInBounds408 = (abs(int(texCoords408[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords408[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords408[0] > 0.0f && texCoords408[0] < 1.0f && texCoords408[1] > 0.0f && texCoords408[1] < 1.0f;
float sample408 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset408)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset408)[3] > epsilon)) * 0.001187f * float(texInBounds408);
vec2 offset409 = vec2(onePixel[0] * 0.0, onePixel[1] * -11.0);
vec2 texCoords409 =  vec2(texture_uv[0], texture_uv[1]) + offset409;
float texAlpha409 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset409)[3]);
bool texInBounds409 = (abs(int(texCoords409[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords409[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords409[0] > 0.0f && texCoords409[0] < 1.0f && texCoords409[1] > 0.0f && texCoords409[1] < 1.0f;
float sample409 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset409)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset409)[3] > epsilon)) * 0.001195f * float(texInBounds409);
vec2 offset410 = vec2(onePixel[0] * 0.0, onePixel[1] * -10.0);
vec2 texCoords410 =  vec2(texture_uv[0], texture_uv[1]) + offset410;
float texAlpha410 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset410)[3]);
bool texInBounds410 = (abs(int(texCoords410[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords410[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords410[0] > 0.0f && texCoords410[0] < 1.0f && texCoords410[1] > 0.0f && texCoords410[1] < 1.0f;
float sample410 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset410)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset410)[3] > epsilon)) * 0.001203f * float(texInBounds410);
vec2 offset411 = vec2(onePixel[0] * 0.0, onePixel[1] * -9.0);
vec2 texCoords411 =  vec2(texture_uv[0], texture_uv[1]) + offset411;
float texAlpha411 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset411)[3]);
bool texInBounds411 = (abs(int(texCoords411[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords411[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords411[0] > 0.0f && texCoords411[0] < 1.0f && texCoords411[1] > 0.0f && texCoords411[1] < 1.0f;
float sample411 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset411)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset411)[3] > epsilon)) * 0.001210f * float(texInBounds411);
vec2 offset412 = vec2(onePixel[0] * 0.0, onePixel[1] * -8.0);
vec2 texCoords412 =  vec2(texture_uv[0], texture_uv[1]) + offset412;
float texAlpha412 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset412)[3]);
bool texInBounds412 = (abs(int(texCoords412[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords412[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords412[0] > 0.0f && texCoords412[0] < 1.0f && texCoords412[1] > 0.0f && texCoords412[1] < 1.0f;
float sample412 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset412)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset412)[3] > epsilon)) * 0.001216f * float(texInBounds412);
vec2 offset413 = vec2(onePixel[0] * 0.0, onePixel[1] * -7.0);
vec2 texCoords413 =  vec2(texture_uv[0], texture_uv[1]) + offset413;
float texAlpha413 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset413)[3]);
bool texInBounds413 = (abs(int(texCoords413[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords413[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords413[0] > 0.0f && texCoords413[0] < 1.0f && texCoords413[1] > 0.0f && texCoords413[1] < 1.0f;
float sample413 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset413)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset413)[3] > epsilon)) * 0.001221f * float(texInBounds413);
vec2 offset414 = vec2(onePixel[0] * 0.0, onePixel[1] * -6.0);
vec2 texCoords414 =  vec2(texture_uv[0], texture_uv[1]) + offset414;
float texAlpha414 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset414)[3]);
bool texInBounds414 = (abs(int(texCoords414[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords414[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords414[0] > 0.0f && texCoords414[0] < 1.0f && texCoords414[1] > 0.0f && texCoords414[1] < 1.0f;
float sample414 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset414)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset414)[3] > epsilon)) * 0.001226f * float(texInBounds414);
vec2 offset415 = vec2(onePixel[0] * 0.0, onePixel[1] * -5.0);
vec2 texCoords415 =  vec2(texture_uv[0], texture_uv[1]) + offset415;
float texAlpha415 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset415)[3]);
bool texInBounds415 = (abs(int(texCoords415[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords415[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords415[0] > 0.0f && texCoords415[0] < 1.0f && texCoords415[1] > 0.0f && texCoords415[1] < 1.0f;
float sample415 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset415)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset415)[3] > epsilon)) * 0.001230f * float(texInBounds415);
vec2 offset416 = vec2(onePixel[0] * 0.0, onePixel[1] * -4.0);
vec2 texCoords416 =  vec2(texture_uv[0], texture_uv[1]) + offset416;
float texAlpha416 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset416)[3]);
bool texInBounds416 = (abs(int(texCoords416[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords416[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords416[0] > 0.0f && texCoords416[0] < 1.0f && texCoords416[1] > 0.0f && texCoords416[1] < 1.0f;
float sample416 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset416)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset416)[3] > epsilon)) * 0.001233f * float(texInBounds416);
vec2 offset417 = vec2(onePixel[0] * 0.0, onePixel[1] * -3.0);
vec2 texCoords417 =  vec2(texture_uv[0], texture_uv[1]) + offset417;
float texAlpha417 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset417)[3]);
bool texInBounds417 = (abs(int(texCoords417[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords417[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords417[0] > 0.0f && texCoords417[0] < 1.0f && texCoords417[1] > 0.0f && texCoords417[1] < 1.0f;
float sample417 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset417)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset417)[3] > epsilon)) * 0.001236f * float(texInBounds417);
vec2 offset418 = vec2(onePixel[0] * 0.0, onePixel[1] * -2.0);
vec2 texCoords418 =  vec2(texture_uv[0], texture_uv[1]) + offset418;
float texAlpha418 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset418)[3]);
bool texInBounds418 = (abs(int(texCoords418[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords418[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords418[0] > 0.0f && texCoords418[0] < 1.0f && texCoords418[1] > 0.0f && texCoords418[1] < 1.0f;
float sample418 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset418)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset418)[3] > epsilon)) * 0.001238f * float(texInBounds418);
vec2 offset419 = vec2(onePixel[0] * 0.0, onePixel[1] * -1.0);
vec2 texCoords419 =  vec2(texture_uv[0], texture_uv[1]) + offset419;
float texAlpha419 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset419)[3]);
bool texInBounds419 = (abs(int(texCoords419[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords419[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords419[0] > 0.0f && texCoords419[0] < 1.0f && texCoords419[1] > 0.0f && texCoords419[1] < 1.0f;
float sample419 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset419)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset419)[3] > epsilon)) * 0.001239f * float(texInBounds419);
vec2 offset420 = vec2(onePixel[0] * 0.0, onePixel[1] * 0.0);
vec2 texCoords420 =  vec2(texture_uv[0], texture_uv[1]) + offset420;
float texAlpha420 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset420)[3]);
bool texInBounds420 = (abs(int(texCoords420[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords420[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords420[0] > 0.0f && texCoords420[0] < 1.0f && texCoords420[1] > 0.0f && texCoords420[1] < 1.0f;
float sample420 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset420)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset420)[3] > epsilon)) * 0.001239f * float(texInBounds420);
vec2 offset421 = vec2(onePixel[0] * 0.0, onePixel[1] * 1.0);
vec2 texCoords421 =  vec2(texture_uv[0], texture_uv[1]) + offset421;
float texAlpha421 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset421)[3]);
bool texInBounds421 = (abs(int(texCoords421[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords421[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords421[0] > 0.0f && texCoords421[0] < 1.0f && texCoords421[1] > 0.0f && texCoords421[1] < 1.0f;
float sample421 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset421)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset421)[3] > epsilon)) * 0.001239f * float(texInBounds421);
vec2 offset422 = vec2(onePixel[0] * 0.0, onePixel[1] * 2.0);
vec2 texCoords422 =  vec2(texture_uv[0], texture_uv[1]) + offset422;
float texAlpha422 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset422)[3]);
bool texInBounds422 = (abs(int(texCoords422[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords422[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords422[0] > 0.0f && texCoords422[0] < 1.0f && texCoords422[1] > 0.0f && texCoords422[1] < 1.0f;
float sample422 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset422)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset422)[3] > epsilon)) * 0.001238f * float(texInBounds422);
vec2 offset423 = vec2(onePixel[0] * 0.0, onePixel[1] * 3.0);
vec2 texCoords423 =  vec2(texture_uv[0], texture_uv[1]) + offset423;
float texAlpha423 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset423)[3]);
bool texInBounds423 = (abs(int(texCoords423[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords423[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords423[0] > 0.0f && texCoords423[0] < 1.0f && texCoords423[1] > 0.0f && texCoords423[1] < 1.0f;
float sample423 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset423)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset423)[3] > epsilon)) * 0.001236f * float(texInBounds423);
vec2 offset424 = vec2(onePixel[0] * 0.0, onePixel[1] * 4.0);
vec2 texCoords424 =  vec2(texture_uv[0], texture_uv[1]) + offset424;
float texAlpha424 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset424)[3]);
bool texInBounds424 = (abs(int(texCoords424[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords424[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords424[0] > 0.0f && texCoords424[0] < 1.0f && texCoords424[1] > 0.0f && texCoords424[1] < 1.0f;
float sample424 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset424)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset424)[3] > epsilon)) * 0.001233f * float(texInBounds424);
vec2 offset425 = vec2(onePixel[0] * 0.0, onePixel[1] * 5.0);
vec2 texCoords425 =  vec2(texture_uv[0], texture_uv[1]) + offset425;
float texAlpha425 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset425)[3]);
bool texInBounds425 = (abs(int(texCoords425[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords425[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords425[0] > 0.0f && texCoords425[0] < 1.0f && texCoords425[1] > 0.0f && texCoords425[1] < 1.0f;
float sample425 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset425)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset425)[3] > epsilon)) * 0.001230f * float(texInBounds425);
vec2 offset426 = vec2(onePixel[0] * 0.0, onePixel[1] * 6.0);
vec2 texCoords426 =  vec2(texture_uv[0], texture_uv[1]) + offset426;
float texAlpha426 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset426)[3]);
bool texInBounds426 = (abs(int(texCoords426[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords426[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords426[0] > 0.0f && texCoords426[0] < 1.0f && texCoords426[1] > 0.0f && texCoords426[1] < 1.0f;
float sample426 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset426)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset426)[3] > epsilon)) * 0.001226f * float(texInBounds426);
vec2 offset427 = vec2(onePixel[0] * 0.0, onePixel[1] * 7.0);
vec2 texCoords427 =  vec2(texture_uv[0], texture_uv[1]) + offset427;
float texAlpha427 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset427)[3]);
bool texInBounds427 = (abs(int(texCoords427[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords427[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords427[0] > 0.0f && texCoords427[0] < 1.0f && texCoords427[1] > 0.0f && texCoords427[1] < 1.0f;
float sample427 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset427)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset427)[3] > epsilon)) * 0.001221f * float(texInBounds427);
vec2 offset428 = vec2(onePixel[0] * 0.0, onePixel[1] * 8.0);
vec2 texCoords428 =  vec2(texture_uv[0], texture_uv[1]) + offset428;
float texAlpha428 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset428)[3]);
bool texInBounds428 = (abs(int(texCoords428[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords428[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords428[0] > 0.0f && texCoords428[0] < 1.0f && texCoords428[1] > 0.0f && texCoords428[1] < 1.0f;
float sample428 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset428)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset428)[3] > epsilon)) * 0.001216f * float(texInBounds428);
vec2 offset429 = vec2(onePixel[0] * 0.0, onePixel[1] * 9.0);
vec2 texCoords429 =  vec2(texture_uv[0], texture_uv[1]) + offset429;
float texAlpha429 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset429)[3]);
bool texInBounds429 = (abs(int(texCoords429[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords429[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords429[0] > 0.0f && texCoords429[0] < 1.0f && texCoords429[1] > 0.0f && texCoords429[1] < 1.0f;
float sample429 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset429)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset429)[3] > epsilon)) * 0.001210f * float(texInBounds429);
vec2 offset430 = vec2(onePixel[0] * 0.0, onePixel[1] * 10.0);
vec2 texCoords430 =  vec2(texture_uv[0], texture_uv[1]) + offset430;
float texAlpha430 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset430)[3]);
bool texInBounds430 = (abs(int(texCoords430[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords430[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords430[0] > 0.0f && texCoords430[0] < 1.0f && texCoords430[1] > 0.0f && texCoords430[1] < 1.0f;
float sample430 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset430)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset430)[3] > epsilon)) * 0.001203f * float(texInBounds430);
vec2 offset431 = vec2(onePixel[0] * 0.0, onePixel[1] * 11.0);
vec2 texCoords431 =  vec2(texture_uv[0], texture_uv[1]) + offset431;
float texAlpha431 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset431)[3]);
bool texInBounds431 = (abs(int(texCoords431[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords431[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords431[0] > 0.0f && texCoords431[0] < 1.0f && texCoords431[1] > 0.0f && texCoords431[1] < 1.0f;
float sample431 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset431)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset431)[3] > epsilon)) * 0.001195f * float(texInBounds431);
vec2 offset432 = vec2(onePixel[0] * 0.0, onePixel[1] * 12.0);
vec2 texCoords432 =  vec2(texture_uv[0], texture_uv[1]) + offset432;
float texAlpha432 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset432)[3]);
bool texInBounds432 = (abs(int(texCoords432[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords432[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords432[0] > 0.0f && texCoords432[0] < 1.0f && texCoords432[1] > 0.0f && texCoords432[1] < 1.0f;
float sample432 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset432)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset432)[3] > epsilon)) * 0.001187f * float(texInBounds432);
vec2 offset433 = vec2(onePixel[0] * 0.0, onePixel[1] * 13.0);
vec2 texCoords433 =  vec2(texture_uv[0], texture_uv[1]) + offset433;
float texAlpha433 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset433)[3]);
bool texInBounds433 = (abs(int(texCoords433[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords433[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords433[0] > 0.0f && texCoords433[0] < 1.0f && texCoords433[1] > 0.0f && texCoords433[1] < 1.0f;
float sample433 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset433)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset433)[3] > epsilon)) * 0.001178f * float(texInBounds433);
vec2 offset434 = vec2(onePixel[0] * 0.0, onePixel[1] * 14.0);
vec2 texCoords434 =  vec2(texture_uv[0], texture_uv[1]) + offset434;
float texAlpha434 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset434)[3]);
bool texInBounds434 = (abs(int(texCoords434[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords434[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords434[0] > 0.0f && texCoords434[0] < 1.0f && texCoords434[1] > 0.0f && texCoords434[1] < 1.0f;
float sample434 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset434)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset434)[3] > epsilon)) * 0.001169f * float(texInBounds434);
vec2 offset435 = vec2(onePixel[0] * 0.0, onePixel[1] * 15.0);
vec2 texCoords435 =  vec2(texture_uv[0], texture_uv[1]) + offset435;
float texAlpha435 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset435)[3]);
bool texInBounds435 = (abs(int(texCoords435[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords435[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords435[0] > 0.0f && texCoords435[0] < 1.0f && texCoords435[1] > 0.0f && texCoords435[1] < 1.0f;
float sample435 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset435)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset435)[3] > epsilon)) * 0.001159f * float(texInBounds435);
vec2 offset436 = vec2(onePixel[0] * 0.0, onePixel[1] * 16.0);
vec2 texCoords436 =  vec2(texture_uv[0], texture_uv[1]) + offset436;
float texAlpha436 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset436)[3]);
bool texInBounds436 = (abs(int(texCoords436[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords436[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords436[0] > 0.0f && texCoords436[0] < 1.0f && texCoords436[1] > 0.0f && texCoords436[1] < 1.0f;
float sample436 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset436)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset436)[3] > epsilon)) * 0.001148f * float(texInBounds436);
vec2 offset437 = vec2(onePixel[0] * 0.0, onePixel[1] * 17.0);
vec2 texCoords437 =  vec2(texture_uv[0], texture_uv[1]) + offset437;
float texAlpha437 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset437)[3]);
bool texInBounds437 = (abs(int(texCoords437[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords437[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords437[0] > 0.0f && texCoords437[0] < 1.0f && texCoords437[1] > 0.0f && texCoords437[1] < 1.0f;
float sample437 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset437)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset437)[3] > epsilon)) * 0.001137f * float(texInBounds437);
vec2 offset438 = vec2(onePixel[0] * 0.0, onePixel[1] * 18.0);
vec2 texCoords438 =  vec2(texture_uv[0], texture_uv[1]) + offset438;
float texAlpha438 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset438)[3]);
bool texInBounds438 = (abs(int(texCoords438[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords438[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords438[0] > 0.0f && texCoords438[0] < 1.0f && texCoords438[1] > 0.0f && texCoords438[1] < 1.0f;
float sample438 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset438)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset438)[3] > epsilon)) * 0.001125f * float(texInBounds438);
vec2 offset439 = vec2(onePixel[0] * 0.0, onePixel[1] * 19.0);
vec2 texCoords439 =  vec2(texture_uv[0], texture_uv[1]) + offset439;
float texAlpha439 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset439)[3]);
bool texInBounds439 = (abs(int(texCoords439[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords439[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords439[0] > 0.0f && texCoords439[0] < 1.0f && texCoords439[1] > 0.0f && texCoords439[1] < 1.0f;
float sample439 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset439)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset439)[3] > epsilon)) * 0.001113f * float(texInBounds439);
vec2 offset440 = vec2(onePixel[0] * 0.0, onePixel[1] * 20.0);
vec2 texCoords440 =  vec2(texture_uv[0], texture_uv[1]) + offset440;
float texAlpha440 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset440)[3]);
bool texInBounds440 = (abs(int(texCoords440[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords440[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords440[0] > 0.0f && texCoords440[0] < 1.0f && texCoords440[1] > 0.0f && texCoords440[1] < 1.0f;
float sample440 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset440)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset440)[3] > epsilon)) * 0.001100f * float(texInBounds440);
vec2 offset441 = vec2(onePixel[0] * 1.0, onePixel[1] * -19.0);
vec2 texCoords441 =  vec2(texture_uv[0], texture_uv[1]) + offset441;
float texAlpha441 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset441)[3]);
bool texInBounds441 = (abs(int(texCoords441[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords441[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords441[0] > 0.0f && texCoords441[0] < 1.0f && texCoords441[1] > 0.0f && texCoords441[1] < 1.0f;
float sample441 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset441)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset441)[3] > epsilon)) * 0.001113f * float(texInBounds441);
vec2 offset442 = vec2(onePixel[0] * 1.0, onePixel[1] * -18.0);
vec2 texCoords442 =  vec2(texture_uv[0], texture_uv[1]) + offset442;
float texAlpha442 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset442)[3]);
bool texInBounds442 = (abs(int(texCoords442[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords442[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords442[0] > 0.0f && texCoords442[0] < 1.0f && texCoords442[1] > 0.0f && texCoords442[1] < 1.0f;
float sample442 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset442)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset442)[3] > epsilon)) * 0.001125f * float(texInBounds442);
vec2 offset443 = vec2(onePixel[0] * 1.0, onePixel[1] * -17.0);
vec2 texCoords443 =  vec2(texture_uv[0], texture_uv[1]) + offset443;
float texAlpha443 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset443)[3]);
bool texInBounds443 = (abs(int(texCoords443[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords443[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords443[0] > 0.0f && texCoords443[0] < 1.0f && texCoords443[1] > 0.0f && texCoords443[1] < 1.0f;
float sample443 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset443)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset443)[3] > epsilon)) * 0.001137f * float(texInBounds443);
vec2 offset444 = vec2(onePixel[0] * 1.0, onePixel[1] * -16.0);
vec2 texCoords444 =  vec2(texture_uv[0], texture_uv[1]) + offset444;
float texAlpha444 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset444)[3]);
bool texInBounds444 = (abs(int(texCoords444[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords444[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords444[0] > 0.0f && texCoords444[0] < 1.0f && texCoords444[1] > 0.0f && texCoords444[1] < 1.0f;
float sample444 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset444)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset444)[3] > epsilon)) * 0.001148f * float(texInBounds444);
vec2 offset445 = vec2(onePixel[0] * 1.0, onePixel[1] * -15.0);
vec2 texCoords445 =  vec2(texture_uv[0], texture_uv[1]) + offset445;
float texAlpha445 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset445)[3]);
bool texInBounds445 = (abs(int(texCoords445[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords445[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords445[0] > 0.0f && texCoords445[0] < 1.0f && texCoords445[1] > 0.0f && texCoords445[1] < 1.0f;
float sample445 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset445)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset445)[3] > epsilon)) * 0.001159f * float(texInBounds445);
vec2 offset446 = vec2(onePixel[0] * 1.0, onePixel[1] * -14.0);
vec2 texCoords446 =  vec2(texture_uv[0], texture_uv[1]) + offset446;
float texAlpha446 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset446)[3]);
bool texInBounds446 = (abs(int(texCoords446[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords446[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords446[0] > 0.0f && texCoords446[0] < 1.0f && texCoords446[1] > 0.0f && texCoords446[1] < 1.0f;
float sample446 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset446)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset446)[3] > epsilon)) * 0.001169f * float(texInBounds446);
vec2 offset447 = vec2(onePixel[0] * 1.0, onePixel[1] * -13.0);
vec2 texCoords447 =  vec2(texture_uv[0], texture_uv[1]) + offset447;
float texAlpha447 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset447)[3]);
bool texInBounds447 = (abs(int(texCoords447[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords447[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords447[0] > 0.0f && texCoords447[0] < 1.0f && texCoords447[1] > 0.0f && texCoords447[1] < 1.0f;
float sample447 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset447)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset447)[3] > epsilon)) * 0.001178f * float(texInBounds447);
vec2 offset448 = vec2(onePixel[0] * 1.0, onePixel[1] * -12.0);
vec2 texCoords448 =  vec2(texture_uv[0], texture_uv[1]) + offset448;
float texAlpha448 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset448)[3]);
bool texInBounds448 = (abs(int(texCoords448[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords448[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords448[0] > 0.0f && texCoords448[0] < 1.0f && texCoords448[1] > 0.0f && texCoords448[1] < 1.0f;
float sample448 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset448)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset448)[3] > epsilon)) * 0.001187f * float(texInBounds448);
vec2 offset449 = vec2(onePixel[0] * 1.0, onePixel[1] * -11.0);
vec2 texCoords449 =  vec2(texture_uv[0], texture_uv[1]) + offset449;
float texAlpha449 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset449)[3]);
bool texInBounds449 = (abs(int(texCoords449[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords449[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords449[0] > 0.0f && texCoords449[0] < 1.0f && texCoords449[1] > 0.0f && texCoords449[1] < 1.0f;
float sample449 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset449)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset449)[3] > epsilon)) * 0.001195f * float(texInBounds449);
vec2 offset450 = vec2(onePixel[0] * 1.0, onePixel[1] * -10.0);
vec2 texCoords450 =  vec2(texture_uv[0], texture_uv[1]) + offset450;
float texAlpha450 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset450)[3]);
bool texInBounds450 = (abs(int(texCoords450[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords450[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords450[0] > 0.0f && texCoords450[0] < 1.0f && texCoords450[1] > 0.0f && texCoords450[1] < 1.0f;
float sample450 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset450)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset450)[3] > epsilon)) * 0.001203f * float(texInBounds450);
vec2 offset451 = vec2(onePixel[0] * 1.0, onePixel[1] * -9.0);
vec2 texCoords451 =  vec2(texture_uv[0], texture_uv[1]) + offset451;
float texAlpha451 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset451)[3]);
bool texInBounds451 = (abs(int(texCoords451[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords451[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords451[0] > 0.0f && texCoords451[0] < 1.0f && texCoords451[1] > 0.0f && texCoords451[1] < 1.0f;
float sample451 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset451)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset451)[3] > epsilon)) * 0.001209f * float(texInBounds451);
vec2 offset452 = vec2(onePixel[0] * 1.0, onePixel[1] * -8.0);
vec2 texCoords452 =  vec2(texture_uv[0], texture_uv[1]) + offset452;
float texAlpha452 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset452)[3]);
bool texInBounds452 = (abs(int(texCoords452[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords452[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords452[0] > 0.0f && texCoords452[0] < 1.0f && texCoords452[1] > 0.0f && texCoords452[1] < 1.0f;
float sample452 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset452)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset452)[3] > epsilon)) * 0.001216f * float(texInBounds452);
vec2 offset453 = vec2(onePixel[0] * 1.0, onePixel[1] * -7.0);
vec2 texCoords453 =  vec2(texture_uv[0], texture_uv[1]) + offset453;
float texAlpha453 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset453)[3]);
bool texInBounds453 = (abs(int(texCoords453[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords453[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords453[0] > 0.0f && texCoords453[0] < 1.0f && texCoords453[1] > 0.0f && texCoords453[1] < 1.0f;
float sample453 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset453)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset453)[3] > epsilon)) * 0.001221f * float(texInBounds453);
vec2 offset454 = vec2(onePixel[0] * 1.0, onePixel[1] * -6.0);
vec2 texCoords454 =  vec2(texture_uv[0], texture_uv[1]) + offset454;
float texAlpha454 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset454)[3]);
bool texInBounds454 = (abs(int(texCoords454[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords454[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords454[0] > 0.0f && texCoords454[0] < 1.0f && texCoords454[1] > 0.0f && texCoords454[1] < 1.0f;
float sample454 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset454)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset454)[3] > epsilon)) * 0.001226f * float(texInBounds454);
vec2 offset455 = vec2(onePixel[0] * 1.0, onePixel[1] * -5.0);
vec2 texCoords455 =  vec2(texture_uv[0], texture_uv[1]) + offset455;
float texAlpha455 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset455)[3]);
bool texInBounds455 = (abs(int(texCoords455[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords455[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords455[0] > 0.0f && texCoords455[0] < 1.0f && texCoords455[1] > 0.0f && texCoords455[1] < 1.0f;
float sample455 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset455)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset455)[3] > epsilon)) * 0.001230f * float(texInBounds455);
vec2 offset456 = vec2(onePixel[0] * 1.0, onePixel[1] * -4.0);
vec2 texCoords456 =  vec2(texture_uv[0], texture_uv[1]) + offset456;
float texAlpha456 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset456)[3]);
bool texInBounds456 = (abs(int(texCoords456[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords456[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords456[0] > 0.0f && texCoords456[0] < 1.0f && texCoords456[1] > 0.0f && texCoords456[1] < 1.0f;
float sample456 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset456)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset456)[3] > epsilon)) * 0.001233f * float(texInBounds456);
vec2 offset457 = vec2(onePixel[0] * 1.0, onePixel[1] * -3.0);
vec2 texCoords457 =  vec2(texture_uv[0], texture_uv[1]) + offset457;
float texAlpha457 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset457)[3]);
bool texInBounds457 = (abs(int(texCoords457[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords457[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords457[0] > 0.0f && texCoords457[0] < 1.0f && texCoords457[1] > 0.0f && texCoords457[1] < 1.0f;
float sample457 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset457)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset457)[3] > epsilon)) * 0.001236f * float(texInBounds457);
vec2 offset458 = vec2(onePixel[0] * 1.0, onePixel[1] * -2.0);
vec2 texCoords458 =  vec2(texture_uv[0], texture_uv[1]) + offset458;
float texAlpha458 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset458)[3]);
bool texInBounds458 = (abs(int(texCoords458[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords458[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords458[0] > 0.0f && texCoords458[0] < 1.0f && texCoords458[1] > 0.0f && texCoords458[1] < 1.0f;
float sample458 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset458)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset458)[3] > epsilon)) * 0.001237f * float(texInBounds458);
vec2 offset459 = vec2(onePixel[0] * 1.0, onePixel[1] * -1.0);
vec2 texCoords459 =  vec2(texture_uv[0], texture_uv[1]) + offset459;
float texAlpha459 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset459)[3]);
bool texInBounds459 = (abs(int(texCoords459[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords459[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords459[0] > 0.0f && texCoords459[0] < 1.0f && texCoords459[1] > 0.0f && texCoords459[1] < 1.0f;
float sample459 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset459)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset459)[3] > epsilon)) * 0.001239f * float(texInBounds459);
vec2 offset460 = vec2(onePixel[0] * 1.0, onePixel[1] * 0.0);
vec2 texCoords460 =  vec2(texture_uv[0], texture_uv[1]) + offset460;
float texAlpha460 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset460)[3]);
bool texInBounds460 = (abs(int(texCoords460[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords460[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords460[0] > 0.0f && texCoords460[0] < 1.0f && texCoords460[1] > 0.0f && texCoords460[1] < 1.0f;
float sample460 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset460)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset460)[3] > epsilon)) * 0.001239f * float(texInBounds460);
vec2 offset461 = vec2(onePixel[0] * 1.0, onePixel[1] * 1.0);
vec2 texCoords461 =  vec2(texture_uv[0], texture_uv[1]) + offset461;
float texAlpha461 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset461)[3]);
bool texInBounds461 = (abs(int(texCoords461[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords461[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords461[0] > 0.0f && texCoords461[0] < 1.0f && texCoords461[1] > 0.0f && texCoords461[1] < 1.0f;
float sample461 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset461)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset461)[3] > epsilon)) * 0.001239f * float(texInBounds461);
vec2 offset462 = vec2(onePixel[0] * 1.0, onePixel[1] * 2.0);
vec2 texCoords462 =  vec2(texture_uv[0], texture_uv[1]) + offset462;
float texAlpha462 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset462)[3]);
bool texInBounds462 = (abs(int(texCoords462[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords462[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords462[0] > 0.0f && texCoords462[0] < 1.0f && texCoords462[1] > 0.0f && texCoords462[1] < 1.0f;
float sample462 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset462)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset462)[3] > epsilon)) * 0.001237f * float(texInBounds462);
vec2 offset463 = vec2(onePixel[0] * 1.0, onePixel[1] * 3.0);
vec2 texCoords463 =  vec2(texture_uv[0], texture_uv[1]) + offset463;
float texAlpha463 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset463)[3]);
bool texInBounds463 = (abs(int(texCoords463[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords463[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords463[0] > 0.0f && texCoords463[0] < 1.0f && texCoords463[1] > 0.0f && texCoords463[1] < 1.0f;
float sample463 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset463)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset463)[3] > epsilon)) * 0.001236f * float(texInBounds463);
vec2 offset464 = vec2(onePixel[0] * 1.0, onePixel[1] * 4.0);
vec2 texCoords464 =  vec2(texture_uv[0], texture_uv[1]) + offset464;
float texAlpha464 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset464)[3]);
bool texInBounds464 = (abs(int(texCoords464[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords464[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords464[0] > 0.0f && texCoords464[0] < 1.0f && texCoords464[1] > 0.0f && texCoords464[1] < 1.0f;
float sample464 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset464)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset464)[3] > epsilon)) * 0.001233f * float(texInBounds464);
vec2 offset465 = vec2(onePixel[0] * 1.0, onePixel[1] * 5.0);
vec2 texCoords465 =  vec2(texture_uv[0], texture_uv[1]) + offset465;
float texAlpha465 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset465)[3]);
bool texInBounds465 = (abs(int(texCoords465[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords465[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords465[0] > 0.0f && texCoords465[0] < 1.0f && texCoords465[1] > 0.0f && texCoords465[1] < 1.0f;
float sample465 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset465)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset465)[3] > epsilon)) * 0.001230f * float(texInBounds465);
vec2 offset466 = vec2(onePixel[0] * 1.0, onePixel[1] * 6.0);
vec2 texCoords466 =  vec2(texture_uv[0], texture_uv[1]) + offset466;
float texAlpha466 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset466)[3]);
bool texInBounds466 = (abs(int(texCoords466[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords466[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords466[0] > 0.0f && texCoords466[0] < 1.0f && texCoords466[1] > 0.0f && texCoords466[1] < 1.0f;
float sample466 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset466)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset466)[3] > epsilon)) * 0.001226f * float(texInBounds466);
vec2 offset467 = vec2(onePixel[0] * 1.0, onePixel[1] * 7.0);
vec2 texCoords467 =  vec2(texture_uv[0], texture_uv[1]) + offset467;
float texAlpha467 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset467)[3]);
bool texInBounds467 = (abs(int(texCoords467[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords467[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords467[0] > 0.0f && texCoords467[0] < 1.0f && texCoords467[1] > 0.0f && texCoords467[1] < 1.0f;
float sample467 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset467)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset467)[3] > epsilon)) * 0.001221f * float(texInBounds467);
vec2 offset468 = vec2(onePixel[0] * 1.0, onePixel[1] * 8.0);
vec2 texCoords468 =  vec2(texture_uv[0], texture_uv[1]) + offset468;
float texAlpha468 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset468)[3]);
bool texInBounds468 = (abs(int(texCoords468[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords468[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords468[0] > 0.0f && texCoords468[0] < 1.0f && texCoords468[1] > 0.0f && texCoords468[1] < 1.0f;
float sample468 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset468)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset468)[3] > epsilon)) * 0.001216f * float(texInBounds468);
vec2 offset469 = vec2(onePixel[0] * 1.0, onePixel[1] * 9.0);
vec2 texCoords469 =  vec2(texture_uv[0], texture_uv[1]) + offset469;
float texAlpha469 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset469)[3]);
bool texInBounds469 = (abs(int(texCoords469[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords469[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords469[0] > 0.0f && texCoords469[0] < 1.0f && texCoords469[1] > 0.0f && texCoords469[1] < 1.0f;
float sample469 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset469)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset469)[3] > epsilon)) * 0.001209f * float(texInBounds469);
vec2 offset470 = vec2(onePixel[0] * 1.0, onePixel[1] * 10.0);
vec2 texCoords470 =  vec2(texture_uv[0], texture_uv[1]) + offset470;
float texAlpha470 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset470)[3]);
bool texInBounds470 = (abs(int(texCoords470[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords470[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords470[0] > 0.0f && texCoords470[0] < 1.0f && texCoords470[1] > 0.0f && texCoords470[1] < 1.0f;
float sample470 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset470)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset470)[3] > epsilon)) * 0.001203f * float(texInBounds470);
vec2 offset471 = vec2(onePixel[0] * 1.0, onePixel[1] * 11.0);
vec2 texCoords471 =  vec2(texture_uv[0], texture_uv[1]) + offset471;
float texAlpha471 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset471)[3]);
bool texInBounds471 = (abs(int(texCoords471[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords471[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords471[0] > 0.0f && texCoords471[0] < 1.0f && texCoords471[1] > 0.0f && texCoords471[1] < 1.0f;
float sample471 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset471)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset471)[3] > epsilon)) * 0.001195f * float(texInBounds471);
vec2 offset472 = vec2(onePixel[0] * 1.0, onePixel[1] * 12.0);
vec2 texCoords472 =  vec2(texture_uv[0], texture_uv[1]) + offset472;
float texAlpha472 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset472)[3]);
bool texInBounds472 = (abs(int(texCoords472[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords472[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords472[0] > 0.0f && texCoords472[0] < 1.0f && texCoords472[1] > 0.0f && texCoords472[1] < 1.0f;
float sample472 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset472)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset472)[3] > epsilon)) * 0.001187f * float(texInBounds472);
vec2 offset473 = vec2(onePixel[0] * 1.0, onePixel[1] * 13.0);
vec2 texCoords473 =  vec2(texture_uv[0], texture_uv[1]) + offset473;
float texAlpha473 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset473)[3]);
bool texInBounds473 = (abs(int(texCoords473[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords473[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords473[0] > 0.0f && texCoords473[0] < 1.0f && texCoords473[1] > 0.0f && texCoords473[1] < 1.0f;
float sample473 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset473)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset473)[3] > epsilon)) * 0.001178f * float(texInBounds473);
vec2 offset474 = vec2(onePixel[0] * 1.0, onePixel[1] * 14.0);
vec2 texCoords474 =  vec2(texture_uv[0], texture_uv[1]) + offset474;
float texAlpha474 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset474)[3]);
bool texInBounds474 = (abs(int(texCoords474[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords474[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords474[0] > 0.0f && texCoords474[0] < 1.0f && texCoords474[1] > 0.0f && texCoords474[1] < 1.0f;
float sample474 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset474)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset474)[3] > epsilon)) * 0.001169f * float(texInBounds474);
vec2 offset475 = vec2(onePixel[0] * 1.0, onePixel[1] * 15.0);
vec2 texCoords475 =  vec2(texture_uv[0], texture_uv[1]) + offset475;
float texAlpha475 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset475)[3]);
bool texInBounds475 = (abs(int(texCoords475[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords475[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords475[0] > 0.0f && texCoords475[0] < 1.0f && texCoords475[1] > 0.0f && texCoords475[1] < 1.0f;
float sample475 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset475)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset475)[3] > epsilon)) * 0.001159f * float(texInBounds475);
vec2 offset476 = vec2(onePixel[0] * 1.0, onePixel[1] * 16.0);
vec2 texCoords476 =  vec2(texture_uv[0], texture_uv[1]) + offset476;
float texAlpha476 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset476)[3]);
bool texInBounds476 = (abs(int(texCoords476[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords476[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords476[0] > 0.0f && texCoords476[0] < 1.0f && texCoords476[1] > 0.0f && texCoords476[1] < 1.0f;
float sample476 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset476)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset476)[3] > epsilon)) * 0.001148f * float(texInBounds476);
vec2 offset477 = vec2(onePixel[0] * 1.0, onePixel[1] * 17.0);
vec2 texCoords477 =  vec2(texture_uv[0], texture_uv[1]) + offset477;
float texAlpha477 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset477)[3]);
bool texInBounds477 = (abs(int(texCoords477[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords477[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords477[0] > 0.0f && texCoords477[0] < 1.0f && texCoords477[1] > 0.0f && texCoords477[1] < 1.0f;
float sample477 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset477)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset477)[3] > epsilon)) * 0.001137f * float(texInBounds477);
vec2 offset478 = vec2(onePixel[0] * 1.0, onePixel[1] * 18.0);
vec2 texCoords478 =  vec2(texture_uv[0], texture_uv[1]) + offset478;
float texAlpha478 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset478)[3]);
bool texInBounds478 = (abs(int(texCoords478[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords478[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords478[0] > 0.0f && texCoords478[0] < 1.0f && texCoords478[1] > 0.0f && texCoords478[1] < 1.0f;
float sample478 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset478)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset478)[3] > epsilon)) * 0.001125f * float(texInBounds478);
vec2 offset479 = vec2(onePixel[0] * 1.0, onePixel[1] * 19.0);
vec2 texCoords479 =  vec2(texture_uv[0], texture_uv[1]) + offset479;
float texAlpha479 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset479)[3]);
bool texInBounds479 = (abs(int(texCoords479[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords479[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords479[0] > 0.0f && texCoords479[0] < 1.0f && texCoords479[1] > 0.0f && texCoords479[1] < 1.0f;
float sample479 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset479)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset479)[3] > epsilon)) * 0.001113f * float(texInBounds479);
vec2 offset480 = vec2(onePixel[0] * 2.0, onePixel[1] * -18.0);
vec2 texCoords480 =  vec2(texture_uv[0], texture_uv[1]) + offset480;
float texAlpha480 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset480)[3]);
bool texInBounds480 = (abs(int(texCoords480[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords480[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords480[0] > 0.0f && texCoords480[0] < 1.0f && texCoords480[1] > 0.0f && texCoords480[1] < 1.0f;
float sample480 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset480)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset480)[3] > epsilon)) * 0.001124f * float(texInBounds480);
vec2 offset481 = vec2(onePixel[0] * 2.0, onePixel[1] * -17.0);
vec2 texCoords481 =  vec2(texture_uv[0], texture_uv[1]) + offset481;
float texAlpha481 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset481)[3]);
bool texInBounds481 = (abs(int(texCoords481[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords481[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords481[0] > 0.0f && texCoords481[0] < 1.0f && texCoords481[1] > 0.0f && texCoords481[1] < 1.0f;
float sample481 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset481)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset481)[3] > epsilon)) * 0.001136f * float(texInBounds481);
vec2 offset482 = vec2(onePixel[0] * 2.0, onePixel[1] * -16.0);
vec2 texCoords482 =  vec2(texture_uv[0], texture_uv[1]) + offset482;
float texAlpha482 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset482)[3]);
bool texInBounds482 = (abs(int(texCoords482[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords482[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords482[0] > 0.0f && texCoords482[0] < 1.0f && texCoords482[1] > 0.0f && texCoords482[1] < 1.0f;
float sample482 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset482)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset482)[3] > epsilon)) * 0.001147f * float(texInBounds482);
vec2 offset483 = vec2(onePixel[0] * 2.0, onePixel[1] * -15.0);
vec2 texCoords483 =  vec2(texture_uv[0], texture_uv[1]) + offset483;
float texAlpha483 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset483)[3]);
bool texInBounds483 = (abs(int(texCoords483[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords483[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords483[0] > 0.0f && texCoords483[0] < 1.0f && texCoords483[1] > 0.0f && texCoords483[1] < 1.0f;
float sample483 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset483)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset483)[3] > epsilon)) * 0.001158f * float(texInBounds483);
vec2 offset484 = vec2(onePixel[0] * 2.0, onePixel[1] * -14.0);
vec2 texCoords484 =  vec2(texture_uv[0], texture_uv[1]) + offset484;
float texAlpha484 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset484)[3]);
bool texInBounds484 = (abs(int(texCoords484[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords484[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords484[0] > 0.0f && texCoords484[0] < 1.0f && texCoords484[1] > 0.0f && texCoords484[1] < 1.0f;
float sample484 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset484)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset484)[3] > epsilon)) * 0.001168f * float(texInBounds484);
vec2 offset485 = vec2(onePixel[0] * 2.0, onePixel[1] * -13.0);
vec2 texCoords485 =  vec2(texture_uv[0], texture_uv[1]) + offset485;
float texAlpha485 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset485)[3]);
bool texInBounds485 = (abs(int(texCoords485[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords485[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords485[0] > 0.0f && texCoords485[0] < 1.0f && texCoords485[1] > 0.0f && texCoords485[1] < 1.0f;
float sample485 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset485)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset485)[3] > epsilon)) * 0.001177f * float(texInBounds485);
vec2 offset486 = vec2(onePixel[0] * 2.0, onePixel[1] * -12.0);
vec2 texCoords486 =  vec2(texture_uv[0], texture_uv[1]) + offset486;
float texAlpha486 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset486)[3]);
bool texInBounds486 = (abs(int(texCoords486[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords486[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords486[0] > 0.0f && texCoords486[0] < 1.0f && texCoords486[1] > 0.0f && texCoords486[1] < 1.0f;
float sample486 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset486)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset486)[3] > epsilon)) * 0.001186f * float(texInBounds486);
vec2 offset487 = vec2(onePixel[0] * 2.0, onePixel[1] * -11.0);
vec2 texCoords487 =  vec2(texture_uv[0], texture_uv[1]) + offset487;
float texAlpha487 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset487)[3]);
bool texInBounds487 = (abs(int(texCoords487[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords487[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords487[0] > 0.0f && texCoords487[0] < 1.0f && texCoords487[1] > 0.0f && texCoords487[1] < 1.0f;
float sample487 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset487)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset487)[3] > epsilon)) * 0.001194f * float(texInBounds487);
vec2 offset488 = vec2(onePixel[0] * 2.0, onePixel[1] * -10.0);
vec2 texCoords488 =  vec2(texture_uv[0], texture_uv[1]) + offset488;
float texAlpha488 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset488)[3]);
bool texInBounds488 = (abs(int(texCoords488[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords488[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords488[0] > 0.0f && texCoords488[0] < 1.0f && texCoords488[1] > 0.0f && texCoords488[1] < 1.0f;
float sample488 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset488)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset488)[3] > epsilon)) * 0.001202f * float(texInBounds488);
vec2 offset489 = vec2(onePixel[0] * 2.0, onePixel[1] * -9.0);
vec2 texCoords489 =  vec2(texture_uv[0], texture_uv[1]) + offset489;
float texAlpha489 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset489)[3]);
bool texInBounds489 = (abs(int(texCoords489[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords489[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords489[0] > 0.0f && texCoords489[0] < 1.0f && texCoords489[1] > 0.0f && texCoords489[1] < 1.0f;
float sample489 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset489)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset489)[3] > epsilon)) * 0.001208f * float(texInBounds489);
vec2 offset490 = vec2(onePixel[0] * 2.0, onePixel[1] * -8.0);
vec2 texCoords490 =  vec2(texture_uv[0], texture_uv[1]) + offset490;
float texAlpha490 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset490)[3]);
bool texInBounds490 = (abs(int(texCoords490[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords490[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords490[0] > 0.0f && texCoords490[0] < 1.0f && texCoords490[1] > 0.0f && texCoords490[1] < 1.0f;
float sample490 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset490)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset490)[3] > epsilon)) * 0.001214f * float(texInBounds490);
vec2 offset491 = vec2(onePixel[0] * 2.0, onePixel[1] * -7.0);
vec2 texCoords491 =  vec2(texture_uv[0], texture_uv[1]) + offset491;
float texAlpha491 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset491)[3]);
bool texInBounds491 = (abs(int(texCoords491[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords491[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords491[0] > 0.0f && texCoords491[0] < 1.0f && texCoords491[1] > 0.0f && texCoords491[1] < 1.0f;
float sample491 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset491)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset491)[3] > epsilon)) * 0.001220f * float(texInBounds491);
vec2 offset492 = vec2(onePixel[0] * 2.0, onePixel[1] * -6.0);
vec2 texCoords492 =  vec2(texture_uv[0], texture_uv[1]) + offset492;
float texAlpha492 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset492)[3]);
bool texInBounds492 = (abs(int(texCoords492[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords492[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords492[0] > 0.0f && texCoords492[0] < 1.0f && texCoords492[1] > 0.0f && texCoords492[1] < 1.0f;
float sample492 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset492)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset492)[3] > epsilon)) * 0.001225f * float(texInBounds492);
vec2 offset493 = vec2(onePixel[0] * 2.0, onePixel[1] * -5.0);
vec2 texCoords493 =  vec2(texture_uv[0], texture_uv[1]) + offset493;
float texAlpha493 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset493)[3]);
bool texInBounds493 = (abs(int(texCoords493[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords493[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords493[0] > 0.0f && texCoords493[0] < 1.0f && texCoords493[1] > 0.0f && texCoords493[1] < 1.0f;
float sample493 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset493)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset493)[3] > epsilon)) * 0.001229f * float(texInBounds493);
vec2 offset494 = vec2(onePixel[0] * 2.0, onePixel[1] * -4.0);
vec2 texCoords494 =  vec2(texture_uv[0], texture_uv[1]) + offset494;
float texAlpha494 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset494)[3]);
bool texInBounds494 = (abs(int(texCoords494[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords494[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords494[0] > 0.0f && texCoords494[0] < 1.0f && texCoords494[1] > 0.0f && texCoords494[1] < 1.0f;
float sample494 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset494)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset494)[3] > epsilon)) * 0.001232f * float(texInBounds494);
vec2 offset495 = vec2(onePixel[0] * 2.0, onePixel[1] * -3.0);
vec2 texCoords495 =  vec2(texture_uv[0], texture_uv[1]) + offset495;
float texAlpha495 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset495)[3]);
bool texInBounds495 = (abs(int(texCoords495[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords495[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords495[0] > 0.0f && texCoords495[0] < 1.0f && texCoords495[1] > 0.0f && texCoords495[1] < 1.0f;
float sample495 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset495)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset495)[3] > epsilon)) * 0.001234f * float(texInBounds495);
vec2 offset496 = vec2(onePixel[0] * 2.0, onePixel[1] * -2.0);
vec2 texCoords496 =  vec2(texture_uv[0], texture_uv[1]) + offset496;
float texAlpha496 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset496)[3]);
bool texInBounds496 = (abs(int(texCoords496[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords496[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords496[0] > 0.0f && texCoords496[0] < 1.0f && texCoords496[1] > 0.0f && texCoords496[1] < 1.0f;
float sample496 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset496)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset496)[3] > epsilon)) * 0.001236f * float(texInBounds496);
vec2 offset497 = vec2(onePixel[0] * 2.0, onePixel[1] * -1.0);
vec2 texCoords497 =  vec2(texture_uv[0], texture_uv[1]) + offset497;
float texAlpha497 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset497)[3]);
bool texInBounds497 = (abs(int(texCoords497[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords497[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords497[0] > 0.0f && texCoords497[0] < 1.0f && texCoords497[1] > 0.0f && texCoords497[1] < 1.0f;
float sample497 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset497)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset497)[3] > epsilon)) * 0.001237f * float(texInBounds497);
vec2 offset498 = vec2(onePixel[0] * 2.0, onePixel[1] * 0.0);
vec2 texCoords498 =  vec2(texture_uv[0], texture_uv[1]) + offset498;
float texAlpha498 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset498)[3]);
bool texInBounds498 = (abs(int(texCoords498[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords498[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords498[0] > 0.0f && texCoords498[0] < 1.0f && texCoords498[1] > 0.0f && texCoords498[1] < 1.0f;
float sample498 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset498)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset498)[3] > epsilon)) * 0.001238f * float(texInBounds498);
vec2 offset499 = vec2(onePixel[0] * 2.0, onePixel[1] * 1.0);
vec2 texCoords499 =  vec2(texture_uv[0], texture_uv[1]) + offset499;
float texAlpha499 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset499)[3]);
bool texInBounds499 = (abs(int(texCoords499[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords499[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords499[0] > 0.0f && texCoords499[0] < 1.0f && texCoords499[1] > 0.0f && texCoords499[1] < 1.0f;
float sample499 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset499)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset499)[3] > epsilon)) * 0.001237f * float(texInBounds499);
vec2 offset500 = vec2(onePixel[0] * 2.0, onePixel[1] * 2.0);
vec2 texCoords500 =  vec2(texture_uv[0], texture_uv[1]) + offset500;
float texAlpha500 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset500)[3]);
bool texInBounds500 = (abs(int(texCoords500[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords500[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords500[0] > 0.0f && texCoords500[0] < 1.0f && texCoords500[1] > 0.0f && texCoords500[1] < 1.0f;
float sample500 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset500)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset500)[3] > epsilon)) * 0.001236f * float(texInBounds500);
vec2 offset501 = vec2(onePixel[0] * 2.0, onePixel[1] * 3.0);
vec2 texCoords501 =  vec2(texture_uv[0], texture_uv[1]) + offset501;
float texAlpha501 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset501)[3]);
bool texInBounds501 = (abs(int(texCoords501[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords501[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords501[0] > 0.0f && texCoords501[0] < 1.0f && texCoords501[1] > 0.0f && texCoords501[1] < 1.0f;
float sample501 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset501)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset501)[3] > epsilon)) * 0.001234f * float(texInBounds501);
vec2 offset502 = vec2(onePixel[0] * 2.0, onePixel[1] * 4.0);
vec2 texCoords502 =  vec2(texture_uv[0], texture_uv[1]) + offset502;
float texAlpha502 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset502)[3]);
bool texInBounds502 = (abs(int(texCoords502[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords502[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords502[0] > 0.0f && texCoords502[0] < 1.0f && texCoords502[1] > 0.0f && texCoords502[1] < 1.0f;
float sample502 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset502)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset502)[3] > epsilon)) * 0.001232f * float(texInBounds502);
vec2 offset503 = vec2(onePixel[0] * 2.0, onePixel[1] * 5.0);
vec2 texCoords503 =  vec2(texture_uv[0], texture_uv[1]) + offset503;
float texAlpha503 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset503)[3]);
bool texInBounds503 = (abs(int(texCoords503[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords503[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords503[0] > 0.0f && texCoords503[0] < 1.0f && texCoords503[1] > 0.0f && texCoords503[1] < 1.0f;
float sample503 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset503)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset503)[3] > epsilon)) * 0.001229f * float(texInBounds503);
vec2 offset504 = vec2(onePixel[0] * 2.0, onePixel[1] * 6.0);
vec2 texCoords504 =  vec2(texture_uv[0], texture_uv[1]) + offset504;
float texAlpha504 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset504)[3]);
bool texInBounds504 = (abs(int(texCoords504[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords504[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords504[0] > 0.0f && texCoords504[0] < 1.0f && texCoords504[1] > 0.0f && texCoords504[1] < 1.0f;
float sample504 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset504)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset504)[3] > epsilon)) * 0.001225f * float(texInBounds504);
vec2 offset505 = vec2(onePixel[0] * 2.0, onePixel[1] * 7.0);
vec2 texCoords505 =  vec2(texture_uv[0], texture_uv[1]) + offset505;
float texAlpha505 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset505)[3]);
bool texInBounds505 = (abs(int(texCoords505[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords505[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords505[0] > 0.0f && texCoords505[0] < 1.0f && texCoords505[1] > 0.0f && texCoords505[1] < 1.0f;
float sample505 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset505)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset505)[3] > epsilon)) * 0.001220f * float(texInBounds505);
vec2 offset506 = vec2(onePixel[0] * 2.0, onePixel[1] * 8.0);
vec2 texCoords506 =  vec2(texture_uv[0], texture_uv[1]) + offset506;
float texAlpha506 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset506)[3]);
bool texInBounds506 = (abs(int(texCoords506[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords506[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords506[0] > 0.0f && texCoords506[0] < 1.0f && texCoords506[1] > 0.0f && texCoords506[1] < 1.0f;
float sample506 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset506)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset506)[3] > epsilon)) * 0.001214f * float(texInBounds506);
vec2 offset507 = vec2(onePixel[0] * 2.0, onePixel[1] * 9.0);
vec2 texCoords507 =  vec2(texture_uv[0], texture_uv[1]) + offset507;
float texAlpha507 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset507)[3]);
bool texInBounds507 = (abs(int(texCoords507[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords507[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords507[0] > 0.0f && texCoords507[0] < 1.0f && texCoords507[1] > 0.0f && texCoords507[1] < 1.0f;
float sample507 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset507)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset507)[3] > epsilon)) * 0.001208f * float(texInBounds507);
vec2 offset508 = vec2(onePixel[0] * 2.0, onePixel[1] * 10.0);
vec2 texCoords508 =  vec2(texture_uv[0], texture_uv[1]) + offset508;
float texAlpha508 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset508)[3]);
bool texInBounds508 = (abs(int(texCoords508[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords508[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords508[0] > 0.0f && texCoords508[0] < 1.0f && texCoords508[1] > 0.0f && texCoords508[1] < 1.0f;
float sample508 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset508)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset508)[3] > epsilon)) * 0.001202f * float(texInBounds508);
vec2 offset509 = vec2(onePixel[0] * 2.0, onePixel[1] * 11.0);
vec2 texCoords509 =  vec2(texture_uv[0], texture_uv[1]) + offset509;
float texAlpha509 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset509)[3]);
bool texInBounds509 = (abs(int(texCoords509[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords509[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords509[0] > 0.0f && texCoords509[0] < 1.0f && texCoords509[1] > 0.0f && texCoords509[1] < 1.0f;
float sample509 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset509)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset509)[3] > epsilon)) * 0.001194f * float(texInBounds509);
vec2 offset510 = vec2(onePixel[0] * 2.0, onePixel[1] * 12.0);
vec2 texCoords510 =  vec2(texture_uv[0], texture_uv[1]) + offset510;
float texAlpha510 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset510)[3]);
bool texInBounds510 = (abs(int(texCoords510[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords510[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords510[0] > 0.0f && texCoords510[0] < 1.0f && texCoords510[1] > 0.0f && texCoords510[1] < 1.0f;
float sample510 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset510)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset510)[3] > epsilon)) * 0.001186f * float(texInBounds510);
vec2 offset511 = vec2(onePixel[0] * 2.0, onePixel[1] * 13.0);
vec2 texCoords511 =  vec2(texture_uv[0], texture_uv[1]) + offset511;
float texAlpha511 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset511)[3]);
bool texInBounds511 = (abs(int(texCoords511[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords511[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords511[0] > 0.0f && texCoords511[0] < 1.0f && texCoords511[1] > 0.0f && texCoords511[1] < 1.0f;
float sample511 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset511)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset511)[3] > epsilon)) * 0.001177f * float(texInBounds511);
vec2 offset512 = vec2(onePixel[0] * 2.0, onePixel[1] * 14.0);
vec2 texCoords512 =  vec2(texture_uv[0], texture_uv[1]) + offset512;
float texAlpha512 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset512)[3]);
bool texInBounds512 = (abs(int(texCoords512[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords512[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords512[0] > 0.0f && texCoords512[0] < 1.0f && texCoords512[1] > 0.0f && texCoords512[1] < 1.0f;
float sample512 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset512)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset512)[3] > epsilon)) * 0.001168f * float(texInBounds512);
vec2 offset513 = vec2(onePixel[0] * 2.0, onePixel[1] * 15.0);
vec2 texCoords513 =  vec2(texture_uv[0], texture_uv[1]) + offset513;
float texAlpha513 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset513)[3]);
bool texInBounds513 = (abs(int(texCoords513[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords513[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords513[0] > 0.0f && texCoords513[0] < 1.0f && texCoords513[1] > 0.0f && texCoords513[1] < 1.0f;
float sample513 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset513)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset513)[3] > epsilon)) * 0.001158f * float(texInBounds513);
vec2 offset514 = vec2(onePixel[0] * 2.0, onePixel[1] * 16.0);
vec2 texCoords514 =  vec2(texture_uv[0], texture_uv[1]) + offset514;
float texAlpha514 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset514)[3]);
bool texInBounds514 = (abs(int(texCoords514[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords514[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords514[0] > 0.0f && texCoords514[0] < 1.0f && texCoords514[1] > 0.0f && texCoords514[1] < 1.0f;
float sample514 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset514)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset514)[3] > epsilon)) * 0.001147f * float(texInBounds514);
vec2 offset515 = vec2(onePixel[0] * 2.0, onePixel[1] * 17.0);
vec2 texCoords515 =  vec2(texture_uv[0], texture_uv[1]) + offset515;
float texAlpha515 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset515)[3]);
bool texInBounds515 = (abs(int(texCoords515[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords515[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords515[0] > 0.0f && texCoords515[0] < 1.0f && texCoords515[1] > 0.0f && texCoords515[1] < 1.0f;
float sample515 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset515)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset515)[3] > epsilon)) * 0.001136f * float(texInBounds515);
vec2 offset516 = vec2(onePixel[0] * 2.0, onePixel[1] * 18.0);
vec2 texCoords516 =  vec2(texture_uv[0], texture_uv[1]) + offset516;
float texAlpha516 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset516)[3]);
bool texInBounds516 = (abs(int(texCoords516[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords516[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords516[0] > 0.0f && texCoords516[0] < 1.0f && texCoords516[1] > 0.0f && texCoords516[1] < 1.0f;
float sample516 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset516)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset516)[3] > epsilon)) * 0.001124f * float(texInBounds516);
vec2 offset517 = vec2(onePixel[0] * 3.0, onePixel[1] * -17.0);
vec2 texCoords517 =  vec2(texture_uv[0], texture_uv[1]) + offset517;
float texAlpha517 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset517)[3]);
bool texInBounds517 = (abs(int(texCoords517[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords517[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords517[0] > 0.0f && texCoords517[0] < 1.0f && texCoords517[1] > 0.0f && texCoords517[1] < 1.0f;
float sample517 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset517)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset517)[3] > epsilon)) * 0.001134f * float(texInBounds517);
vec2 offset518 = vec2(onePixel[0] * 3.0, onePixel[1] * -16.0);
vec2 texCoords518 =  vec2(texture_uv[0], texture_uv[1]) + offset518;
float texAlpha518 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset518)[3]);
bool texInBounds518 = (abs(int(texCoords518[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords518[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords518[0] > 0.0f && texCoords518[0] < 1.0f && texCoords518[1] > 0.0f && texCoords518[1] < 1.0f;
float sample518 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset518)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset518)[3] > epsilon)) * 0.001145f * float(texInBounds518);
vec2 offset519 = vec2(onePixel[0] * 3.0, onePixel[1] * -15.0);
vec2 texCoords519 =  vec2(texture_uv[0], texture_uv[1]) + offset519;
float texAlpha519 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset519)[3]);
bool texInBounds519 = (abs(int(texCoords519[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords519[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords519[0] > 0.0f && texCoords519[0] < 1.0f && texCoords519[1] > 0.0f && texCoords519[1] < 1.0f;
float sample519 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset519)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset519)[3] > epsilon)) * 0.001156f * float(texInBounds519);
vec2 offset520 = vec2(onePixel[0] * 3.0, onePixel[1] * -14.0);
vec2 texCoords520 =  vec2(texture_uv[0], texture_uv[1]) + offset520;
float texAlpha520 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset520)[3]);
bool texInBounds520 = (abs(int(texCoords520[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords520[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords520[0] > 0.0f && texCoords520[0] < 1.0f && texCoords520[1] > 0.0f && texCoords520[1] < 1.0f;
float sample520 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset520)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset520)[3] > epsilon)) * 0.001166f * float(texInBounds520);
vec2 offset521 = vec2(onePixel[0] * 3.0, onePixel[1] * -13.0);
vec2 texCoords521 =  vec2(texture_uv[0], texture_uv[1]) + offset521;
float texAlpha521 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset521)[3]);
bool texInBounds521 = (abs(int(texCoords521[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords521[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords521[0] > 0.0f && texCoords521[0] < 1.0f && texCoords521[1] > 0.0f && texCoords521[1] < 1.0f;
float sample521 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset521)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset521)[3] > epsilon)) * 0.001175f * float(texInBounds521);
vec2 offset522 = vec2(onePixel[0] * 3.0, onePixel[1] * -12.0);
vec2 texCoords522 =  vec2(texture_uv[0], texture_uv[1]) + offset522;
float texAlpha522 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset522)[3]);
bool texInBounds522 = (abs(int(texCoords522[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords522[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords522[0] > 0.0f && texCoords522[0] < 1.0f && texCoords522[1] > 0.0f && texCoords522[1] < 1.0f;
float sample522 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset522)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset522)[3] > epsilon)) * 0.001184f * float(texInBounds522);
vec2 offset523 = vec2(onePixel[0] * 3.0, onePixel[1] * -11.0);
vec2 texCoords523 =  vec2(texture_uv[0], texture_uv[1]) + offset523;
float texAlpha523 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset523)[3]);
bool texInBounds523 = (abs(int(texCoords523[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords523[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords523[0] > 0.0f && texCoords523[0] < 1.0f && texCoords523[1] > 0.0f && texCoords523[1] < 1.0f;
float sample523 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset523)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset523)[3] > epsilon)) * 0.001192f * float(texInBounds523);
vec2 offset524 = vec2(onePixel[0] * 3.0, onePixel[1] * -10.0);
vec2 texCoords524 =  vec2(texture_uv[0], texture_uv[1]) + offset524;
float texAlpha524 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset524)[3]);
bool texInBounds524 = (abs(int(texCoords524[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords524[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords524[0] > 0.0f && texCoords524[0] < 1.0f && texCoords524[1] > 0.0f && texCoords524[1] < 1.0f;
float sample524 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset524)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset524)[3] > epsilon)) * 0.001200f * float(texInBounds524);
vec2 offset525 = vec2(onePixel[0] * 3.0, onePixel[1] * -9.0);
vec2 texCoords525 =  vec2(texture_uv[0], texture_uv[1]) + offset525;
float texAlpha525 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset525)[3]);
bool texInBounds525 = (abs(int(texCoords525[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords525[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords525[0] > 0.0f && texCoords525[0] < 1.0f && texCoords525[1] > 0.0f && texCoords525[1] < 1.0f;
float sample525 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset525)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset525)[3] > epsilon)) * 0.001207f * float(texInBounds525);
vec2 offset526 = vec2(onePixel[0] * 3.0, onePixel[1] * -8.0);
vec2 texCoords526 =  vec2(texture_uv[0], texture_uv[1]) + offset526;
float texAlpha526 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset526)[3]);
bool texInBounds526 = (abs(int(texCoords526[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords526[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords526[0] > 0.0f && texCoords526[0] < 1.0f && texCoords526[1] > 0.0f && texCoords526[1] < 1.0f;
float sample526 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset526)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset526)[3] > epsilon)) * 0.001213f * float(texInBounds526);
vec2 offset527 = vec2(onePixel[0] * 3.0, onePixel[1] * -7.0);
vec2 texCoords527 =  vec2(texture_uv[0], texture_uv[1]) + offset527;
float texAlpha527 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset527)[3]);
bool texInBounds527 = (abs(int(texCoords527[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords527[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords527[0] > 0.0f && texCoords527[0] < 1.0f && texCoords527[1] > 0.0f && texCoords527[1] < 1.0f;
float sample527 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset527)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset527)[3] > epsilon)) * 0.001218f * float(texInBounds527);
vec2 offset528 = vec2(onePixel[0] * 3.0, onePixel[1] * -6.0);
vec2 texCoords528 =  vec2(texture_uv[0], texture_uv[1]) + offset528;
float texAlpha528 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset528)[3]);
bool texInBounds528 = (abs(int(texCoords528[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords528[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords528[0] > 0.0f && texCoords528[0] < 1.0f && texCoords528[1] > 0.0f && texCoords528[1] < 1.0f;
float sample528 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset528)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset528)[3] > epsilon)) * 0.001223f * float(texInBounds528);
vec2 offset529 = vec2(onePixel[0] * 3.0, onePixel[1] * -5.0);
vec2 texCoords529 =  vec2(texture_uv[0], texture_uv[1]) + offset529;
float texAlpha529 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset529)[3]);
bool texInBounds529 = (abs(int(texCoords529[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords529[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords529[0] > 0.0f && texCoords529[0] < 1.0f && texCoords529[1] > 0.0f && texCoords529[1] < 1.0f;
float sample529 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset529)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset529)[3] > epsilon)) * 0.001227f * float(texInBounds529);
vec2 offset530 = vec2(onePixel[0] * 3.0, onePixel[1] * -4.0);
vec2 texCoords530 =  vec2(texture_uv[0], texture_uv[1]) + offset530;
float texAlpha530 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset530)[3]);
bool texInBounds530 = (abs(int(texCoords530[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords530[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords530[0] > 0.0f && texCoords530[0] < 1.0f && texCoords530[1] > 0.0f && texCoords530[1] < 1.0f;
float sample530 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset530)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset530)[3] > epsilon)) * 0.001230f * float(texInBounds530);
vec2 offset531 = vec2(onePixel[0] * 3.0, onePixel[1] * -3.0);
vec2 texCoords531 =  vec2(texture_uv[0], texture_uv[1]) + offset531;
float texAlpha531 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset531)[3]);
bool texInBounds531 = (abs(int(texCoords531[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords531[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords531[0] > 0.0f && texCoords531[0] < 1.0f && texCoords531[1] > 0.0f && texCoords531[1] < 1.0f;
float sample531 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset531)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset531)[3] > epsilon)) * 0.001233f * float(texInBounds531);
vec2 offset532 = vec2(onePixel[0] * 3.0, onePixel[1] * -2.0);
vec2 texCoords532 =  vec2(texture_uv[0], texture_uv[1]) + offset532;
float texAlpha532 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset532)[3]);
bool texInBounds532 = (abs(int(texCoords532[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords532[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords532[0] > 0.0f && texCoords532[0] < 1.0f && texCoords532[1] > 0.0f && texCoords532[1] < 1.0f;
float sample532 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset532)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset532)[3] > epsilon)) * 0.001234f * float(texInBounds532);
vec2 offset533 = vec2(onePixel[0] * 3.0, onePixel[1] * -1.0);
vec2 texCoords533 =  vec2(texture_uv[0], texture_uv[1]) + offset533;
float texAlpha533 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset533)[3]);
bool texInBounds533 = (abs(int(texCoords533[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords533[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords533[0] > 0.0f && texCoords533[0] < 1.0f && texCoords533[1] > 0.0f && texCoords533[1] < 1.0f;
float sample533 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset533)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset533)[3] > epsilon)) * 0.001236f * float(texInBounds533);
vec2 offset534 = vec2(onePixel[0] * 3.0, onePixel[1] * 0.0);
vec2 texCoords534 =  vec2(texture_uv[0], texture_uv[1]) + offset534;
float texAlpha534 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset534)[3]);
bool texInBounds534 = (abs(int(texCoords534[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords534[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords534[0] > 0.0f && texCoords534[0] < 1.0f && texCoords534[1] > 0.0f && texCoords534[1] < 1.0f;
float sample534 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset534)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset534)[3] > epsilon)) * 0.001236f * float(texInBounds534);
vec2 offset535 = vec2(onePixel[0] * 3.0, onePixel[1] * 1.0);
vec2 texCoords535 =  vec2(texture_uv[0], texture_uv[1]) + offset535;
float texAlpha535 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset535)[3]);
bool texInBounds535 = (abs(int(texCoords535[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords535[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords535[0] > 0.0f && texCoords535[0] < 1.0f && texCoords535[1] > 0.0f && texCoords535[1] < 1.0f;
float sample535 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset535)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset535)[3] > epsilon)) * 0.001236f * float(texInBounds535);
vec2 offset536 = vec2(onePixel[0] * 3.0, onePixel[1] * 2.0);
vec2 texCoords536 =  vec2(texture_uv[0], texture_uv[1]) + offset536;
float texAlpha536 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset536)[3]);
bool texInBounds536 = (abs(int(texCoords536[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords536[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords536[0] > 0.0f && texCoords536[0] < 1.0f && texCoords536[1] > 0.0f && texCoords536[1] < 1.0f;
float sample536 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset536)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset536)[3] > epsilon)) * 0.001234f * float(texInBounds536);
vec2 offset537 = vec2(onePixel[0] * 3.0, onePixel[1] * 3.0);
vec2 texCoords537 =  vec2(texture_uv[0], texture_uv[1]) + offset537;
float texAlpha537 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset537)[3]);
bool texInBounds537 = (abs(int(texCoords537[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords537[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords537[0] > 0.0f && texCoords537[0] < 1.0f && texCoords537[1] > 0.0f && texCoords537[1] < 1.0f;
float sample537 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset537)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset537)[3] > epsilon)) * 0.001233f * float(texInBounds537);
vec2 offset538 = vec2(onePixel[0] * 3.0, onePixel[1] * 4.0);
vec2 texCoords538 =  vec2(texture_uv[0], texture_uv[1]) + offset538;
float texAlpha538 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset538)[3]);
bool texInBounds538 = (abs(int(texCoords538[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords538[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords538[0] > 0.0f && texCoords538[0] < 1.0f && texCoords538[1] > 0.0f && texCoords538[1] < 1.0f;
float sample538 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset538)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset538)[3] > epsilon)) * 0.001230f * float(texInBounds538);
vec2 offset539 = vec2(onePixel[0] * 3.0, onePixel[1] * 5.0);
vec2 texCoords539 =  vec2(texture_uv[0], texture_uv[1]) + offset539;
float texAlpha539 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset539)[3]);
bool texInBounds539 = (abs(int(texCoords539[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords539[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords539[0] > 0.0f && texCoords539[0] < 1.0f && texCoords539[1] > 0.0f && texCoords539[1] < 1.0f;
float sample539 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset539)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset539)[3] > epsilon)) * 0.001227f * float(texInBounds539);
vec2 offset540 = vec2(onePixel[0] * 3.0, onePixel[1] * 6.0);
vec2 texCoords540 =  vec2(texture_uv[0], texture_uv[1]) + offset540;
float texAlpha540 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset540)[3]);
bool texInBounds540 = (abs(int(texCoords540[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords540[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords540[0] > 0.0f && texCoords540[0] < 1.0f && texCoords540[1] > 0.0f && texCoords540[1] < 1.0f;
float sample540 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset540)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset540)[3] > epsilon)) * 0.001223f * float(texInBounds540);
vec2 offset541 = vec2(onePixel[0] * 3.0, onePixel[1] * 7.0);
vec2 texCoords541 =  vec2(texture_uv[0], texture_uv[1]) + offset541;
float texAlpha541 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset541)[3]);
bool texInBounds541 = (abs(int(texCoords541[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords541[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords541[0] > 0.0f && texCoords541[0] < 1.0f && texCoords541[1] > 0.0f && texCoords541[1] < 1.0f;
float sample541 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset541)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset541)[3] > epsilon)) * 0.001218f * float(texInBounds541);
vec2 offset542 = vec2(onePixel[0] * 3.0, onePixel[1] * 8.0);
vec2 texCoords542 =  vec2(texture_uv[0], texture_uv[1]) + offset542;
float texAlpha542 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset542)[3]);
bool texInBounds542 = (abs(int(texCoords542[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords542[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords542[0] > 0.0f && texCoords542[0] < 1.0f && texCoords542[1] > 0.0f && texCoords542[1] < 1.0f;
float sample542 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset542)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset542)[3] > epsilon)) * 0.001213f * float(texInBounds542);
vec2 offset543 = vec2(onePixel[0] * 3.0, onePixel[1] * 9.0);
vec2 texCoords543 =  vec2(texture_uv[0], texture_uv[1]) + offset543;
float texAlpha543 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset543)[3]);
bool texInBounds543 = (abs(int(texCoords543[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords543[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords543[0] > 0.0f && texCoords543[0] < 1.0f && texCoords543[1] > 0.0f && texCoords543[1] < 1.0f;
float sample543 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset543)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset543)[3] > epsilon)) * 0.001207f * float(texInBounds543);
vec2 offset544 = vec2(onePixel[0] * 3.0, onePixel[1] * 10.0);
vec2 texCoords544 =  vec2(texture_uv[0], texture_uv[1]) + offset544;
float texAlpha544 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset544)[3]);
bool texInBounds544 = (abs(int(texCoords544[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords544[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords544[0] > 0.0f && texCoords544[0] < 1.0f && texCoords544[1] > 0.0f && texCoords544[1] < 1.0f;
float sample544 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset544)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset544)[3] > epsilon)) * 0.001200f * float(texInBounds544);
vec2 offset545 = vec2(onePixel[0] * 3.0, onePixel[1] * 11.0);
vec2 texCoords545 =  vec2(texture_uv[0], texture_uv[1]) + offset545;
float texAlpha545 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset545)[3]);
bool texInBounds545 = (abs(int(texCoords545[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords545[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords545[0] > 0.0f && texCoords545[0] < 1.0f && texCoords545[1] > 0.0f && texCoords545[1] < 1.0f;
float sample545 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset545)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset545)[3] > epsilon)) * 0.001192f * float(texInBounds545);
vec2 offset546 = vec2(onePixel[0] * 3.0, onePixel[1] * 12.0);
vec2 texCoords546 =  vec2(texture_uv[0], texture_uv[1]) + offset546;
float texAlpha546 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset546)[3]);
bool texInBounds546 = (abs(int(texCoords546[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords546[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords546[0] > 0.0f && texCoords546[0] < 1.0f && texCoords546[1] > 0.0f && texCoords546[1] < 1.0f;
float sample546 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset546)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset546)[3] > epsilon)) * 0.001184f * float(texInBounds546);
vec2 offset547 = vec2(onePixel[0] * 3.0, onePixel[1] * 13.0);
vec2 texCoords547 =  vec2(texture_uv[0], texture_uv[1]) + offset547;
float texAlpha547 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset547)[3]);
bool texInBounds547 = (abs(int(texCoords547[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords547[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords547[0] > 0.0f && texCoords547[0] < 1.0f && texCoords547[1] > 0.0f && texCoords547[1] < 1.0f;
float sample547 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset547)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset547)[3] > epsilon)) * 0.001175f * float(texInBounds547);
vec2 offset548 = vec2(onePixel[0] * 3.0, onePixel[1] * 14.0);
vec2 texCoords548 =  vec2(texture_uv[0], texture_uv[1]) + offset548;
float texAlpha548 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset548)[3]);
bool texInBounds548 = (abs(int(texCoords548[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords548[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords548[0] > 0.0f && texCoords548[0] < 1.0f && texCoords548[1] > 0.0f && texCoords548[1] < 1.0f;
float sample548 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset548)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset548)[3] > epsilon)) * 0.001166f * float(texInBounds548);
vec2 offset549 = vec2(onePixel[0] * 3.0, onePixel[1] * 15.0);
vec2 texCoords549 =  vec2(texture_uv[0], texture_uv[1]) + offset549;
float texAlpha549 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset549)[3]);
bool texInBounds549 = (abs(int(texCoords549[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords549[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords549[0] > 0.0f && texCoords549[0] < 1.0f && texCoords549[1] > 0.0f && texCoords549[1] < 1.0f;
float sample549 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset549)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset549)[3] > epsilon)) * 0.001156f * float(texInBounds549);
vec2 offset550 = vec2(onePixel[0] * 3.0, onePixel[1] * 16.0);
vec2 texCoords550 =  vec2(texture_uv[0], texture_uv[1]) + offset550;
float texAlpha550 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset550)[3]);
bool texInBounds550 = (abs(int(texCoords550[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords550[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords550[0] > 0.0f && texCoords550[0] < 1.0f && texCoords550[1] > 0.0f && texCoords550[1] < 1.0f;
float sample550 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset550)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset550)[3] > epsilon)) * 0.001145f * float(texInBounds550);
vec2 offset551 = vec2(onePixel[0] * 3.0, onePixel[1] * 17.0);
vec2 texCoords551 =  vec2(texture_uv[0], texture_uv[1]) + offset551;
float texAlpha551 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset551)[3]);
bool texInBounds551 = (abs(int(texCoords551[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords551[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords551[0] > 0.0f && texCoords551[0] < 1.0f && texCoords551[1] > 0.0f && texCoords551[1] < 1.0f;
float sample551 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset551)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset551)[3] > epsilon)) * 0.001134f * float(texInBounds551);
vec2 offset552 = vec2(onePixel[0] * 4.0, onePixel[1] * -16.0);
vec2 texCoords552 =  vec2(texture_uv[0], texture_uv[1]) + offset552;
float texAlpha552 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset552)[3]);
bool texInBounds552 = (abs(int(texCoords552[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords552[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords552[0] > 0.0f && texCoords552[0] < 1.0f && texCoords552[1] > 0.0f && texCoords552[1] < 1.0f;
float sample552 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset552)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset552)[3] > epsilon)) * 0.001143f * float(texInBounds552);
vec2 offset553 = vec2(onePixel[0] * 4.0, onePixel[1] * -15.0);
vec2 texCoords553 =  vec2(texture_uv[0], texture_uv[1]) + offset553;
float texAlpha553 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset553)[3]);
bool texInBounds553 = (abs(int(texCoords553[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords553[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords553[0] > 0.0f && texCoords553[0] < 1.0f && texCoords553[1] > 0.0f && texCoords553[1] < 1.0f;
float sample553 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset553)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset553)[3] > epsilon)) * 0.001154f * float(texInBounds553);
vec2 offset554 = vec2(onePixel[0] * 4.0, onePixel[1] * -14.0);
vec2 texCoords554 =  vec2(texture_uv[0], texture_uv[1]) + offset554;
float texAlpha554 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset554)[3]);
bool texInBounds554 = (abs(int(texCoords554[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords554[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords554[0] > 0.0f && texCoords554[0] < 1.0f && texCoords554[1] > 0.0f && texCoords554[1] < 1.0f;
float sample554 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset554)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset554)[3] > epsilon)) * 0.001164f * float(texInBounds554);
vec2 offset555 = vec2(onePixel[0] * 4.0, onePixel[1] * -13.0);
vec2 texCoords555 =  vec2(texture_uv[0], texture_uv[1]) + offset555;
float texAlpha555 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset555)[3]);
bool texInBounds555 = (abs(int(texCoords555[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords555[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords555[0] > 0.0f && texCoords555[0] < 1.0f && texCoords555[1] > 0.0f && texCoords555[1] < 1.0f;
float sample555 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset555)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset555)[3] > epsilon)) * 0.001173f * float(texInBounds555);
vec2 offset556 = vec2(onePixel[0] * 4.0, onePixel[1] * -12.0);
vec2 texCoords556 =  vec2(texture_uv[0], texture_uv[1]) + offset556;
float texAlpha556 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset556)[3]);
bool texInBounds556 = (abs(int(texCoords556[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords556[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords556[0] > 0.0f && texCoords556[0] < 1.0f && texCoords556[1] > 0.0f && texCoords556[1] < 1.0f;
float sample556 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset556)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset556)[3] > epsilon)) * 0.001182f * float(texInBounds556);
vec2 offset557 = vec2(onePixel[0] * 4.0, onePixel[1] * -11.0);
vec2 texCoords557 =  vec2(texture_uv[0], texture_uv[1]) + offset557;
float texAlpha557 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset557)[3]);
bool texInBounds557 = (abs(int(texCoords557[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords557[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords557[0] > 0.0f && texCoords557[0] < 1.0f && texCoords557[1] > 0.0f && texCoords557[1] < 1.0f;
float sample557 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset557)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset557)[3] > epsilon)) * 0.001190f * float(texInBounds557);
vec2 offset558 = vec2(onePixel[0] * 4.0, onePixel[1] * -10.0);
vec2 texCoords558 =  vec2(texture_uv[0], texture_uv[1]) + offset558;
float texAlpha558 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset558)[3]);
bool texInBounds558 = (abs(int(texCoords558[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords558[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords558[0] > 0.0f && texCoords558[0] < 1.0f && texCoords558[1] > 0.0f && texCoords558[1] < 1.0f;
float sample558 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset558)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset558)[3] > epsilon)) * 0.001197f * float(texInBounds558);
vec2 offset559 = vec2(onePixel[0] * 4.0, onePixel[1] * -9.0);
vec2 texCoords559 =  vec2(texture_uv[0], texture_uv[1]) + offset559;
float texAlpha559 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset559)[3]);
bool texInBounds559 = (abs(int(texCoords559[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords559[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords559[0] > 0.0f && texCoords559[0] < 1.0f && texCoords559[1] > 0.0f && texCoords559[1] < 1.0f;
float sample559 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset559)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset559)[3] > epsilon)) * 0.001204f * float(texInBounds559);
vec2 offset560 = vec2(onePixel[0] * 4.0, onePixel[1] * -8.0);
vec2 texCoords560 =  vec2(texture_uv[0], texture_uv[1]) + offset560;
float texAlpha560 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset560)[3]);
bool texInBounds560 = (abs(int(texCoords560[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords560[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords560[0] > 0.0f && texCoords560[0] < 1.0f && texCoords560[1] > 0.0f && texCoords560[1] < 1.0f;
float sample560 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset560)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset560)[3] > epsilon)) * 0.001210f * float(texInBounds560);
vec2 offset561 = vec2(onePixel[0] * 4.0, onePixel[1] * -7.0);
vec2 texCoords561 =  vec2(texture_uv[0], texture_uv[1]) + offset561;
float texAlpha561 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset561)[3]);
bool texInBounds561 = (abs(int(texCoords561[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords561[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords561[0] > 0.0f && texCoords561[0] < 1.0f && texCoords561[1] > 0.0f && texCoords561[1] < 1.0f;
float sample561 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset561)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset561)[3] > epsilon)) * 0.001216f * float(texInBounds561);
vec2 offset562 = vec2(onePixel[0] * 4.0, onePixel[1] * -6.0);
vec2 texCoords562 =  vec2(texture_uv[0], texture_uv[1]) + offset562;
float texAlpha562 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset562)[3]);
bool texInBounds562 = (abs(int(texCoords562[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords562[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords562[0] > 0.0f && texCoords562[0] < 1.0f && texCoords562[1] > 0.0f && texCoords562[1] < 1.0f;
float sample562 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset562)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset562)[3] > epsilon)) * 0.001220f * float(texInBounds562);
vec2 offset563 = vec2(onePixel[0] * 4.0, onePixel[1] * -5.0);
vec2 texCoords563 =  vec2(texture_uv[0], texture_uv[1]) + offset563;
float texAlpha563 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset563)[3]);
bool texInBounds563 = (abs(int(texCoords563[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords563[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords563[0] > 0.0f && texCoords563[0] < 1.0f && texCoords563[1] > 0.0f && texCoords563[1] < 1.0f;
float sample563 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset563)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset563)[3] > epsilon)) * 0.001224f * float(texInBounds563);
vec2 offset564 = vec2(onePixel[0] * 4.0, onePixel[1] * -4.0);
vec2 texCoords564 =  vec2(texture_uv[0], texture_uv[1]) + offset564;
float texAlpha564 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset564)[3]);
bool texInBounds564 = (abs(int(texCoords564[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords564[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords564[0] > 0.0f && texCoords564[0] < 1.0f && texCoords564[1] > 0.0f && texCoords564[1] < 1.0f;
float sample564 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset564)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset564)[3] > epsilon)) * 0.001228f * float(texInBounds564);
vec2 offset565 = vec2(onePixel[0] * 4.0, onePixel[1] * -3.0);
vec2 texCoords565 =  vec2(texture_uv[0], texture_uv[1]) + offset565;
float texAlpha565 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset565)[3]);
bool texInBounds565 = (abs(int(texCoords565[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords565[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords565[0] > 0.0f && texCoords565[0] < 1.0f && texCoords565[1] > 0.0f && texCoords565[1] < 1.0f;
float sample565 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset565)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset565)[3] > epsilon)) * 0.001230f * float(texInBounds565);
vec2 offset566 = vec2(onePixel[0] * 4.0, onePixel[1] * -2.0);
vec2 texCoords566 =  vec2(texture_uv[0], texture_uv[1]) + offset566;
float texAlpha566 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset566)[3]);
bool texInBounds566 = (abs(int(texCoords566[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords566[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords566[0] > 0.0f && texCoords566[0] < 1.0f && texCoords566[1] > 0.0f && texCoords566[1] < 1.0f;
float sample566 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset566)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset566)[3] > epsilon)) * 0.001232f * float(texInBounds566);
vec2 offset567 = vec2(onePixel[0] * 4.0, onePixel[1] * -1.0);
vec2 texCoords567 =  vec2(texture_uv[0], texture_uv[1]) + offset567;
float texAlpha567 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset567)[3]);
bool texInBounds567 = (abs(int(texCoords567[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords567[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords567[0] > 0.0f && texCoords567[0] < 1.0f && texCoords567[1] > 0.0f && texCoords567[1] < 1.0f;
float sample567 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset567)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset567)[3] > epsilon)) * 0.001233f * float(texInBounds567);
vec2 offset568 = vec2(onePixel[0] * 4.0, onePixel[1] * 0.0);
vec2 texCoords568 =  vec2(texture_uv[0], texture_uv[1]) + offset568;
float texAlpha568 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset568)[3]);
bool texInBounds568 = (abs(int(texCoords568[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords568[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords568[0] > 0.0f && texCoords568[0] < 1.0f && texCoords568[1] > 0.0f && texCoords568[1] < 1.0f;
float sample568 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset568)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset568)[3] > epsilon)) * 0.001233f * float(texInBounds568);
vec2 offset569 = vec2(onePixel[0] * 4.0, onePixel[1] * 1.0);
vec2 texCoords569 =  vec2(texture_uv[0], texture_uv[1]) + offset569;
float texAlpha569 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset569)[3]);
bool texInBounds569 = (abs(int(texCoords569[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords569[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords569[0] > 0.0f && texCoords569[0] < 1.0f && texCoords569[1] > 0.0f && texCoords569[1] < 1.0f;
float sample569 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset569)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset569)[3] > epsilon)) * 0.001233f * float(texInBounds569);
vec2 offset570 = vec2(onePixel[0] * 4.0, onePixel[1] * 2.0);
vec2 texCoords570 =  vec2(texture_uv[0], texture_uv[1]) + offset570;
float texAlpha570 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset570)[3]);
bool texInBounds570 = (abs(int(texCoords570[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords570[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords570[0] > 0.0f && texCoords570[0] < 1.0f && texCoords570[1] > 0.0f && texCoords570[1] < 1.0f;
float sample570 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset570)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset570)[3] > epsilon)) * 0.001232f * float(texInBounds570);
vec2 offset571 = vec2(onePixel[0] * 4.0, onePixel[1] * 3.0);
vec2 texCoords571 =  vec2(texture_uv[0], texture_uv[1]) + offset571;
float texAlpha571 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset571)[3]);
bool texInBounds571 = (abs(int(texCoords571[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords571[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords571[0] > 0.0f && texCoords571[0] < 1.0f && texCoords571[1] > 0.0f && texCoords571[1] < 1.0f;
float sample571 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset571)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset571)[3] > epsilon)) * 0.001230f * float(texInBounds571);
vec2 offset572 = vec2(onePixel[0] * 4.0, onePixel[1] * 4.0);
vec2 texCoords572 =  vec2(texture_uv[0], texture_uv[1]) + offset572;
float texAlpha572 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset572)[3]);
bool texInBounds572 = (abs(int(texCoords572[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords572[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords572[0] > 0.0f && texCoords572[0] < 1.0f && texCoords572[1] > 0.0f && texCoords572[1] < 1.0f;
float sample572 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset572)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset572)[3] > epsilon)) * 0.001228f * float(texInBounds572);
vec2 offset573 = vec2(onePixel[0] * 4.0, onePixel[1] * 5.0);
vec2 texCoords573 =  vec2(texture_uv[0], texture_uv[1]) + offset573;
float texAlpha573 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset573)[3]);
bool texInBounds573 = (abs(int(texCoords573[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords573[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords573[0] > 0.0f && texCoords573[0] < 1.0f && texCoords573[1] > 0.0f && texCoords573[1] < 1.0f;
float sample573 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset573)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset573)[3] > epsilon)) * 0.001224f * float(texInBounds573);
vec2 offset574 = vec2(onePixel[0] * 4.0, onePixel[1] * 6.0);
vec2 texCoords574 =  vec2(texture_uv[0], texture_uv[1]) + offset574;
float texAlpha574 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset574)[3]);
bool texInBounds574 = (abs(int(texCoords574[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords574[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords574[0] > 0.0f && texCoords574[0] < 1.0f && texCoords574[1] > 0.0f && texCoords574[1] < 1.0f;
float sample574 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset574)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset574)[3] > epsilon)) * 0.001220f * float(texInBounds574);
vec2 offset575 = vec2(onePixel[0] * 4.0, onePixel[1] * 7.0);
vec2 texCoords575 =  vec2(texture_uv[0], texture_uv[1]) + offset575;
float texAlpha575 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset575)[3]);
bool texInBounds575 = (abs(int(texCoords575[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords575[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords575[0] > 0.0f && texCoords575[0] < 1.0f && texCoords575[1] > 0.0f && texCoords575[1] < 1.0f;
float sample575 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset575)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset575)[3] > epsilon)) * 0.001216f * float(texInBounds575);
vec2 offset576 = vec2(onePixel[0] * 4.0, onePixel[1] * 8.0);
vec2 texCoords576 =  vec2(texture_uv[0], texture_uv[1]) + offset576;
float texAlpha576 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset576)[3]);
bool texInBounds576 = (abs(int(texCoords576[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords576[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords576[0] > 0.0f && texCoords576[0] < 1.0f && texCoords576[1] > 0.0f && texCoords576[1] < 1.0f;
float sample576 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset576)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset576)[3] > epsilon)) * 0.001210f * float(texInBounds576);
vec2 offset577 = vec2(onePixel[0] * 4.0, onePixel[1] * 9.0);
vec2 texCoords577 =  vec2(texture_uv[0], texture_uv[1]) + offset577;
float texAlpha577 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset577)[3]);
bool texInBounds577 = (abs(int(texCoords577[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords577[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords577[0] > 0.0f && texCoords577[0] < 1.0f && texCoords577[1] > 0.0f && texCoords577[1] < 1.0f;
float sample577 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset577)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset577)[3] > epsilon)) * 0.001204f * float(texInBounds577);
vec2 offset578 = vec2(onePixel[0] * 4.0, onePixel[1] * 10.0);
vec2 texCoords578 =  vec2(texture_uv[0], texture_uv[1]) + offset578;
float texAlpha578 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset578)[3]);
bool texInBounds578 = (abs(int(texCoords578[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords578[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords578[0] > 0.0f && texCoords578[0] < 1.0f && texCoords578[1] > 0.0f && texCoords578[1] < 1.0f;
float sample578 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset578)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset578)[3] > epsilon)) * 0.001197f * float(texInBounds578);
vec2 offset579 = vec2(onePixel[0] * 4.0, onePixel[1] * 11.0);
vec2 texCoords579 =  vec2(texture_uv[0], texture_uv[1]) + offset579;
float texAlpha579 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset579)[3]);
bool texInBounds579 = (abs(int(texCoords579[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords579[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords579[0] > 0.0f && texCoords579[0] < 1.0f && texCoords579[1] > 0.0f && texCoords579[1] < 1.0f;
float sample579 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset579)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset579)[3] > epsilon)) * 0.001190f * float(texInBounds579);
vec2 offset580 = vec2(onePixel[0] * 4.0, onePixel[1] * 12.0);
vec2 texCoords580 =  vec2(texture_uv[0], texture_uv[1]) + offset580;
float texAlpha580 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset580)[3]);
bool texInBounds580 = (abs(int(texCoords580[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords580[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords580[0] > 0.0f && texCoords580[0] < 1.0f && texCoords580[1] > 0.0f && texCoords580[1] < 1.0f;
float sample580 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset580)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset580)[3] > epsilon)) * 0.001182f * float(texInBounds580);
vec2 offset581 = vec2(onePixel[0] * 4.0, onePixel[1] * 13.0);
vec2 texCoords581 =  vec2(texture_uv[0], texture_uv[1]) + offset581;
float texAlpha581 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset581)[3]);
bool texInBounds581 = (abs(int(texCoords581[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords581[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords581[0] > 0.0f && texCoords581[0] < 1.0f && texCoords581[1] > 0.0f && texCoords581[1] < 1.0f;
float sample581 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset581)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset581)[3] > epsilon)) * 0.001173f * float(texInBounds581);
vec2 offset582 = vec2(onePixel[0] * 4.0, onePixel[1] * 14.0);
vec2 texCoords582 =  vec2(texture_uv[0], texture_uv[1]) + offset582;
float texAlpha582 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset582)[3]);
bool texInBounds582 = (abs(int(texCoords582[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords582[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords582[0] > 0.0f && texCoords582[0] < 1.0f && texCoords582[1] > 0.0f && texCoords582[1] < 1.0f;
float sample582 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset582)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset582)[3] > epsilon)) * 0.001164f * float(texInBounds582);
vec2 offset583 = vec2(onePixel[0] * 4.0, onePixel[1] * 15.0);
vec2 texCoords583 =  vec2(texture_uv[0], texture_uv[1]) + offset583;
float texAlpha583 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset583)[3]);
bool texInBounds583 = (abs(int(texCoords583[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords583[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords583[0] > 0.0f && texCoords583[0] < 1.0f && texCoords583[1] > 0.0f && texCoords583[1] < 1.0f;
float sample583 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset583)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset583)[3] > epsilon)) * 0.001154f * float(texInBounds583);
vec2 offset584 = vec2(onePixel[0] * 4.0, onePixel[1] * 16.0);
vec2 texCoords584 =  vec2(texture_uv[0], texture_uv[1]) + offset584;
float texAlpha584 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset584)[3]);
bool texInBounds584 = (abs(int(texCoords584[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords584[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords584[0] > 0.0f && texCoords584[0] < 1.0f && texCoords584[1] > 0.0f && texCoords584[1] < 1.0f;
float sample584 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset584)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset584)[3] > epsilon)) * 0.001143f * float(texInBounds584);
vec2 offset585 = vec2(onePixel[0] * 5.0, onePixel[1] * -15.0);
vec2 texCoords585 =  vec2(texture_uv[0], texture_uv[1]) + offset585;
float texAlpha585 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset585)[3]);
bool texInBounds585 = (abs(int(texCoords585[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords585[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords585[0] > 0.0f && texCoords585[0] < 1.0f && texCoords585[1] > 0.0f && texCoords585[1] < 1.0f;
float sample585 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset585)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset585)[3] > epsilon)) * 0.001150f * float(texInBounds585);
vec2 offset586 = vec2(onePixel[0] * 5.0, onePixel[1] * -14.0);
vec2 texCoords586 =  vec2(texture_uv[0], texture_uv[1]) + offset586;
float texAlpha586 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset586)[3]);
bool texInBounds586 = (abs(int(texCoords586[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords586[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords586[0] > 0.0f && texCoords586[0] < 1.0f && texCoords586[1] > 0.0f && texCoords586[1] < 1.0f;
float sample586 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset586)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset586)[3] > epsilon)) * 0.001160f * float(texInBounds586);
vec2 offset587 = vec2(onePixel[0] * 5.0, onePixel[1] * -13.0);
vec2 texCoords587 =  vec2(texture_uv[0], texture_uv[1]) + offset587;
float texAlpha587 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset587)[3]);
bool texInBounds587 = (abs(int(texCoords587[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords587[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords587[0] > 0.0f && texCoords587[0] < 1.0f && texCoords587[1] > 0.0f && texCoords587[1] < 1.0f;
float sample587 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset587)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset587)[3] > epsilon)) * 0.001170f * float(texInBounds587);
vec2 offset588 = vec2(onePixel[0] * 5.0, onePixel[1] * -12.0);
vec2 texCoords588 =  vec2(texture_uv[0], texture_uv[1]) + offset588;
float texAlpha588 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset588)[3]);
bool texInBounds588 = (abs(int(texCoords588[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords588[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords588[0] > 0.0f && texCoords588[0] < 1.0f && texCoords588[1] > 0.0f && texCoords588[1] < 1.0f;
float sample588 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset588)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset588)[3] > epsilon)) * 0.001178f * float(texInBounds588);
vec2 offset589 = vec2(onePixel[0] * 5.0, onePixel[1] * -11.0);
vec2 texCoords589 =  vec2(texture_uv[0], texture_uv[1]) + offset589;
float texAlpha589 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset589)[3]);
bool texInBounds589 = (abs(int(texCoords589[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords589[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords589[0] > 0.0f && texCoords589[0] < 1.0f && texCoords589[1] > 0.0f && texCoords589[1] < 1.0f;
float sample589 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset589)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset589)[3] > epsilon)) * 0.001187f * float(texInBounds589);
vec2 offset590 = vec2(onePixel[0] * 5.0, onePixel[1] * -10.0);
vec2 texCoords590 =  vec2(texture_uv[0], texture_uv[1]) + offset590;
float texAlpha590 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset590)[3]);
bool texInBounds590 = (abs(int(texCoords590[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords590[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords590[0] > 0.0f && texCoords590[0] < 1.0f && texCoords590[1] > 0.0f && texCoords590[1] < 1.0f;
float sample590 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset590)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset590)[3] > epsilon)) * 0.001194f * float(texInBounds590);
vec2 offset591 = vec2(onePixel[0] * 5.0, onePixel[1] * -9.0);
vec2 texCoords591 =  vec2(texture_uv[0], texture_uv[1]) + offset591;
float texAlpha591 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset591)[3]);
bool texInBounds591 = (abs(int(texCoords591[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords591[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords591[0] > 0.0f && texCoords591[0] < 1.0f && texCoords591[1] > 0.0f && texCoords591[1] < 1.0f;
float sample591 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset591)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset591)[3] > epsilon)) * 0.001201f * float(texInBounds591);
vec2 offset592 = vec2(onePixel[0] * 5.0, onePixel[1] * -8.0);
vec2 texCoords592 =  vec2(texture_uv[0], texture_uv[1]) + offset592;
float texAlpha592 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset592)[3]);
bool texInBounds592 = (abs(int(texCoords592[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords592[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords592[0] > 0.0f && texCoords592[0] < 1.0f && texCoords592[1] > 0.0f && texCoords592[1] < 1.0f;
float sample592 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset592)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset592)[3] > epsilon)) * 0.001207f * float(texInBounds592);
vec2 offset593 = vec2(onePixel[0] * 5.0, onePixel[1] * -7.0);
vec2 texCoords593 =  vec2(texture_uv[0], texture_uv[1]) + offset593;
float texAlpha593 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset593)[3]);
bool texInBounds593 = (abs(int(texCoords593[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords593[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords593[0] > 0.0f && texCoords593[0] < 1.0f && texCoords593[1] > 0.0f && texCoords593[1] < 1.0f;
float sample593 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset593)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset593)[3] > epsilon)) * 0.001212f * float(texInBounds593);
vec2 offset594 = vec2(onePixel[0] * 5.0, onePixel[1] * -6.0);
vec2 texCoords594 =  vec2(texture_uv[0], texture_uv[1]) + offset594;
float texAlpha594 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset594)[3]);
bool texInBounds594 = (abs(int(texCoords594[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords594[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords594[0] > 0.0f && texCoords594[0] < 1.0f && texCoords594[1] > 0.0f && texCoords594[1] < 1.0f;
float sample594 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset594)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset594)[3] > epsilon)) * 0.001217f * float(texInBounds594);
vec2 offset595 = vec2(onePixel[0] * 5.0, onePixel[1] * -5.0);
vec2 texCoords595 =  vec2(texture_uv[0], texture_uv[1]) + offset595;
float texAlpha595 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset595)[3]);
bool texInBounds595 = (abs(int(texCoords595[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords595[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords595[0] > 0.0f && texCoords595[0] < 1.0f && texCoords595[1] > 0.0f && texCoords595[1] < 1.0f;
float sample595 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset595)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset595)[3] > epsilon)) * 0.001221f * float(texInBounds595);
vec2 offset596 = vec2(onePixel[0] * 5.0, onePixel[1] * -4.0);
vec2 texCoords596 =  vec2(texture_uv[0], texture_uv[1]) + offset596;
float texAlpha596 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset596)[3]);
bool texInBounds596 = (abs(int(texCoords596[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords596[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords596[0] > 0.0f && texCoords596[0] < 1.0f && texCoords596[1] > 0.0f && texCoords596[1] < 1.0f;
float sample596 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset596)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset596)[3] > epsilon)) * 0.001224f * float(texInBounds596);
vec2 offset597 = vec2(onePixel[0] * 5.0, onePixel[1] * -3.0);
vec2 texCoords597 =  vec2(texture_uv[0], texture_uv[1]) + offset597;
float texAlpha597 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset597)[3]);
bool texInBounds597 = (abs(int(texCoords597[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords597[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords597[0] > 0.0f && texCoords597[0] < 1.0f && texCoords597[1] > 0.0f && texCoords597[1] < 1.0f;
float sample597 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset597)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset597)[3] > epsilon)) * 0.001227f * float(texInBounds597);
vec2 offset598 = vec2(onePixel[0] * 5.0, onePixel[1] * -2.0);
vec2 texCoords598 =  vec2(texture_uv[0], texture_uv[1]) + offset598;
float texAlpha598 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset598)[3]);
bool texInBounds598 = (abs(int(texCoords598[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords598[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords598[0] > 0.0f && texCoords598[0] < 1.0f && texCoords598[1] > 0.0f && texCoords598[1] < 1.0f;
float sample598 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset598)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset598)[3] > epsilon)) * 0.001229f * float(texInBounds598);
vec2 offset599 = vec2(onePixel[0] * 5.0, onePixel[1] * -1.0);
vec2 texCoords599 =  vec2(texture_uv[0], texture_uv[1]) + offset599;
float texAlpha599 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset599)[3]);
bool texInBounds599 = (abs(int(texCoords599[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords599[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords599[0] > 0.0f && texCoords599[0] < 1.0f && texCoords599[1] > 0.0f && texCoords599[1] < 1.0f;
float sample599 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset599)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset599)[3] > epsilon)) * 0.001230f * float(texInBounds599);
vec2 offset600 = vec2(onePixel[0] * 5.0, onePixel[1] * 0.0);
vec2 texCoords600 =  vec2(texture_uv[0], texture_uv[1]) + offset600;
float texAlpha600 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset600)[3]);
bool texInBounds600 = (abs(int(texCoords600[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords600[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords600[0] > 0.0f && texCoords600[0] < 1.0f && texCoords600[1] > 0.0f && texCoords600[1] < 1.0f;
float sample600 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset600)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset600)[3] > epsilon)) * 0.001230f * float(texInBounds600);
vec2 offset601 = vec2(onePixel[0] * 5.0, onePixel[1] * 1.0);
vec2 texCoords601 =  vec2(texture_uv[0], texture_uv[1]) + offset601;
float texAlpha601 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset601)[3]);
bool texInBounds601 = (abs(int(texCoords601[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords601[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords601[0] > 0.0f && texCoords601[0] < 1.0f && texCoords601[1] > 0.0f && texCoords601[1] < 1.0f;
float sample601 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset601)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset601)[3] > epsilon)) * 0.001230f * float(texInBounds601);
vec2 offset602 = vec2(onePixel[0] * 5.0, onePixel[1] * 2.0);
vec2 texCoords602 =  vec2(texture_uv[0], texture_uv[1]) + offset602;
float texAlpha602 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset602)[3]);
bool texInBounds602 = (abs(int(texCoords602[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords602[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords602[0] > 0.0f && texCoords602[0] < 1.0f && texCoords602[1] > 0.0f && texCoords602[1] < 1.0f;
float sample602 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset602)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset602)[3] > epsilon)) * 0.001229f * float(texInBounds602);
vec2 offset603 = vec2(onePixel[0] * 5.0, onePixel[1] * 3.0);
vec2 texCoords603 =  vec2(texture_uv[0], texture_uv[1]) + offset603;
float texAlpha603 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset603)[3]);
bool texInBounds603 = (abs(int(texCoords603[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords603[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords603[0] > 0.0f && texCoords603[0] < 1.0f && texCoords603[1] > 0.0f && texCoords603[1] < 1.0f;
float sample603 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset603)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset603)[3] > epsilon)) * 0.001227f * float(texInBounds603);
vec2 offset604 = vec2(onePixel[0] * 5.0, onePixel[1] * 4.0);
vec2 texCoords604 =  vec2(texture_uv[0], texture_uv[1]) + offset604;
float texAlpha604 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset604)[3]);
bool texInBounds604 = (abs(int(texCoords604[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords604[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords604[0] > 0.0f && texCoords604[0] < 1.0f && texCoords604[1] > 0.0f && texCoords604[1] < 1.0f;
float sample604 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset604)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset604)[3] > epsilon)) * 0.001224f * float(texInBounds604);
vec2 offset605 = vec2(onePixel[0] * 5.0, onePixel[1] * 5.0);
vec2 texCoords605 =  vec2(texture_uv[0], texture_uv[1]) + offset605;
float texAlpha605 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset605)[3]);
bool texInBounds605 = (abs(int(texCoords605[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords605[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords605[0] > 0.0f && texCoords605[0] < 1.0f && texCoords605[1] > 0.0f && texCoords605[1] < 1.0f;
float sample605 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset605)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset605)[3] > epsilon)) * 0.001221f * float(texInBounds605);
vec2 offset606 = vec2(onePixel[0] * 5.0, onePixel[1] * 6.0);
vec2 texCoords606 =  vec2(texture_uv[0], texture_uv[1]) + offset606;
float texAlpha606 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset606)[3]);
bool texInBounds606 = (abs(int(texCoords606[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords606[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords606[0] > 0.0f && texCoords606[0] < 1.0f && texCoords606[1] > 0.0f && texCoords606[1] < 1.0f;
float sample606 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset606)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset606)[3] > epsilon)) * 0.001217f * float(texInBounds606);
vec2 offset607 = vec2(onePixel[0] * 5.0, onePixel[1] * 7.0);
vec2 texCoords607 =  vec2(texture_uv[0], texture_uv[1]) + offset607;
float texAlpha607 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset607)[3]);
bool texInBounds607 = (abs(int(texCoords607[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords607[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords607[0] > 0.0f && texCoords607[0] < 1.0f && texCoords607[1] > 0.0f && texCoords607[1] < 1.0f;
float sample607 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset607)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset607)[3] > epsilon)) * 0.001212f * float(texInBounds607);
vec2 offset608 = vec2(onePixel[0] * 5.0, onePixel[1] * 8.0);
vec2 texCoords608 =  vec2(texture_uv[0], texture_uv[1]) + offset608;
float texAlpha608 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset608)[3]);
bool texInBounds608 = (abs(int(texCoords608[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords608[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords608[0] > 0.0f && texCoords608[0] < 1.0f && texCoords608[1] > 0.0f && texCoords608[1] < 1.0f;
float sample608 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset608)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset608)[3] > epsilon)) * 0.001207f * float(texInBounds608);
vec2 offset609 = vec2(onePixel[0] * 5.0, onePixel[1] * 9.0);
vec2 texCoords609 =  vec2(texture_uv[0], texture_uv[1]) + offset609;
float texAlpha609 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset609)[3]);
bool texInBounds609 = (abs(int(texCoords609[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords609[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords609[0] > 0.0f && texCoords609[0] < 1.0f && texCoords609[1] > 0.0f && texCoords609[1] < 1.0f;
float sample609 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset609)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset609)[3] > epsilon)) * 0.001201f * float(texInBounds609);
vec2 offset610 = vec2(onePixel[0] * 5.0, onePixel[1] * 10.0);
vec2 texCoords610 =  vec2(texture_uv[0], texture_uv[1]) + offset610;
float texAlpha610 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset610)[3]);
bool texInBounds610 = (abs(int(texCoords610[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords610[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords610[0] > 0.0f && texCoords610[0] < 1.0f && texCoords610[1] > 0.0f && texCoords610[1] < 1.0f;
float sample610 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset610)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset610)[3] > epsilon)) * 0.001194f * float(texInBounds610);
vec2 offset611 = vec2(onePixel[0] * 5.0, onePixel[1] * 11.0);
vec2 texCoords611 =  vec2(texture_uv[0], texture_uv[1]) + offset611;
float texAlpha611 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset611)[3]);
bool texInBounds611 = (abs(int(texCoords611[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords611[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords611[0] > 0.0f && texCoords611[0] < 1.0f && texCoords611[1] > 0.0f && texCoords611[1] < 1.0f;
float sample611 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset611)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset611)[3] > epsilon)) * 0.001187f * float(texInBounds611);
vec2 offset612 = vec2(onePixel[0] * 5.0, onePixel[1] * 12.0);
vec2 texCoords612 =  vec2(texture_uv[0], texture_uv[1]) + offset612;
float texAlpha612 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset612)[3]);
bool texInBounds612 = (abs(int(texCoords612[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords612[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords612[0] > 0.0f && texCoords612[0] < 1.0f && texCoords612[1] > 0.0f && texCoords612[1] < 1.0f;
float sample612 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset612)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset612)[3] > epsilon)) * 0.001178f * float(texInBounds612);
vec2 offset613 = vec2(onePixel[0] * 5.0, onePixel[1] * 13.0);
vec2 texCoords613 =  vec2(texture_uv[0], texture_uv[1]) + offset613;
float texAlpha613 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset613)[3]);
bool texInBounds613 = (abs(int(texCoords613[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords613[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords613[0] > 0.0f && texCoords613[0] < 1.0f && texCoords613[1] > 0.0f && texCoords613[1] < 1.0f;
float sample613 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset613)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset613)[3] > epsilon)) * 0.001170f * float(texInBounds613);
vec2 offset614 = vec2(onePixel[0] * 5.0, onePixel[1] * 14.0);
vec2 texCoords614 =  vec2(texture_uv[0], texture_uv[1]) + offset614;
float texAlpha614 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset614)[3]);
bool texInBounds614 = (abs(int(texCoords614[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords614[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords614[0] > 0.0f && texCoords614[0] < 1.0f && texCoords614[1] > 0.0f && texCoords614[1] < 1.0f;
float sample614 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset614)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset614)[3] > epsilon)) * 0.001160f * float(texInBounds614);
vec2 offset615 = vec2(onePixel[0] * 5.0, onePixel[1] * 15.0);
vec2 texCoords615 =  vec2(texture_uv[0], texture_uv[1]) + offset615;
float texAlpha615 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset615)[3]);
bool texInBounds615 = (abs(int(texCoords615[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords615[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords615[0] > 0.0f && texCoords615[0] < 1.0f && texCoords615[1] > 0.0f && texCoords615[1] < 1.0f;
float sample615 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset615)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset615)[3] > epsilon)) * 0.001150f * float(texInBounds615);
vec2 offset616 = vec2(onePixel[0] * 6.0, onePixel[1] * -14.0);
vec2 texCoords616 =  vec2(texture_uv[0], texture_uv[1]) + offset616;
float texAlpha616 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset616)[3]);
bool texInBounds616 = (abs(int(texCoords616[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords616[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords616[0] > 0.0f && texCoords616[0] < 1.0f && texCoords616[1] > 0.0f && texCoords616[1] < 1.0f;
float sample616 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset616)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset616)[3] > epsilon)) * 0.001157f * float(texInBounds616);
vec2 offset617 = vec2(onePixel[0] * 6.0, onePixel[1] * -13.0);
vec2 texCoords617 =  vec2(texture_uv[0], texture_uv[1]) + offset617;
float texAlpha617 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset617)[3]);
bool texInBounds617 = (abs(int(texCoords617[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords617[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords617[0] > 0.0f && texCoords617[0] < 1.0f && texCoords617[1] > 0.0f && texCoords617[1] < 1.0f;
float sample617 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset617)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset617)[3] > epsilon)) * 0.001166f * float(texInBounds617);
vec2 offset618 = vec2(onePixel[0] * 6.0, onePixel[1] * -12.0);
vec2 texCoords618 =  vec2(texture_uv[0], texture_uv[1]) + offset618;
float texAlpha618 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset618)[3]);
bool texInBounds618 = (abs(int(texCoords618[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords618[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords618[0] > 0.0f && texCoords618[0] < 1.0f && texCoords618[1] > 0.0f && texCoords618[1] < 1.0f;
float sample618 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset618)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset618)[3] > epsilon)) * 0.001175f * float(texInBounds618);
vec2 offset619 = vec2(onePixel[0] * 6.0, onePixel[1] * -11.0);
vec2 texCoords619 =  vec2(texture_uv[0], texture_uv[1]) + offset619;
float texAlpha619 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset619)[3]);
bool texInBounds619 = (abs(int(texCoords619[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords619[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords619[0] > 0.0f && texCoords619[0] < 1.0f && texCoords619[1] > 0.0f && texCoords619[1] < 1.0f;
float sample619 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset619)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset619)[3] > epsilon)) * 0.001183f * float(texInBounds619);
vec2 offset620 = vec2(onePixel[0] * 6.0, onePixel[1] * -10.0);
vec2 texCoords620 =  vec2(texture_uv[0], texture_uv[1]) + offset620;
float texAlpha620 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset620)[3]);
bool texInBounds620 = (abs(int(texCoords620[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords620[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords620[0] > 0.0f && texCoords620[0] < 1.0f && texCoords620[1] > 0.0f && texCoords620[1] < 1.0f;
float sample620 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset620)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset620)[3] > epsilon)) * 0.001190f * float(texInBounds620);
vec2 offset621 = vec2(onePixel[0] * 6.0, onePixel[1] * -9.0);
vec2 texCoords621 =  vec2(texture_uv[0], texture_uv[1]) + offset621;
float texAlpha621 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset621)[3]);
bool texInBounds621 = (abs(int(texCoords621[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords621[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords621[0] > 0.0f && texCoords621[0] < 1.0f && texCoords621[1] > 0.0f && texCoords621[1] < 1.0f;
float sample621 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset621)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset621)[3] > epsilon)) * 0.001197f * float(texInBounds621);
vec2 offset622 = vec2(onePixel[0] * 6.0, onePixel[1] * -8.0);
vec2 texCoords622 =  vec2(texture_uv[0], texture_uv[1]) + offset622;
float texAlpha622 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset622)[3]);
bool texInBounds622 = (abs(int(texCoords622[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords622[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords622[0] > 0.0f && texCoords622[0] < 1.0f && texCoords622[1] > 0.0f && texCoords622[1] < 1.0f;
float sample622 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset622)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset622)[3] > epsilon)) * 0.001203f * float(texInBounds622);
vec2 offset623 = vec2(onePixel[0] * 6.0, onePixel[1] * -7.0);
vec2 texCoords623 =  vec2(texture_uv[0], texture_uv[1]) + offset623;
float texAlpha623 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset623)[3]);
bool texInBounds623 = (abs(int(texCoords623[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords623[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords623[0] > 0.0f && texCoords623[0] < 1.0f && texCoords623[1] > 0.0f && texCoords623[1] < 1.0f;
float sample623 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset623)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset623)[3] > epsilon)) * 0.001208f * float(texInBounds623);
vec2 offset624 = vec2(onePixel[0] * 6.0, onePixel[1] * -6.0);
vec2 texCoords624 =  vec2(texture_uv[0], texture_uv[1]) + offset624;
float texAlpha624 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset624)[3]);
bool texInBounds624 = (abs(int(texCoords624[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords624[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords624[0] > 0.0f && texCoords624[0] < 1.0f && texCoords624[1] > 0.0f && texCoords624[1] < 1.0f;
float sample624 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset624)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset624)[3] > epsilon)) * 0.001213f * float(texInBounds624);
vec2 offset625 = vec2(onePixel[0] * 6.0, onePixel[1] * -5.0);
vec2 texCoords625 =  vec2(texture_uv[0], texture_uv[1]) + offset625;
float texAlpha625 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset625)[3]);
bool texInBounds625 = (abs(int(texCoords625[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords625[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords625[0] > 0.0f && texCoords625[0] < 1.0f && texCoords625[1] > 0.0f && texCoords625[1] < 1.0f;
float sample625 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset625)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset625)[3] > epsilon)) * 0.001217f * float(texInBounds625);
vec2 offset626 = vec2(onePixel[0] * 6.0, onePixel[1] * -4.0);
vec2 texCoords626 =  vec2(texture_uv[0], texture_uv[1]) + offset626;
float texAlpha626 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset626)[3]);
bool texInBounds626 = (abs(int(texCoords626[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords626[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords626[0] > 0.0f && texCoords626[0] < 1.0f && texCoords626[1] > 0.0f && texCoords626[1] < 1.0f;
float sample626 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset626)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset626)[3] > epsilon)) * 0.001220f * float(texInBounds626);
vec2 offset627 = vec2(onePixel[0] * 6.0, onePixel[1] * -3.0);
vec2 texCoords627 =  vec2(texture_uv[0], texture_uv[1]) + offset627;
float texAlpha627 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset627)[3]);
bool texInBounds627 = (abs(int(texCoords627[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords627[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords627[0] > 0.0f && texCoords627[0] < 1.0f && texCoords627[1] > 0.0f && texCoords627[1] < 1.0f;
float sample627 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset627)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset627)[3] > epsilon)) * 0.001223f * float(texInBounds627);
vec2 offset628 = vec2(onePixel[0] * 6.0, onePixel[1] * -2.0);
vec2 texCoords628 =  vec2(texture_uv[0], texture_uv[1]) + offset628;
float texAlpha628 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset628)[3]);
bool texInBounds628 = (abs(int(texCoords628[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords628[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords628[0] > 0.0f && texCoords628[0] < 1.0f && texCoords628[1] > 0.0f && texCoords628[1] < 1.0f;
float sample628 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset628)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset628)[3] > epsilon)) * 0.001225f * float(texInBounds628);
vec2 offset629 = vec2(onePixel[0] * 6.0, onePixel[1] * -1.0);
vec2 texCoords629 =  vec2(texture_uv[0], texture_uv[1]) + offset629;
float texAlpha629 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset629)[3]);
bool texInBounds629 = (abs(int(texCoords629[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords629[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords629[0] > 0.0f && texCoords629[0] < 1.0f && texCoords629[1] > 0.0f && texCoords629[1] < 1.0f;
float sample629 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset629)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset629)[3] > epsilon)) * 0.001226f * float(texInBounds629);
vec2 offset630 = vec2(onePixel[0] * 6.0, onePixel[1] * 0.0);
vec2 texCoords630 =  vec2(texture_uv[0], texture_uv[1]) + offset630;
float texAlpha630 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset630)[3]);
bool texInBounds630 = (abs(int(texCoords630[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords630[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords630[0] > 0.0f && texCoords630[0] < 1.0f && texCoords630[1] > 0.0f && texCoords630[1] < 1.0f;
float sample630 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset630)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset630)[3] > epsilon)) * 0.001226f * float(texInBounds630);
vec2 offset631 = vec2(onePixel[0] * 6.0, onePixel[1] * 1.0);
vec2 texCoords631 =  vec2(texture_uv[0], texture_uv[1]) + offset631;
float texAlpha631 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset631)[3]);
bool texInBounds631 = (abs(int(texCoords631[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords631[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords631[0] > 0.0f && texCoords631[0] < 1.0f && texCoords631[1] > 0.0f && texCoords631[1] < 1.0f;
float sample631 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset631)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset631)[3] > epsilon)) * 0.001226f * float(texInBounds631);
vec2 offset632 = vec2(onePixel[0] * 6.0, onePixel[1] * 2.0);
vec2 texCoords632 =  vec2(texture_uv[0], texture_uv[1]) + offset632;
float texAlpha632 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset632)[3]);
bool texInBounds632 = (abs(int(texCoords632[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords632[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords632[0] > 0.0f && texCoords632[0] < 1.0f && texCoords632[1] > 0.0f && texCoords632[1] < 1.0f;
float sample632 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset632)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset632)[3] > epsilon)) * 0.001225f * float(texInBounds632);
vec2 offset633 = vec2(onePixel[0] * 6.0, onePixel[1] * 3.0);
vec2 texCoords633 =  vec2(texture_uv[0], texture_uv[1]) + offset633;
float texAlpha633 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset633)[3]);
bool texInBounds633 = (abs(int(texCoords633[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords633[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords633[0] > 0.0f && texCoords633[0] < 1.0f && texCoords633[1] > 0.0f && texCoords633[1] < 1.0f;
float sample633 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset633)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset633)[3] > epsilon)) * 0.001223f * float(texInBounds633);
vec2 offset634 = vec2(onePixel[0] * 6.0, onePixel[1] * 4.0);
vec2 texCoords634 =  vec2(texture_uv[0], texture_uv[1]) + offset634;
float texAlpha634 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset634)[3]);
bool texInBounds634 = (abs(int(texCoords634[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords634[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords634[0] > 0.0f && texCoords634[0] < 1.0f && texCoords634[1] > 0.0f && texCoords634[1] < 1.0f;
float sample634 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset634)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset634)[3] > epsilon)) * 0.001220f * float(texInBounds634);
vec2 offset635 = vec2(onePixel[0] * 6.0, onePixel[1] * 5.0);
vec2 texCoords635 =  vec2(texture_uv[0], texture_uv[1]) + offset635;
float texAlpha635 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset635)[3]);
bool texInBounds635 = (abs(int(texCoords635[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords635[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords635[0] > 0.0f && texCoords635[0] < 1.0f && texCoords635[1] > 0.0f && texCoords635[1] < 1.0f;
float sample635 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset635)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset635)[3] > epsilon)) * 0.001217f * float(texInBounds635);
vec2 offset636 = vec2(onePixel[0] * 6.0, onePixel[1] * 6.0);
vec2 texCoords636 =  vec2(texture_uv[0], texture_uv[1]) + offset636;
float texAlpha636 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset636)[3]);
bool texInBounds636 = (abs(int(texCoords636[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords636[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords636[0] > 0.0f && texCoords636[0] < 1.0f && texCoords636[1] > 0.0f && texCoords636[1] < 1.0f;
float sample636 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset636)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset636)[3] > epsilon)) * 0.001213f * float(texInBounds636);
vec2 offset637 = vec2(onePixel[0] * 6.0, onePixel[1] * 7.0);
vec2 texCoords637 =  vec2(texture_uv[0], texture_uv[1]) + offset637;
float texAlpha637 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset637)[3]);
bool texInBounds637 = (abs(int(texCoords637[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords637[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords637[0] > 0.0f && texCoords637[0] < 1.0f && texCoords637[1] > 0.0f && texCoords637[1] < 1.0f;
float sample637 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset637)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset637)[3] > epsilon)) * 0.001208f * float(texInBounds637);
vec2 offset638 = vec2(onePixel[0] * 6.0, onePixel[1] * 8.0);
vec2 texCoords638 =  vec2(texture_uv[0], texture_uv[1]) + offset638;
float texAlpha638 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset638)[3]);
bool texInBounds638 = (abs(int(texCoords638[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords638[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords638[0] > 0.0f && texCoords638[0] < 1.0f && texCoords638[1] > 0.0f && texCoords638[1] < 1.0f;
float sample638 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset638)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset638)[3] > epsilon)) * 0.001203f * float(texInBounds638);
vec2 offset639 = vec2(onePixel[0] * 6.0, onePixel[1] * 9.0);
vec2 texCoords639 =  vec2(texture_uv[0], texture_uv[1]) + offset639;
float texAlpha639 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset639)[3]);
bool texInBounds639 = (abs(int(texCoords639[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords639[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords639[0] > 0.0f && texCoords639[0] < 1.0f && texCoords639[1] > 0.0f && texCoords639[1] < 1.0f;
float sample639 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset639)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset639)[3] > epsilon)) * 0.001197f * float(texInBounds639);
vec2 offset640 = vec2(onePixel[0] * 6.0, onePixel[1] * 10.0);
vec2 texCoords640 =  vec2(texture_uv[0], texture_uv[1]) + offset640;
float texAlpha640 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset640)[3]);
bool texInBounds640 = (abs(int(texCoords640[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords640[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords640[0] > 0.0f && texCoords640[0] < 1.0f && texCoords640[1] > 0.0f && texCoords640[1] < 1.0f;
float sample640 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset640)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset640)[3] > epsilon)) * 0.001190f * float(texInBounds640);
vec2 offset641 = vec2(onePixel[0] * 6.0, onePixel[1] * 11.0);
vec2 texCoords641 =  vec2(texture_uv[0], texture_uv[1]) + offset641;
float texAlpha641 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset641)[3]);
bool texInBounds641 = (abs(int(texCoords641[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords641[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords641[0] > 0.0f && texCoords641[0] < 1.0f && texCoords641[1] > 0.0f && texCoords641[1] < 1.0f;
float sample641 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset641)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset641)[3] > epsilon)) * 0.001183f * float(texInBounds641);
vec2 offset642 = vec2(onePixel[0] * 6.0, onePixel[1] * 12.0);
vec2 texCoords642 =  vec2(texture_uv[0], texture_uv[1]) + offset642;
float texAlpha642 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset642)[3]);
bool texInBounds642 = (abs(int(texCoords642[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords642[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords642[0] > 0.0f && texCoords642[0] < 1.0f && texCoords642[1] > 0.0f && texCoords642[1] < 1.0f;
float sample642 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset642)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset642)[3] > epsilon)) * 0.001175f * float(texInBounds642);
vec2 offset643 = vec2(onePixel[0] * 6.0, onePixel[1] * 13.0);
vec2 texCoords643 =  vec2(texture_uv[0], texture_uv[1]) + offset643;
float texAlpha643 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset643)[3]);
bool texInBounds643 = (abs(int(texCoords643[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords643[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords643[0] > 0.0f && texCoords643[0] < 1.0f && texCoords643[1] > 0.0f && texCoords643[1] < 1.0f;
float sample643 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset643)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset643)[3] > epsilon)) * 0.001166f * float(texInBounds643);
vec2 offset644 = vec2(onePixel[0] * 6.0, onePixel[1] * 14.0);
vec2 texCoords644 =  vec2(texture_uv[0], texture_uv[1]) + offset644;
float texAlpha644 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset644)[3]);
bool texInBounds644 = (abs(int(texCoords644[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords644[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords644[0] > 0.0f && texCoords644[0] < 1.0f && texCoords644[1] > 0.0f && texCoords644[1] < 1.0f;
float sample644 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset644)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset644)[3] > epsilon)) * 0.001157f * float(texInBounds644);
vec2 offset645 = vec2(onePixel[0] * 7.0, onePixel[1] * -13.0);
vec2 texCoords645 =  vec2(texture_uv[0], texture_uv[1]) + offset645;
float texAlpha645 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset645)[3]);
bool texInBounds645 = (abs(int(texCoords645[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords645[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords645[0] > 0.0f && texCoords645[0] < 1.0f && texCoords645[1] > 0.0f && texCoords645[1] < 1.0f;
float sample645 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset645)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset645)[3] > epsilon)) * 0.001161f * float(texInBounds645);
vec2 offset646 = vec2(onePixel[0] * 7.0, onePixel[1] * -12.0);
vec2 texCoords646 =  vec2(texture_uv[0], texture_uv[1]) + offset646;
float texAlpha646 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset646)[3]);
bool texInBounds646 = (abs(int(texCoords646[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords646[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords646[0] > 0.0f && texCoords646[0] < 1.0f && texCoords646[1] > 0.0f && texCoords646[1] < 1.0f;
float sample646 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset646)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset646)[3] > epsilon)) * 0.001170f * float(texInBounds646);
vec2 offset647 = vec2(onePixel[0] * 7.0, onePixel[1] * -11.0);
vec2 texCoords647 =  vec2(texture_uv[0], texture_uv[1]) + offset647;
float texAlpha647 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset647)[3]);
bool texInBounds647 = (abs(int(texCoords647[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords647[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords647[0] > 0.0f && texCoords647[0] < 1.0f && texCoords647[1] > 0.0f && texCoords647[1] < 1.0f;
float sample647 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset647)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset647)[3] > epsilon)) * 0.001178f * float(texInBounds647);
vec2 offset648 = vec2(onePixel[0] * 7.0, onePixel[1] * -10.0);
vec2 texCoords648 =  vec2(texture_uv[0], texture_uv[1]) + offset648;
float texAlpha648 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset648)[3]);
bool texInBounds648 = (abs(int(texCoords648[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords648[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords648[0] > 0.0f && texCoords648[0] < 1.0f && texCoords648[1] > 0.0f && texCoords648[1] < 1.0f;
float sample648 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset648)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset648)[3] > epsilon)) * 0.001186f * float(texInBounds648);
vec2 offset649 = vec2(onePixel[0] * 7.0, onePixel[1] * -9.0);
vec2 texCoords649 =  vec2(texture_uv[0], texture_uv[1]) + offset649;
float texAlpha649 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset649)[3]);
bool texInBounds649 = (abs(int(texCoords649[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords649[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords649[0] > 0.0f && texCoords649[0] < 1.0f && texCoords649[1] > 0.0f && texCoords649[1] < 1.0f;
float sample649 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset649)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset649)[3] > epsilon)) * 0.001192f * float(texInBounds649);
vec2 offset650 = vec2(onePixel[0] * 7.0, onePixel[1] * -8.0);
vec2 texCoords650 =  vec2(texture_uv[0], texture_uv[1]) + offset650;
float texAlpha650 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset650)[3]);
bool texInBounds650 = (abs(int(texCoords650[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords650[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords650[0] > 0.0f && texCoords650[0] < 1.0f && texCoords650[1] > 0.0f && texCoords650[1] < 1.0f;
float sample650 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset650)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset650)[3] > epsilon)) * 0.001198f * float(texInBounds650);
vec2 offset651 = vec2(onePixel[0] * 7.0, onePixel[1] * -7.0);
vec2 texCoords651 =  vec2(texture_uv[0], texture_uv[1]) + offset651;
float texAlpha651 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset651)[3]);
bool texInBounds651 = (abs(int(texCoords651[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords651[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords651[0] > 0.0f && texCoords651[0] < 1.0f && texCoords651[1] > 0.0f && texCoords651[1] < 1.0f;
float sample651 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset651)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset651)[3] > epsilon)) * 0.001204f * float(texInBounds651);
vec2 offset652 = vec2(onePixel[0] * 7.0, onePixel[1] * -6.0);
vec2 texCoords652 =  vec2(texture_uv[0], texture_uv[1]) + offset652;
float texAlpha652 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset652)[3]);
bool texInBounds652 = (abs(int(texCoords652[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords652[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords652[0] > 0.0f && texCoords652[0] < 1.0f && texCoords652[1] > 0.0f && texCoords652[1] < 1.0f;
float sample652 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset652)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset652)[3] > epsilon)) * 0.001208f * float(texInBounds652);
vec2 offset653 = vec2(onePixel[0] * 7.0, onePixel[1] * -5.0);
vec2 texCoords653 =  vec2(texture_uv[0], texture_uv[1]) + offset653;
float texAlpha653 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset653)[3]);
bool texInBounds653 = (abs(int(texCoords653[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords653[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords653[0] > 0.0f && texCoords653[0] < 1.0f && texCoords653[1] > 0.0f && texCoords653[1] < 1.0f;
float sample653 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset653)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset653)[3] > epsilon)) * 0.001212f * float(texInBounds653);
vec2 offset654 = vec2(onePixel[0] * 7.0, onePixel[1] * -4.0);
vec2 texCoords654 =  vec2(texture_uv[0], texture_uv[1]) + offset654;
float texAlpha654 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset654)[3]);
bool texInBounds654 = (abs(int(texCoords654[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords654[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords654[0] > 0.0f && texCoords654[0] < 1.0f && texCoords654[1] > 0.0f && texCoords654[1] < 1.0f;
float sample654 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset654)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset654)[3] > epsilon)) * 0.001216f * float(texInBounds654);
vec2 offset655 = vec2(onePixel[0] * 7.0, onePixel[1] * -3.0);
vec2 texCoords655 =  vec2(texture_uv[0], texture_uv[1]) + offset655;
float texAlpha655 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset655)[3]);
bool texInBounds655 = (abs(int(texCoords655[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords655[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords655[0] > 0.0f && texCoords655[0] < 1.0f && texCoords655[1] > 0.0f && texCoords655[1] < 1.0f;
float sample655 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset655)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset655)[3] > epsilon)) * 0.001218f * float(texInBounds655);
vec2 offset656 = vec2(onePixel[0] * 7.0, onePixel[1] * -2.0);
vec2 texCoords656 =  vec2(texture_uv[0], texture_uv[1]) + offset656;
float texAlpha656 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset656)[3]);
bool texInBounds656 = (abs(int(texCoords656[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords656[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords656[0] > 0.0f && texCoords656[0] < 1.0f && texCoords656[1] > 0.0f && texCoords656[1] < 1.0f;
float sample656 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset656)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset656)[3] > epsilon)) * 0.001220f * float(texInBounds656);
vec2 offset657 = vec2(onePixel[0] * 7.0, onePixel[1] * -1.0);
vec2 texCoords657 =  vec2(texture_uv[0], texture_uv[1]) + offset657;
float texAlpha657 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset657)[3]);
bool texInBounds657 = (abs(int(texCoords657[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords657[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords657[0] > 0.0f && texCoords657[0] < 1.0f && texCoords657[1] > 0.0f && texCoords657[1] < 1.0f;
float sample657 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset657)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset657)[3] > epsilon)) * 0.001221f * float(texInBounds657);
vec2 offset658 = vec2(onePixel[0] * 7.0, onePixel[1] * 0.0);
vec2 texCoords658 =  vec2(texture_uv[0], texture_uv[1]) + offset658;
float texAlpha658 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset658)[3]);
bool texInBounds658 = (abs(int(texCoords658[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords658[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords658[0] > 0.0f && texCoords658[0] < 1.0f && texCoords658[1] > 0.0f && texCoords658[1] < 1.0f;
float sample658 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset658)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset658)[3] > epsilon)) * 0.001221f * float(texInBounds658);
vec2 offset659 = vec2(onePixel[0] * 7.0, onePixel[1] * 1.0);
vec2 texCoords659 =  vec2(texture_uv[0], texture_uv[1]) + offset659;
float texAlpha659 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset659)[3]);
bool texInBounds659 = (abs(int(texCoords659[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords659[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords659[0] > 0.0f && texCoords659[0] < 1.0f && texCoords659[1] > 0.0f && texCoords659[1] < 1.0f;
float sample659 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset659)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset659)[3] > epsilon)) * 0.001221f * float(texInBounds659);
vec2 offset660 = vec2(onePixel[0] * 7.0, onePixel[1] * 2.0);
vec2 texCoords660 =  vec2(texture_uv[0], texture_uv[1]) + offset660;
float texAlpha660 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset660)[3]);
bool texInBounds660 = (abs(int(texCoords660[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords660[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords660[0] > 0.0f && texCoords660[0] < 1.0f && texCoords660[1] > 0.0f && texCoords660[1] < 1.0f;
float sample660 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset660)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset660)[3] > epsilon)) * 0.001220f * float(texInBounds660);
vec2 offset661 = vec2(onePixel[0] * 7.0, onePixel[1] * 3.0);
vec2 texCoords661 =  vec2(texture_uv[0], texture_uv[1]) + offset661;
float texAlpha661 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset661)[3]);
bool texInBounds661 = (abs(int(texCoords661[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords661[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords661[0] > 0.0f && texCoords661[0] < 1.0f && texCoords661[1] > 0.0f && texCoords661[1] < 1.0f;
float sample661 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset661)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset661)[3] > epsilon)) * 0.001218f * float(texInBounds661);
vec2 offset662 = vec2(onePixel[0] * 7.0, onePixel[1] * 4.0);
vec2 texCoords662 =  vec2(texture_uv[0], texture_uv[1]) + offset662;
float texAlpha662 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset662)[3]);
bool texInBounds662 = (abs(int(texCoords662[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords662[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords662[0] > 0.0f && texCoords662[0] < 1.0f && texCoords662[1] > 0.0f && texCoords662[1] < 1.0f;
float sample662 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset662)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset662)[3] > epsilon)) * 0.001216f * float(texInBounds662);
vec2 offset663 = vec2(onePixel[0] * 7.0, onePixel[1] * 5.0);
vec2 texCoords663 =  vec2(texture_uv[0], texture_uv[1]) + offset663;
float texAlpha663 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset663)[3]);
bool texInBounds663 = (abs(int(texCoords663[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords663[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords663[0] > 0.0f && texCoords663[0] < 1.0f && texCoords663[1] > 0.0f && texCoords663[1] < 1.0f;
float sample663 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset663)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset663)[3] > epsilon)) * 0.001212f * float(texInBounds663);
vec2 offset664 = vec2(onePixel[0] * 7.0, onePixel[1] * 6.0);
vec2 texCoords664 =  vec2(texture_uv[0], texture_uv[1]) + offset664;
float texAlpha664 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset664)[3]);
bool texInBounds664 = (abs(int(texCoords664[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords664[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords664[0] > 0.0f && texCoords664[0] < 1.0f && texCoords664[1] > 0.0f && texCoords664[1] < 1.0f;
float sample664 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset664)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset664)[3] > epsilon)) * 0.001208f * float(texInBounds664);
vec2 offset665 = vec2(onePixel[0] * 7.0, onePixel[1] * 7.0);
vec2 texCoords665 =  vec2(texture_uv[0], texture_uv[1]) + offset665;
float texAlpha665 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset665)[3]);
bool texInBounds665 = (abs(int(texCoords665[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords665[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords665[0] > 0.0f && texCoords665[0] < 1.0f && texCoords665[1] > 0.0f && texCoords665[1] < 1.0f;
float sample665 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset665)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset665)[3] > epsilon)) * 0.001204f * float(texInBounds665);
vec2 offset666 = vec2(onePixel[0] * 7.0, onePixel[1] * 8.0);
vec2 texCoords666 =  vec2(texture_uv[0], texture_uv[1]) + offset666;
float texAlpha666 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset666)[3]);
bool texInBounds666 = (abs(int(texCoords666[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords666[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords666[0] > 0.0f && texCoords666[0] < 1.0f && texCoords666[1] > 0.0f && texCoords666[1] < 1.0f;
float sample666 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset666)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset666)[3] > epsilon)) * 0.001198f * float(texInBounds666);
vec2 offset667 = vec2(onePixel[0] * 7.0, onePixel[1] * 9.0);
vec2 texCoords667 =  vec2(texture_uv[0], texture_uv[1]) + offset667;
float texAlpha667 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset667)[3]);
bool texInBounds667 = (abs(int(texCoords667[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords667[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords667[0] > 0.0f && texCoords667[0] < 1.0f && texCoords667[1] > 0.0f && texCoords667[1] < 1.0f;
float sample667 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset667)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset667)[3] > epsilon)) * 0.001192f * float(texInBounds667);
vec2 offset668 = vec2(onePixel[0] * 7.0, onePixel[1] * 10.0);
vec2 texCoords668 =  vec2(texture_uv[0], texture_uv[1]) + offset668;
float texAlpha668 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset668)[3]);
bool texInBounds668 = (abs(int(texCoords668[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords668[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords668[0] > 0.0f && texCoords668[0] < 1.0f && texCoords668[1] > 0.0f && texCoords668[1] < 1.0f;
float sample668 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset668)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset668)[3] > epsilon)) * 0.001186f * float(texInBounds668);
vec2 offset669 = vec2(onePixel[0] * 7.0, onePixel[1] * 11.0);
vec2 texCoords669 =  vec2(texture_uv[0], texture_uv[1]) + offset669;
float texAlpha669 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset669)[3]);
bool texInBounds669 = (abs(int(texCoords669[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords669[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords669[0] > 0.0f && texCoords669[0] < 1.0f && texCoords669[1] > 0.0f && texCoords669[1] < 1.0f;
float sample669 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset669)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset669)[3] > epsilon)) * 0.001178f * float(texInBounds669);
vec2 offset670 = vec2(onePixel[0] * 7.0, onePixel[1] * 12.0);
vec2 texCoords670 =  vec2(texture_uv[0], texture_uv[1]) + offset670;
float texAlpha670 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset670)[3]);
bool texInBounds670 = (abs(int(texCoords670[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords670[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords670[0] > 0.0f && texCoords670[0] < 1.0f && texCoords670[1] > 0.0f && texCoords670[1] < 1.0f;
float sample670 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset670)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset670)[3] > epsilon)) * 0.001170f * float(texInBounds670);
vec2 offset671 = vec2(onePixel[0] * 7.0, onePixel[1] * 13.0);
vec2 texCoords671 =  vec2(texture_uv[0], texture_uv[1]) + offset671;
float texAlpha671 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset671)[3]);
bool texInBounds671 = (abs(int(texCoords671[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords671[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords671[0] > 0.0f && texCoords671[0] < 1.0f && texCoords671[1] > 0.0f && texCoords671[1] < 1.0f;
float sample671 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset671)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset671)[3] > epsilon)) * 0.001161f * float(texInBounds671);
vec2 offset672 = vec2(onePixel[0] * 8.0, onePixel[1] * -12.0);
vec2 texCoords672 =  vec2(texture_uv[0], texture_uv[1]) + offset672;
float texAlpha672 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset672)[3]);
bool texInBounds672 = (abs(int(texCoords672[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords672[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords672[0] > 0.0f && texCoords672[0] < 1.0f && texCoords672[1] > 0.0f && texCoords672[1] < 1.0f;
float sample672 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset672)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset672)[3] > epsilon)) * 0.001165f * float(texInBounds672);
vec2 offset673 = vec2(onePixel[0] * 8.0, onePixel[1] * -11.0);
vec2 texCoords673 =  vec2(texture_uv[0], texture_uv[1]) + offset673;
float texAlpha673 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset673)[3]);
bool texInBounds673 = (abs(int(texCoords673[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords673[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords673[0] > 0.0f && texCoords673[0] < 1.0f && texCoords673[1] > 0.0f && texCoords673[1] < 1.0f;
float sample673 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset673)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset673)[3] > epsilon)) * 0.001173f * float(texInBounds673);
vec2 offset674 = vec2(onePixel[0] * 8.0, onePixel[1] * -10.0);
vec2 texCoords674 =  vec2(texture_uv[0], texture_uv[1]) + offset674;
float texAlpha674 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset674)[3]);
bool texInBounds674 = (abs(int(texCoords674[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords674[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords674[0] > 0.0f && texCoords674[0] < 1.0f && texCoords674[1] > 0.0f && texCoords674[1] < 1.0f;
float sample674 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset674)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset674)[3] > epsilon)) * 0.001180f * float(texInBounds674);
vec2 offset675 = vec2(onePixel[0] * 8.0, onePixel[1] * -9.0);
vec2 texCoords675 =  vec2(texture_uv[0], texture_uv[1]) + offset675;
float texAlpha675 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset675)[3]);
bool texInBounds675 = (abs(int(texCoords675[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords675[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords675[0] > 0.0f && texCoords675[0] < 1.0f && texCoords675[1] > 0.0f && texCoords675[1] < 1.0f;
float sample675 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset675)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset675)[3] > epsilon)) * 0.001187f * float(texInBounds675);
vec2 offset676 = vec2(onePixel[0] * 8.0, onePixel[1] * -8.0);
vec2 texCoords676 =  vec2(texture_uv[0], texture_uv[1]) + offset676;
float texAlpha676 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset676)[3]);
bool texInBounds676 = (abs(int(texCoords676[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords676[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords676[0] > 0.0f && texCoords676[0] < 1.0f && texCoords676[1] > 0.0f && texCoords676[1] < 1.0f;
float sample676 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset676)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset676)[3] > epsilon)) * 0.001193f * float(texInBounds676);
vec2 offset677 = vec2(onePixel[0] * 8.0, onePixel[1] * -7.0);
vec2 texCoords677 =  vec2(texture_uv[0], texture_uv[1]) + offset677;
float texAlpha677 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset677)[3]);
bool texInBounds677 = (abs(int(texCoords677[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords677[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords677[0] > 0.0f && texCoords677[0] < 1.0f && texCoords677[1] > 0.0f && texCoords677[1] < 1.0f;
float sample677 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset677)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset677)[3] > epsilon)) * 0.001198f * float(texInBounds677);
vec2 offset678 = vec2(onePixel[0] * 8.0, onePixel[1] * -6.0);
vec2 texCoords678 =  vec2(texture_uv[0], texture_uv[1]) + offset678;
float texAlpha678 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset678)[3]);
bool texInBounds678 = (abs(int(texCoords678[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords678[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords678[0] > 0.0f && texCoords678[0] < 1.0f && texCoords678[1] > 0.0f && texCoords678[1] < 1.0f;
float sample678 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset678)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset678)[3] > epsilon)) * 0.001203f * float(texInBounds678);
vec2 offset679 = vec2(onePixel[0] * 8.0, onePixel[1] * -5.0);
vec2 texCoords679 =  vec2(texture_uv[0], texture_uv[1]) + offset679;
float texAlpha679 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset679)[3]);
bool texInBounds679 = (abs(int(texCoords679[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords679[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords679[0] > 0.0f && texCoords679[0] < 1.0f && texCoords679[1] > 0.0f && texCoords679[1] < 1.0f;
float sample679 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset679)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset679)[3] > epsilon)) * 0.001207f * float(texInBounds679);
vec2 offset680 = vec2(onePixel[0] * 8.0, onePixel[1] * -4.0);
vec2 texCoords680 =  vec2(texture_uv[0], texture_uv[1]) + offset680;
float texAlpha680 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset680)[3]);
bool texInBounds680 = (abs(int(texCoords680[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords680[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords680[0] > 0.0f && texCoords680[0] < 1.0f && texCoords680[1] > 0.0f && texCoords680[1] < 1.0f;
float sample680 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset680)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset680)[3] > epsilon)) * 0.001210f * float(texInBounds680);
vec2 offset681 = vec2(onePixel[0] * 8.0, onePixel[1] * -3.0);
vec2 texCoords681 =  vec2(texture_uv[0], texture_uv[1]) + offset681;
float texAlpha681 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset681)[3]);
bool texInBounds681 = (abs(int(texCoords681[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords681[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords681[0] > 0.0f && texCoords681[0] < 1.0f && texCoords681[1] > 0.0f && texCoords681[1] < 1.0f;
float sample681 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset681)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset681)[3] > epsilon)) * 0.001213f * float(texInBounds681);
vec2 offset682 = vec2(onePixel[0] * 8.0, onePixel[1] * -2.0);
vec2 texCoords682 =  vec2(texture_uv[0], texture_uv[1]) + offset682;
float texAlpha682 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset682)[3]);
bool texInBounds682 = (abs(int(texCoords682[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords682[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords682[0] > 0.0f && texCoords682[0] < 1.0f && texCoords682[1] > 0.0f && texCoords682[1] < 1.0f;
float sample682 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset682)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset682)[3] > epsilon)) * 0.001214f * float(texInBounds682);
vec2 offset683 = vec2(onePixel[0] * 8.0, onePixel[1] * -1.0);
vec2 texCoords683 =  vec2(texture_uv[0], texture_uv[1]) + offset683;
float texAlpha683 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset683)[3]);
bool texInBounds683 = (abs(int(texCoords683[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords683[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords683[0] > 0.0f && texCoords683[0] < 1.0f && texCoords683[1] > 0.0f && texCoords683[1] < 1.0f;
float sample683 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset683)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset683)[3] > epsilon)) * 0.001216f * float(texInBounds683);
vec2 offset684 = vec2(onePixel[0] * 8.0, onePixel[1] * 0.0);
vec2 texCoords684 =  vec2(texture_uv[0], texture_uv[1]) + offset684;
float texAlpha684 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset684)[3]);
bool texInBounds684 = (abs(int(texCoords684[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords684[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords684[0] > 0.0f && texCoords684[0] < 1.0f && texCoords684[1] > 0.0f && texCoords684[1] < 1.0f;
float sample684 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset684)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset684)[3] > epsilon)) * 0.001216f * float(texInBounds684);
vec2 offset685 = vec2(onePixel[0] * 8.0, onePixel[1] * 1.0);
vec2 texCoords685 =  vec2(texture_uv[0], texture_uv[1]) + offset685;
float texAlpha685 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset685)[3]);
bool texInBounds685 = (abs(int(texCoords685[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords685[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords685[0] > 0.0f && texCoords685[0] < 1.0f && texCoords685[1] > 0.0f && texCoords685[1] < 1.0f;
float sample685 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset685)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset685)[3] > epsilon)) * 0.001216f * float(texInBounds685);
vec2 offset686 = vec2(onePixel[0] * 8.0, onePixel[1] * 2.0);
vec2 texCoords686 =  vec2(texture_uv[0], texture_uv[1]) + offset686;
float texAlpha686 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset686)[3]);
bool texInBounds686 = (abs(int(texCoords686[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords686[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords686[0] > 0.0f && texCoords686[0] < 1.0f && texCoords686[1] > 0.0f && texCoords686[1] < 1.0f;
float sample686 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset686)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset686)[3] > epsilon)) * 0.001214f * float(texInBounds686);
vec2 offset687 = vec2(onePixel[0] * 8.0, onePixel[1] * 3.0);
vec2 texCoords687 =  vec2(texture_uv[0], texture_uv[1]) + offset687;
float texAlpha687 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset687)[3]);
bool texInBounds687 = (abs(int(texCoords687[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords687[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords687[0] > 0.0f && texCoords687[0] < 1.0f && texCoords687[1] > 0.0f && texCoords687[1] < 1.0f;
float sample687 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset687)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset687)[3] > epsilon)) * 0.001213f * float(texInBounds687);
vec2 offset688 = vec2(onePixel[0] * 8.0, onePixel[1] * 4.0);
vec2 texCoords688 =  vec2(texture_uv[0], texture_uv[1]) + offset688;
float texAlpha688 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset688)[3]);
bool texInBounds688 = (abs(int(texCoords688[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords688[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords688[0] > 0.0f && texCoords688[0] < 1.0f && texCoords688[1] > 0.0f && texCoords688[1] < 1.0f;
float sample688 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset688)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset688)[3] > epsilon)) * 0.001210f * float(texInBounds688);
vec2 offset689 = vec2(onePixel[0] * 8.0, onePixel[1] * 5.0);
vec2 texCoords689 =  vec2(texture_uv[0], texture_uv[1]) + offset689;
float texAlpha689 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset689)[3]);
bool texInBounds689 = (abs(int(texCoords689[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords689[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords689[0] > 0.0f && texCoords689[0] < 1.0f && texCoords689[1] > 0.0f && texCoords689[1] < 1.0f;
float sample689 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset689)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset689)[3] > epsilon)) * 0.001207f * float(texInBounds689);
vec2 offset690 = vec2(onePixel[0] * 8.0, onePixel[1] * 6.0);
vec2 texCoords690 =  vec2(texture_uv[0], texture_uv[1]) + offset690;
float texAlpha690 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset690)[3]);
bool texInBounds690 = (abs(int(texCoords690[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords690[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords690[0] > 0.0f && texCoords690[0] < 1.0f && texCoords690[1] > 0.0f && texCoords690[1] < 1.0f;
float sample690 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset690)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset690)[3] > epsilon)) * 0.001203f * float(texInBounds690);
vec2 offset691 = vec2(onePixel[0] * 8.0, onePixel[1] * 7.0);
vec2 texCoords691 =  vec2(texture_uv[0], texture_uv[1]) + offset691;
float texAlpha691 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset691)[3]);
bool texInBounds691 = (abs(int(texCoords691[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords691[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords691[0] > 0.0f && texCoords691[0] < 1.0f && texCoords691[1] > 0.0f && texCoords691[1] < 1.0f;
float sample691 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset691)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset691)[3] > epsilon)) * 0.001198f * float(texInBounds691);
vec2 offset692 = vec2(onePixel[0] * 8.0, onePixel[1] * 8.0);
vec2 texCoords692 =  vec2(texture_uv[0], texture_uv[1]) + offset692;
float texAlpha692 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset692)[3]);
bool texInBounds692 = (abs(int(texCoords692[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords692[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords692[0] > 0.0f && texCoords692[0] < 1.0f && texCoords692[1] > 0.0f && texCoords692[1] < 1.0f;
float sample692 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset692)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset692)[3] > epsilon)) * 0.001193f * float(texInBounds692);
vec2 offset693 = vec2(onePixel[0] * 8.0, onePixel[1] * 9.0);
vec2 texCoords693 =  vec2(texture_uv[0], texture_uv[1]) + offset693;
float texAlpha693 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset693)[3]);
bool texInBounds693 = (abs(int(texCoords693[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords693[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords693[0] > 0.0f && texCoords693[0] < 1.0f && texCoords693[1] > 0.0f && texCoords693[1] < 1.0f;
float sample693 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset693)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset693)[3] > epsilon)) * 0.001187f * float(texInBounds693);
vec2 offset694 = vec2(onePixel[0] * 8.0, onePixel[1] * 10.0);
vec2 texCoords694 =  vec2(texture_uv[0], texture_uv[1]) + offset694;
float texAlpha694 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset694)[3]);
bool texInBounds694 = (abs(int(texCoords694[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords694[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords694[0] > 0.0f && texCoords694[0] < 1.0f && texCoords694[1] > 0.0f && texCoords694[1] < 1.0f;
float sample694 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset694)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset694)[3] > epsilon)) * 0.001180f * float(texInBounds694);
vec2 offset695 = vec2(onePixel[0] * 8.0, onePixel[1] * 11.0);
vec2 texCoords695 =  vec2(texture_uv[0], texture_uv[1]) + offset695;
float texAlpha695 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset695)[3]);
bool texInBounds695 = (abs(int(texCoords695[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords695[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords695[0] > 0.0f && texCoords695[0] < 1.0f && texCoords695[1] > 0.0f && texCoords695[1] < 1.0f;
float sample695 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset695)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset695)[3] > epsilon)) * 0.001173f * float(texInBounds695);
vec2 offset696 = vec2(onePixel[0] * 8.0, onePixel[1] * 12.0);
vec2 texCoords696 =  vec2(texture_uv[0], texture_uv[1]) + offset696;
float texAlpha696 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset696)[3]);
bool texInBounds696 = (abs(int(texCoords696[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords696[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords696[0] > 0.0f && texCoords696[0] < 1.0f && texCoords696[1] > 0.0f && texCoords696[1] < 1.0f;
float sample696 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset696)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset696)[3] > epsilon)) * 0.001165f * float(texInBounds696);
vec2 offset697 = vec2(onePixel[0] * 9.0, onePixel[1] * -11.0);
vec2 texCoords697 =  vec2(texture_uv[0], texture_uv[1]) + offset697;
float texAlpha697 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset697)[3]);
bool texInBounds697 = (abs(int(texCoords697[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords697[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords697[0] > 0.0f && texCoords697[0] < 1.0f && texCoords697[1] > 0.0f && texCoords697[1] < 1.0f;
float sample697 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset697)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset697)[3] > epsilon)) * 0.001167f * float(texInBounds697);
vec2 offset698 = vec2(onePixel[0] * 9.0, onePixel[1] * -10.0);
vec2 texCoords698 =  vec2(texture_uv[0], texture_uv[1]) + offset698;
float texAlpha698 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset698)[3]);
bool texInBounds698 = (abs(int(texCoords698[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords698[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords698[0] > 0.0f && texCoords698[0] < 1.0f && texCoords698[1] > 0.0f && texCoords698[1] < 1.0f;
float sample698 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset698)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset698)[3] > epsilon)) * 0.001174f * float(texInBounds698);
vec2 offset699 = vec2(onePixel[0] * 9.0, onePixel[1] * -9.0);
vec2 texCoords699 =  vec2(texture_uv[0], texture_uv[1]) + offset699;
float texAlpha699 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset699)[3]);
bool texInBounds699 = (abs(int(texCoords699[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords699[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords699[0] > 0.0f && texCoords699[0] < 1.0f && texCoords699[1] > 0.0f && texCoords699[1] < 1.0f;
float sample699 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset699)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset699)[3] > epsilon)) * 0.001181f * float(texInBounds699);
vec2 offset700 = vec2(onePixel[0] * 9.0, onePixel[1] * -8.0);
vec2 texCoords700 =  vec2(texture_uv[0], texture_uv[1]) + offset700;
float texAlpha700 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset700)[3]);
bool texInBounds700 = (abs(int(texCoords700[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords700[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords700[0] > 0.0f && texCoords700[0] < 1.0f && texCoords700[1] > 0.0f && texCoords700[1] < 1.0f;
float sample700 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset700)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset700)[3] > epsilon)) * 0.001187f * float(texInBounds700);
vec2 offset701 = vec2(onePixel[0] * 9.0, onePixel[1] * -7.0);
vec2 texCoords701 =  vec2(texture_uv[0], texture_uv[1]) + offset701;
float texAlpha701 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset701)[3]);
bool texInBounds701 = (abs(int(texCoords701[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords701[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords701[0] > 0.0f && texCoords701[0] < 1.0f && texCoords701[1] > 0.0f && texCoords701[1] < 1.0f;
float sample701 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset701)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset701)[3] > epsilon)) * 0.001192f * float(texInBounds701);
vec2 offset702 = vec2(onePixel[0] * 9.0, onePixel[1] * -6.0);
vec2 texCoords702 =  vec2(texture_uv[0], texture_uv[1]) + offset702;
float texAlpha702 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset702)[3]);
bool texInBounds702 = (abs(int(texCoords702[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords702[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords702[0] > 0.0f && texCoords702[0] < 1.0f && texCoords702[1] > 0.0f && texCoords702[1] < 1.0f;
float sample702 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset702)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset702)[3] > epsilon)) * 0.001197f * float(texInBounds702);
vec2 offset703 = vec2(onePixel[0] * 9.0, onePixel[1] * -5.0);
vec2 texCoords703 =  vec2(texture_uv[0], texture_uv[1]) + offset703;
float texAlpha703 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset703)[3]);
bool texInBounds703 = (abs(int(texCoords703[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords703[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords703[0] > 0.0f && texCoords703[0] < 1.0f && texCoords703[1] > 0.0f && texCoords703[1] < 1.0f;
float sample703 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset703)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset703)[3] > epsilon)) * 0.001201f * float(texInBounds703);
vec2 offset704 = vec2(onePixel[0] * 9.0, onePixel[1] * -4.0);
vec2 texCoords704 =  vec2(texture_uv[0], texture_uv[1]) + offset704;
float texAlpha704 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset704)[3]);
bool texInBounds704 = (abs(int(texCoords704[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords704[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords704[0] > 0.0f && texCoords704[0] < 1.0f && texCoords704[1] > 0.0f && texCoords704[1] < 1.0f;
float sample704 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset704)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset704)[3] > epsilon)) * 0.001204f * float(texInBounds704);
vec2 offset705 = vec2(onePixel[0] * 9.0, onePixel[1] * -3.0);
vec2 texCoords705 =  vec2(texture_uv[0], texture_uv[1]) + offset705;
float texAlpha705 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset705)[3]);
bool texInBounds705 = (abs(int(texCoords705[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords705[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords705[0] > 0.0f && texCoords705[0] < 1.0f && texCoords705[1] > 0.0f && texCoords705[1] < 1.0f;
float sample705 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset705)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset705)[3] > epsilon)) * 0.001207f * float(texInBounds705);
vec2 offset706 = vec2(onePixel[0] * 9.0, onePixel[1] * -2.0);
vec2 texCoords706 =  vec2(texture_uv[0], texture_uv[1]) + offset706;
float texAlpha706 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset706)[3]);
bool texInBounds706 = (abs(int(texCoords706[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords706[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords706[0] > 0.0f && texCoords706[0] < 1.0f && texCoords706[1] > 0.0f && texCoords706[1] < 1.0f;
float sample706 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset706)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset706)[3] > epsilon)) * 0.001208f * float(texInBounds706);
vec2 offset707 = vec2(onePixel[0] * 9.0, onePixel[1] * -1.0);
vec2 texCoords707 =  vec2(texture_uv[0], texture_uv[1]) + offset707;
float texAlpha707 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset707)[3]);
bool texInBounds707 = (abs(int(texCoords707[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords707[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords707[0] > 0.0f && texCoords707[0] < 1.0f && texCoords707[1] > 0.0f && texCoords707[1] < 1.0f;
float sample707 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset707)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset707)[3] > epsilon)) * 0.001209f * float(texInBounds707);
vec2 offset708 = vec2(onePixel[0] * 9.0, onePixel[1] * 0.0);
vec2 texCoords708 =  vec2(texture_uv[0], texture_uv[1]) + offset708;
float texAlpha708 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset708)[3]);
bool texInBounds708 = (abs(int(texCoords708[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords708[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords708[0] > 0.0f && texCoords708[0] < 1.0f && texCoords708[1] > 0.0f && texCoords708[1] < 1.0f;
float sample708 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset708)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset708)[3] > epsilon)) * 0.001210f * float(texInBounds708);
vec2 offset709 = vec2(onePixel[0] * 9.0, onePixel[1] * 1.0);
vec2 texCoords709 =  vec2(texture_uv[0], texture_uv[1]) + offset709;
float texAlpha709 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset709)[3]);
bool texInBounds709 = (abs(int(texCoords709[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords709[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords709[0] > 0.0f && texCoords709[0] < 1.0f && texCoords709[1] > 0.0f && texCoords709[1] < 1.0f;
float sample709 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset709)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset709)[3] > epsilon)) * 0.001209f * float(texInBounds709);
vec2 offset710 = vec2(onePixel[0] * 9.0, onePixel[1] * 2.0);
vec2 texCoords710 =  vec2(texture_uv[0], texture_uv[1]) + offset710;
float texAlpha710 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset710)[3]);
bool texInBounds710 = (abs(int(texCoords710[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords710[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords710[0] > 0.0f && texCoords710[0] < 1.0f && texCoords710[1] > 0.0f && texCoords710[1] < 1.0f;
float sample710 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset710)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset710)[3] > epsilon)) * 0.001208f * float(texInBounds710);
vec2 offset711 = vec2(onePixel[0] * 9.0, onePixel[1] * 3.0);
vec2 texCoords711 =  vec2(texture_uv[0], texture_uv[1]) + offset711;
float texAlpha711 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset711)[3]);
bool texInBounds711 = (abs(int(texCoords711[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords711[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords711[0] > 0.0f && texCoords711[0] < 1.0f && texCoords711[1] > 0.0f && texCoords711[1] < 1.0f;
float sample711 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset711)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset711)[3] > epsilon)) * 0.001207f * float(texInBounds711);
vec2 offset712 = vec2(onePixel[0] * 9.0, onePixel[1] * 4.0);
vec2 texCoords712 =  vec2(texture_uv[0], texture_uv[1]) + offset712;
float texAlpha712 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset712)[3]);
bool texInBounds712 = (abs(int(texCoords712[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords712[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords712[0] > 0.0f && texCoords712[0] < 1.0f && texCoords712[1] > 0.0f && texCoords712[1] < 1.0f;
float sample712 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset712)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset712)[3] > epsilon)) * 0.001204f * float(texInBounds712);
vec2 offset713 = vec2(onePixel[0] * 9.0, onePixel[1] * 5.0);
vec2 texCoords713 =  vec2(texture_uv[0], texture_uv[1]) + offset713;
float texAlpha713 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset713)[3]);
bool texInBounds713 = (abs(int(texCoords713[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords713[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords713[0] > 0.0f && texCoords713[0] < 1.0f && texCoords713[1] > 0.0f && texCoords713[1] < 1.0f;
float sample713 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset713)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset713)[3] > epsilon)) * 0.001201f * float(texInBounds713);
vec2 offset714 = vec2(onePixel[0] * 9.0, onePixel[1] * 6.0);
vec2 texCoords714 =  vec2(texture_uv[0], texture_uv[1]) + offset714;
float texAlpha714 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset714)[3]);
bool texInBounds714 = (abs(int(texCoords714[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords714[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords714[0] > 0.0f && texCoords714[0] < 1.0f && texCoords714[1] > 0.0f && texCoords714[1] < 1.0f;
float sample714 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset714)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset714)[3] > epsilon)) * 0.001197f * float(texInBounds714);
vec2 offset715 = vec2(onePixel[0] * 9.0, onePixel[1] * 7.0);
vec2 texCoords715 =  vec2(texture_uv[0], texture_uv[1]) + offset715;
float texAlpha715 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset715)[3]);
bool texInBounds715 = (abs(int(texCoords715[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords715[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords715[0] > 0.0f && texCoords715[0] < 1.0f && texCoords715[1] > 0.0f && texCoords715[1] < 1.0f;
float sample715 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset715)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset715)[3] > epsilon)) * 0.001192f * float(texInBounds715);
vec2 offset716 = vec2(onePixel[0] * 9.0, onePixel[1] * 8.0);
vec2 texCoords716 =  vec2(texture_uv[0], texture_uv[1]) + offset716;
float texAlpha716 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset716)[3]);
bool texInBounds716 = (abs(int(texCoords716[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords716[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords716[0] > 0.0f && texCoords716[0] < 1.0f && texCoords716[1] > 0.0f && texCoords716[1] < 1.0f;
float sample716 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset716)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset716)[3] > epsilon)) * 0.001187f * float(texInBounds716);
vec2 offset717 = vec2(onePixel[0] * 9.0, onePixel[1] * 9.0);
vec2 texCoords717 =  vec2(texture_uv[0], texture_uv[1]) + offset717;
float texAlpha717 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset717)[3]);
bool texInBounds717 = (abs(int(texCoords717[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords717[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords717[0] > 0.0f && texCoords717[0] < 1.0f && texCoords717[1] > 0.0f && texCoords717[1] < 1.0f;
float sample717 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset717)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset717)[3] > epsilon)) * 0.001181f * float(texInBounds717);
vec2 offset718 = vec2(onePixel[0] * 9.0, onePixel[1] * 10.0);
vec2 texCoords718 =  vec2(texture_uv[0], texture_uv[1]) + offset718;
float texAlpha718 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset718)[3]);
bool texInBounds718 = (abs(int(texCoords718[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords718[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords718[0] > 0.0f && texCoords718[0] < 1.0f && texCoords718[1] > 0.0f && texCoords718[1] < 1.0f;
float sample718 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset718)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset718)[3] > epsilon)) * 0.001174f * float(texInBounds718);
vec2 offset719 = vec2(onePixel[0] * 9.0, onePixel[1] * 11.0);
vec2 texCoords719 =  vec2(texture_uv[0], texture_uv[1]) + offset719;
float texAlpha719 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset719)[3]);
bool texInBounds719 = (abs(int(texCoords719[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords719[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords719[0] > 0.0f && texCoords719[0] < 1.0f && texCoords719[1] > 0.0f && texCoords719[1] < 1.0f;
float sample719 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset719)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset719)[3] > epsilon)) * 0.001167f * float(texInBounds719);
vec2 offset720 = vec2(onePixel[0] * 10.0, onePixel[1] * -10.0);
vec2 texCoords720 =  vec2(texture_uv[0], texture_uv[1]) + offset720;
float texAlpha720 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset720)[3]);
bool texInBounds720 = (abs(int(texCoords720[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords720[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords720[0] > 0.0f && texCoords720[0] < 1.0f && texCoords720[1] > 0.0f && texCoords720[1] < 1.0f;
float sample720 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset720)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset720)[3] > epsilon)) * 0.001168f * float(texInBounds720);
vec2 offset721 = vec2(onePixel[0] * 10.0, onePixel[1] * -9.0);
vec2 texCoords721 =  vec2(texture_uv[0], texture_uv[1]) + offset721;
float texAlpha721 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset721)[3]);
bool texInBounds721 = (abs(int(texCoords721[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords721[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords721[0] > 0.0f && texCoords721[0] < 1.0f && texCoords721[1] > 0.0f && texCoords721[1] < 1.0f;
float sample721 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset721)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset721)[3] > epsilon)) * 0.001174f * float(texInBounds721);
vec2 offset722 = vec2(onePixel[0] * 10.0, onePixel[1] * -8.0);
vec2 texCoords722 =  vec2(texture_uv[0], texture_uv[1]) + offset722;
float texAlpha722 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset722)[3]);
bool texInBounds722 = (abs(int(texCoords722[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords722[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords722[0] > 0.0f && texCoords722[0] < 1.0f && texCoords722[1] > 0.0f && texCoords722[1] < 1.0f;
float sample722 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset722)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset722)[3] > epsilon)) * 0.001180f * float(texInBounds722);
vec2 offset723 = vec2(onePixel[0] * 10.0, onePixel[1] * -7.0);
vec2 texCoords723 =  vec2(texture_uv[0], texture_uv[1]) + offset723;
float texAlpha723 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset723)[3]);
bool texInBounds723 = (abs(int(texCoords723[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords723[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords723[0] > 0.0f && texCoords723[0] < 1.0f && texCoords723[1] > 0.0f && texCoords723[1] < 1.0f;
float sample723 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset723)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset723)[3] > epsilon)) * 0.001186f * float(texInBounds723);
vec2 offset724 = vec2(onePixel[0] * 10.0, onePixel[1] * -6.0);
vec2 texCoords724 =  vec2(texture_uv[0], texture_uv[1]) + offset724;
float texAlpha724 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset724)[3]);
bool texInBounds724 = (abs(int(texCoords724[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords724[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords724[0] > 0.0f && texCoords724[0] < 1.0f && texCoords724[1] > 0.0f && texCoords724[1] < 1.0f;
float sample724 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset724)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset724)[3] > epsilon)) * 0.001190f * float(texInBounds724);
vec2 offset725 = vec2(onePixel[0] * 10.0, onePixel[1] * -5.0);
vec2 texCoords725 =  vec2(texture_uv[0], texture_uv[1]) + offset725;
float texAlpha725 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset725)[3]);
bool texInBounds725 = (abs(int(texCoords725[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords725[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords725[0] > 0.0f && texCoords725[0] < 1.0f && texCoords725[1] > 0.0f && texCoords725[1] < 1.0f;
float sample725 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset725)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset725)[3] > epsilon)) * 0.001194f * float(texInBounds725);
vec2 offset726 = vec2(onePixel[0] * 10.0, onePixel[1] * -4.0);
vec2 texCoords726 =  vec2(texture_uv[0], texture_uv[1]) + offset726;
float texAlpha726 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset726)[3]);
bool texInBounds726 = (abs(int(texCoords726[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords726[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords726[0] > 0.0f && texCoords726[0] < 1.0f && texCoords726[1] > 0.0f && texCoords726[1] < 1.0f;
float sample726 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset726)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset726)[3] > epsilon)) * 0.001197f * float(texInBounds726);
vec2 offset727 = vec2(onePixel[0] * 10.0, onePixel[1] * -3.0);
vec2 texCoords727 =  vec2(texture_uv[0], texture_uv[1]) + offset727;
float texAlpha727 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset727)[3]);
bool texInBounds727 = (abs(int(texCoords727[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords727[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords727[0] > 0.0f && texCoords727[0] < 1.0f && texCoords727[1] > 0.0f && texCoords727[1] < 1.0f;
float sample727 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset727)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset727)[3] > epsilon)) * 0.001200f * float(texInBounds727);
vec2 offset728 = vec2(onePixel[0] * 10.0, onePixel[1] * -2.0);
vec2 texCoords728 =  vec2(texture_uv[0], texture_uv[1]) + offset728;
float texAlpha728 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset728)[3]);
bool texInBounds728 = (abs(int(texCoords728[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords728[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords728[0] > 0.0f && texCoords728[0] < 1.0f && texCoords728[1] > 0.0f && texCoords728[1] < 1.0f;
float sample728 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset728)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset728)[3] > epsilon)) * 0.001202f * float(texInBounds728);
vec2 offset729 = vec2(onePixel[0] * 10.0, onePixel[1] * -1.0);
vec2 texCoords729 =  vec2(texture_uv[0], texture_uv[1]) + offset729;
float texAlpha729 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset729)[3]);
bool texInBounds729 = (abs(int(texCoords729[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords729[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords729[0] > 0.0f && texCoords729[0] < 1.0f && texCoords729[1] > 0.0f && texCoords729[1] < 1.0f;
float sample729 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset729)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset729)[3] > epsilon)) * 0.001203f * float(texInBounds729);
vec2 offset730 = vec2(onePixel[0] * 10.0, onePixel[1] * 0.0);
vec2 texCoords730 =  vec2(texture_uv[0], texture_uv[1]) + offset730;
float texAlpha730 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset730)[3]);
bool texInBounds730 = (abs(int(texCoords730[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords730[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords730[0] > 0.0f && texCoords730[0] < 1.0f && texCoords730[1] > 0.0f && texCoords730[1] < 1.0f;
float sample730 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset730)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset730)[3] > epsilon)) * 0.001203f * float(texInBounds730);
vec2 offset731 = vec2(onePixel[0] * 10.0, onePixel[1] * 1.0);
vec2 texCoords731 =  vec2(texture_uv[0], texture_uv[1]) + offset731;
float texAlpha731 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset731)[3]);
bool texInBounds731 = (abs(int(texCoords731[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords731[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords731[0] > 0.0f && texCoords731[0] < 1.0f && texCoords731[1] > 0.0f && texCoords731[1] < 1.0f;
float sample731 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset731)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset731)[3] > epsilon)) * 0.001203f * float(texInBounds731);
vec2 offset732 = vec2(onePixel[0] * 10.0, onePixel[1] * 2.0);
vec2 texCoords732 =  vec2(texture_uv[0], texture_uv[1]) + offset732;
float texAlpha732 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset732)[3]);
bool texInBounds732 = (abs(int(texCoords732[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords732[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords732[0] > 0.0f && texCoords732[0] < 1.0f && texCoords732[1] > 0.0f && texCoords732[1] < 1.0f;
float sample732 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset732)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset732)[3] > epsilon)) * 0.001202f * float(texInBounds732);
vec2 offset733 = vec2(onePixel[0] * 10.0, onePixel[1] * 3.0);
vec2 texCoords733 =  vec2(texture_uv[0], texture_uv[1]) + offset733;
float texAlpha733 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset733)[3]);
bool texInBounds733 = (abs(int(texCoords733[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords733[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords733[0] > 0.0f && texCoords733[0] < 1.0f && texCoords733[1] > 0.0f && texCoords733[1] < 1.0f;
float sample733 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset733)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset733)[3] > epsilon)) * 0.001200f * float(texInBounds733);
vec2 offset734 = vec2(onePixel[0] * 10.0, onePixel[1] * 4.0);
vec2 texCoords734 =  vec2(texture_uv[0], texture_uv[1]) + offset734;
float texAlpha734 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset734)[3]);
bool texInBounds734 = (abs(int(texCoords734[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords734[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords734[0] > 0.0f && texCoords734[0] < 1.0f && texCoords734[1] > 0.0f && texCoords734[1] < 1.0f;
float sample734 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset734)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset734)[3] > epsilon)) * 0.001197f * float(texInBounds734);
vec2 offset735 = vec2(onePixel[0] * 10.0, onePixel[1] * 5.0);
vec2 texCoords735 =  vec2(texture_uv[0], texture_uv[1]) + offset735;
float texAlpha735 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset735)[3]);
bool texInBounds735 = (abs(int(texCoords735[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords735[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords735[0] > 0.0f && texCoords735[0] < 1.0f && texCoords735[1] > 0.0f && texCoords735[1] < 1.0f;
float sample735 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset735)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset735)[3] > epsilon)) * 0.001194f * float(texInBounds735);
vec2 offset736 = vec2(onePixel[0] * 10.0, onePixel[1] * 6.0);
vec2 texCoords736 =  vec2(texture_uv[0], texture_uv[1]) + offset736;
float texAlpha736 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset736)[3]);
bool texInBounds736 = (abs(int(texCoords736[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords736[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords736[0] > 0.0f && texCoords736[0] < 1.0f && texCoords736[1] > 0.0f && texCoords736[1] < 1.0f;
float sample736 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset736)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset736)[3] > epsilon)) * 0.001190f * float(texInBounds736);
vec2 offset737 = vec2(onePixel[0] * 10.0, onePixel[1] * 7.0);
vec2 texCoords737 =  vec2(texture_uv[0], texture_uv[1]) + offset737;
float texAlpha737 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset737)[3]);
bool texInBounds737 = (abs(int(texCoords737[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords737[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords737[0] > 0.0f && texCoords737[0] < 1.0f && texCoords737[1] > 0.0f && texCoords737[1] < 1.0f;
float sample737 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset737)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset737)[3] > epsilon)) * 0.001186f * float(texInBounds737);
vec2 offset738 = vec2(onePixel[0] * 10.0, onePixel[1] * 8.0);
vec2 texCoords738 =  vec2(texture_uv[0], texture_uv[1]) + offset738;
float texAlpha738 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset738)[3]);
bool texInBounds738 = (abs(int(texCoords738[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords738[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords738[0] > 0.0f && texCoords738[0] < 1.0f && texCoords738[1] > 0.0f && texCoords738[1] < 1.0f;
float sample738 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset738)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset738)[3] > epsilon)) * 0.001180f * float(texInBounds738);
vec2 offset739 = vec2(onePixel[0] * 10.0, onePixel[1] * 9.0);
vec2 texCoords739 =  vec2(texture_uv[0], texture_uv[1]) + offset739;
float texAlpha739 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset739)[3]);
bool texInBounds739 = (abs(int(texCoords739[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords739[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords739[0] > 0.0f && texCoords739[0] < 1.0f && texCoords739[1] > 0.0f && texCoords739[1] < 1.0f;
float sample739 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset739)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset739)[3] > epsilon)) * 0.001174f * float(texInBounds739);
vec2 offset740 = vec2(onePixel[0] * 10.0, onePixel[1] * 10.0);
vec2 texCoords740 =  vec2(texture_uv[0], texture_uv[1]) + offset740;
float texAlpha740 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset740)[3]);
bool texInBounds740 = (abs(int(texCoords740[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords740[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords740[0] > 0.0f && texCoords740[0] < 1.0f && texCoords740[1] > 0.0f && texCoords740[1] < 1.0f;
float sample740 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset740)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset740)[3] > epsilon)) * 0.001168f * float(texInBounds740);
vec2 offset741 = vec2(onePixel[0] * 11.0, onePixel[1] * -9.0);
vec2 texCoords741 =  vec2(texture_uv[0], texture_uv[1]) + offset741;
float texAlpha741 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset741)[3]);
bool texInBounds741 = (abs(int(texCoords741[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords741[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords741[0] > 0.0f && texCoords741[0] < 1.0f && texCoords741[1] > 0.0f && texCoords741[1] < 1.0f;
float sample741 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset741)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset741)[3] > epsilon)) * 0.001167f * float(texInBounds741);
vec2 offset742 = vec2(onePixel[0] * 11.0, onePixel[1] * -8.0);
vec2 texCoords742 =  vec2(texture_uv[0], texture_uv[1]) + offset742;
float texAlpha742 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset742)[3]);
bool texInBounds742 = (abs(int(texCoords742[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords742[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords742[0] > 0.0f && texCoords742[0] < 1.0f && texCoords742[1] > 0.0f && texCoords742[1] < 1.0f;
float sample742 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset742)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset742)[3] > epsilon)) * 0.001173f * float(texInBounds742);
vec2 offset743 = vec2(onePixel[0] * 11.0, onePixel[1] * -7.0);
vec2 texCoords743 =  vec2(texture_uv[0], texture_uv[1]) + offset743;
float texAlpha743 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset743)[3]);
bool texInBounds743 = (abs(int(texCoords743[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords743[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords743[0] > 0.0f && texCoords743[0] < 1.0f && texCoords743[1] > 0.0f && texCoords743[1] < 1.0f;
float sample743 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset743)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset743)[3] > epsilon)) * 0.001178f * float(texInBounds743);
vec2 offset744 = vec2(onePixel[0] * 11.0, onePixel[1] * -6.0);
vec2 texCoords744 =  vec2(texture_uv[0], texture_uv[1]) + offset744;
float texAlpha744 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset744)[3]);
bool texInBounds744 = (abs(int(texCoords744[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords744[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords744[0] > 0.0f && texCoords744[0] < 1.0f && texCoords744[1] > 0.0f && texCoords744[1] < 1.0f;
float sample744 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset744)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset744)[3] > epsilon)) * 0.001183f * float(texInBounds744);
vec2 offset745 = vec2(onePixel[0] * 11.0, onePixel[1] * -5.0);
vec2 texCoords745 =  vec2(texture_uv[0], texture_uv[1]) + offset745;
float texAlpha745 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset745)[3]);
bool texInBounds745 = (abs(int(texCoords745[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords745[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords745[0] > 0.0f && texCoords745[0] < 1.0f && texCoords745[1] > 0.0f && texCoords745[1] < 1.0f;
float sample745 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset745)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset745)[3] > epsilon)) * 0.001187f * float(texInBounds745);
vec2 offset746 = vec2(onePixel[0] * 11.0, onePixel[1] * -4.0);
vec2 texCoords746 =  vec2(texture_uv[0], texture_uv[1]) + offset746;
float texAlpha746 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset746)[3]);
bool texInBounds746 = (abs(int(texCoords746[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords746[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords746[0] > 0.0f && texCoords746[0] < 1.0f && texCoords746[1] > 0.0f && texCoords746[1] < 1.0f;
float sample746 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset746)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset746)[3] > epsilon)) * 0.001190f * float(texInBounds746);
vec2 offset747 = vec2(onePixel[0] * 11.0, onePixel[1] * -3.0);
vec2 texCoords747 =  vec2(texture_uv[0], texture_uv[1]) + offset747;
float texAlpha747 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset747)[3]);
bool texInBounds747 = (abs(int(texCoords747[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords747[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords747[0] > 0.0f && texCoords747[0] < 1.0f && texCoords747[1] > 0.0f && texCoords747[1] < 1.0f;
float sample747 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset747)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset747)[3] > epsilon)) * 0.001192f * float(texInBounds747);
vec2 offset748 = vec2(onePixel[0] * 11.0, onePixel[1] * -2.0);
vec2 texCoords748 =  vec2(texture_uv[0], texture_uv[1]) + offset748;
float texAlpha748 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset748)[3]);
bool texInBounds748 = (abs(int(texCoords748[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords748[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords748[0] > 0.0f && texCoords748[0] < 1.0f && texCoords748[1] > 0.0f && texCoords748[1] < 1.0f;
float sample748 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset748)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset748)[3] > epsilon)) * 0.001194f * float(texInBounds748);
vec2 offset749 = vec2(onePixel[0] * 11.0, onePixel[1] * -1.0);
vec2 texCoords749 =  vec2(texture_uv[0], texture_uv[1]) + offset749;
float texAlpha749 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset749)[3]);
bool texInBounds749 = (abs(int(texCoords749[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords749[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords749[0] > 0.0f && texCoords749[0] < 1.0f && texCoords749[1] > 0.0f && texCoords749[1] < 1.0f;
float sample749 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset749)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset749)[3] > epsilon)) * 0.001195f * float(texInBounds749);
vec2 offset750 = vec2(onePixel[0] * 11.0, onePixel[1] * 0.0);
vec2 texCoords750 =  vec2(texture_uv[0], texture_uv[1]) + offset750;
float texAlpha750 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset750)[3]);
bool texInBounds750 = (abs(int(texCoords750[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords750[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords750[0] > 0.0f && texCoords750[0] < 1.0f && texCoords750[1] > 0.0f && texCoords750[1] < 1.0f;
float sample750 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset750)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset750)[3] > epsilon)) * 0.001195f * float(texInBounds750);
vec2 offset751 = vec2(onePixel[0] * 11.0, onePixel[1] * 1.0);
vec2 texCoords751 =  vec2(texture_uv[0], texture_uv[1]) + offset751;
float texAlpha751 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset751)[3]);
bool texInBounds751 = (abs(int(texCoords751[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords751[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords751[0] > 0.0f && texCoords751[0] < 1.0f && texCoords751[1] > 0.0f && texCoords751[1] < 1.0f;
float sample751 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset751)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset751)[3] > epsilon)) * 0.001195f * float(texInBounds751);
vec2 offset752 = vec2(onePixel[0] * 11.0, onePixel[1] * 2.0);
vec2 texCoords752 =  vec2(texture_uv[0], texture_uv[1]) + offset752;
float texAlpha752 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset752)[3]);
bool texInBounds752 = (abs(int(texCoords752[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords752[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords752[0] > 0.0f && texCoords752[0] < 1.0f && texCoords752[1] > 0.0f && texCoords752[1] < 1.0f;
float sample752 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset752)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset752)[3] > epsilon)) * 0.001194f * float(texInBounds752);
vec2 offset753 = vec2(onePixel[0] * 11.0, onePixel[1] * 3.0);
vec2 texCoords753 =  vec2(texture_uv[0], texture_uv[1]) + offset753;
float texAlpha753 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset753)[3]);
bool texInBounds753 = (abs(int(texCoords753[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords753[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords753[0] > 0.0f && texCoords753[0] < 1.0f && texCoords753[1] > 0.0f && texCoords753[1] < 1.0f;
float sample753 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset753)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset753)[3] > epsilon)) * 0.001192f * float(texInBounds753);
vec2 offset754 = vec2(onePixel[0] * 11.0, onePixel[1] * 4.0);
vec2 texCoords754 =  vec2(texture_uv[0], texture_uv[1]) + offset754;
float texAlpha754 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset754)[3]);
bool texInBounds754 = (abs(int(texCoords754[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords754[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords754[0] > 0.0f && texCoords754[0] < 1.0f && texCoords754[1] > 0.0f && texCoords754[1] < 1.0f;
float sample754 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset754)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset754)[3] > epsilon)) * 0.001190f * float(texInBounds754);
vec2 offset755 = vec2(onePixel[0] * 11.0, onePixel[1] * 5.0);
vec2 texCoords755 =  vec2(texture_uv[0], texture_uv[1]) + offset755;
float texAlpha755 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset755)[3]);
bool texInBounds755 = (abs(int(texCoords755[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords755[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords755[0] > 0.0f && texCoords755[0] < 1.0f && texCoords755[1] > 0.0f && texCoords755[1] < 1.0f;
float sample755 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset755)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset755)[3] > epsilon)) * 0.001187f * float(texInBounds755);
vec2 offset756 = vec2(onePixel[0] * 11.0, onePixel[1] * 6.0);
vec2 texCoords756 =  vec2(texture_uv[0], texture_uv[1]) + offset756;
float texAlpha756 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset756)[3]);
bool texInBounds756 = (abs(int(texCoords756[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords756[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords756[0] > 0.0f && texCoords756[0] < 1.0f && texCoords756[1] > 0.0f && texCoords756[1] < 1.0f;
float sample756 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset756)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset756)[3] > epsilon)) * 0.001183f * float(texInBounds756);
vec2 offset757 = vec2(onePixel[0] * 11.0, onePixel[1] * 7.0);
vec2 texCoords757 =  vec2(texture_uv[0], texture_uv[1]) + offset757;
float texAlpha757 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset757)[3]);
bool texInBounds757 = (abs(int(texCoords757[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords757[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords757[0] > 0.0f && texCoords757[0] < 1.0f && texCoords757[1] > 0.0f && texCoords757[1] < 1.0f;
float sample757 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset757)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset757)[3] > epsilon)) * 0.001178f * float(texInBounds757);
vec2 offset758 = vec2(onePixel[0] * 11.0, onePixel[1] * 8.0);
vec2 texCoords758 =  vec2(texture_uv[0], texture_uv[1]) + offset758;
float texAlpha758 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset758)[3]);
bool texInBounds758 = (abs(int(texCoords758[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords758[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords758[0] > 0.0f && texCoords758[0] < 1.0f && texCoords758[1] > 0.0f && texCoords758[1] < 1.0f;
float sample758 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset758)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset758)[3] > epsilon)) * 0.001173f * float(texInBounds758);
vec2 offset759 = vec2(onePixel[0] * 11.0, onePixel[1] * 9.0);
vec2 texCoords759 =  vec2(texture_uv[0], texture_uv[1]) + offset759;
float texAlpha759 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset759)[3]);
bool texInBounds759 = (abs(int(texCoords759[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords759[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords759[0] > 0.0f && texCoords759[0] < 1.0f && texCoords759[1] > 0.0f && texCoords759[1] < 1.0f;
float sample759 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset759)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset759)[3] > epsilon)) * 0.001167f * float(texInBounds759);
vec2 offset760 = vec2(onePixel[0] * 12.0, onePixel[1] * -8.0);
vec2 texCoords760 =  vec2(texture_uv[0], texture_uv[1]) + offset760;
float texAlpha760 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset760)[3]);
bool texInBounds760 = (abs(int(texCoords760[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords760[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords760[0] > 0.0f && texCoords760[0] < 1.0f && texCoords760[1] > 0.0f && texCoords760[1] < 1.0f;
float sample760 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset760)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset760)[3] > epsilon)) * 0.001165f * float(texInBounds760);
vec2 offset761 = vec2(onePixel[0] * 12.0, onePixel[1] * -7.0);
vec2 texCoords761 =  vec2(texture_uv[0], texture_uv[1]) + offset761;
float texAlpha761 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset761)[3]);
bool texInBounds761 = (abs(int(texCoords761[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords761[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords761[0] > 0.0f && texCoords761[0] < 1.0f && texCoords761[1] > 0.0f && texCoords761[1] < 1.0f;
float sample761 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset761)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset761)[3] > epsilon)) * 0.001170f * float(texInBounds761);
vec2 offset762 = vec2(onePixel[0] * 12.0, onePixel[1] * -6.0);
vec2 texCoords762 =  vec2(texture_uv[0], texture_uv[1]) + offset762;
float texAlpha762 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset762)[3]);
bool texInBounds762 = (abs(int(texCoords762[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords762[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords762[0] > 0.0f && texCoords762[0] < 1.0f && texCoords762[1] > 0.0f && texCoords762[1] < 1.0f;
float sample762 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset762)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset762)[3] > epsilon)) * 0.001175f * float(texInBounds762);
vec2 offset763 = vec2(onePixel[0] * 12.0, onePixel[1] * -5.0);
vec2 texCoords763 =  vec2(texture_uv[0], texture_uv[1]) + offset763;
float texAlpha763 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset763)[3]);
bool texInBounds763 = (abs(int(texCoords763[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords763[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords763[0] > 0.0f && texCoords763[0] < 1.0f && texCoords763[1] > 0.0f && texCoords763[1] < 1.0f;
float sample763 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset763)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset763)[3] > epsilon)) * 0.001178f * float(texInBounds763);
vec2 offset764 = vec2(onePixel[0] * 12.0, onePixel[1] * -4.0);
vec2 texCoords764 =  vec2(texture_uv[0], texture_uv[1]) + offset764;
float texAlpha764 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset764)[3]);
bool texInBounds764 = (abs(int(texCoords764[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords764[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords764[0] > 0.0f && texCoords764[0] < 1.0f && texCoords764[1] > 0.0f && texCoords764[1] < 1.0f;
float sample764 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset764)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset764)[3] > epsilon)) * 0.001182f * float(texInBounds764);
vec2 offset765 = vec2(onePixel[0] * 12.0, onePixel[1] * -3.0);
vec2 texCoords765 =  vec2(texture_uv[0], texture_uv[1]) + offset765;
float texAlpha765 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset765)[3]);
bool texInBounds765 = (abs(int(texCoords765[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords765[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords765[0] > 0.0f && texCoords765[0] < 1.0f && texCoords765[1] > 0.0f && texCoords765[1] < 1.0f;
float sample765 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset765)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset765)[3] > epsilon)) * 0.001184f * float(texInBounds765);
vec2 offset766 = vec2(onePixel[0] * 12.0, onePixel[1] * -2.0);
vec2 texCoords766 =  vec2(texture_uv[0], texture_uv[1]) + offset766;
float texAlpha766 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset766)[3]);
bool texInBounds766 = (abs(int(texCoords766[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords766[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords766[0] > 0.0f && texCoords766[0] < 1.0f && texCoords766[1] > 0.0f && texCoords766[1] < 1.0f;
float sample766 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset766)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset766)[3] > epsilon)) * 0.001186f * float(texInBounds766);
vec2 offset767 = vec2(onePixel[0] * 12.0, onePixel[1] * -1.0);
vec2 texCoords767 =  vec2(texture_uv[0], texture_uv[1]) + offset767;
float texAlpha767 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset767)[3]);
bool texInBounds767 = (abs(int(texCoords767[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords767[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords767[0] > 0.0f && texCoords767[0] < 1.0f && texCoords767[1] > 0.0f && texCoords767[1] < 1.0f;
float sample767 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset767)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset767)[3] > epsilon)) * 0.001187f * float(texInBounds767);
vec2 offset768 = vec2(onePixel[0] * 12.0, onePixel[1] * 0.0);
vec2 texCoords768 =  vec2(texture_uv[0], texture_uv[1]) + offset768;
float texAlpha768 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset768)[3]);
bool texInBounds768 = (abs(int(texCoords768[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords768[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords768[0] > 0.0f && texCoords768[0] < 1.0f && texCoords768[1] > 0.0f && texCoords768[1] < 1.0f;
float sample768 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset768)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset768)[3] > epsilon)) * 0.001187f * float(texInBounds768);
vec2 offset769 = vec2(onePixel[0] * 12.0, onePixel[1] * 1.0);
vec2 texCoords769 =  vec2(texture_uv[0], texture_uv[1]) + offset769;
float texAlpha769 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset769)[3]);
bool texInBounds769 = (abs(int(texCoords769[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords769[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords769[0] > 0.0f && texCoords769[0] < 1.0f && texCoords769[1] > 0.0f && texCoords769[1] < 1.0f;
float sample769 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset769)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset769)[3] > epsilon)) * 0.001187f * float(texInBounds769);
vec2 offset770 = vec2(onePixel[0] * 12.0, onePixel[1] * 2.0);
vec2 texCoords770 =  vec2(texture_uv[0], texture_uv[1]) + offset770;
float texAlpha770 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset770)[3]);
bool texInBounds770 = (abs(int(texCoords770[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords770[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords770[0] > 0.0f && texCoords770[0] < 1.0f && texCoords770[1] > 0.0f && texCoords770[1] < 1.0f;
float sample770 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset770)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset770)[3] > epsilon)) * 0.001186f * float(texInBounds770);
vec2 offset771 = vec2(onePixel[0] * 12.0, onePixel[1] * 3.0);
vec2 texCoords771 =  vec2(texture_uv[0], texture_uv[1]) + offset771;
float texAlpha771 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset771)[3]);
bool texInBounds771 = (abs(int(texCoords771[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords771[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords771[0] > 0.0f && texCoords771[0] < 1.0f && texCoords771[1] > 0.0f && texCoords771[1] < 1.0f;
float sample771 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset771)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset771)[3] > epsilon)) * 0.001184f * float(texInBounds771);
vec2 offset772 = vec2(onePixel[0] * 12.0, onePixel[1] * 4.0);
vec2 texCoords772 =  vec2(texture_uv[0], texture_uv[1]) + offset772;
float texAlpha772 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset772)[3]);
bool texInBounds772 = (abs(int(texCoords772[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords772[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords772[0] > 0.0f && texCoords772[0] < 1.0f && texCoords772[1] > 0.0f && texCoords772[1] < 1.0f;
float sample772 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset772)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset772)[3] > epsilon)) * 0.001182f * float(texInBounds772);
vec2 offset773 = vec2(onePixel[0] * 12.0, onePixel[1] * 5.0);
vec2 texCoords773 =  vec2(texture_uv[0], texture_uv[1]) + offset773;
float texAlpha773 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset773)[3]);
bool texInBounds773 = (abs(int(texCoords773[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords773[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords773[0] > 0.0f && texCoords773[0] < 1.0f && texCoords773[1] > 0.0f && texCoords773[1] < 1.0f;
float sample773 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset773)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset773)[3] > epsilon)) * 0.001178f * float(texInBounds773);
vec2 offset774 = vec2(onePixel[0] * 12.0, onePixel[1] * 6.0);
vec2 texCoords774 =  vec2(texture_uv[0], texture_uv[1]) + offset774;
float texAlpha774 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset774)[3]);
bool texInBounds774 = (abs(int(texCoords774[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords774[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords774[0] > 0.0f && texCoords774[0] < 1.0f && texCoords774[1] > 0.0f && texCoords774[1] < 1.0f;
float sample774 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset774)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset774)[3] > epsilon)) * 0.001175f * float(texInBounds774);
vec2 offset775 = vec2(onePixel[0] * 12.0, onePixel[1] * 7.0);
vec2 texCoords775 =  vec2(texture_uv[0], texture_uv[1]) + offset775;
float texAlpha775 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset775)[3]);
bool texInBounds775 = (abs(int(texCoords775[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords775[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords775[0] > 0.0f && texCoords775[0] < 1.0f && texCoords775[1] > 0.0f && texCoords775[1] < 1.0f;
float sample775 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset775)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset775)[3] > epsilon)) * 0.001170f * float(texInBounds775);
vec2 offset776 = vec2(onePixel[0] * 12.0, onePixel[1] * 8.0);
vec2 texCoords776 =  vec2(texture_uv[0], texture_uv[1]) + offset776;
float texAlpha776 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset776)[3]);
bool texInBounds776 = (abs(int(texCoords776[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords776[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords776[0] > 0.0f && texCoords776[0] < 1.0f && texCoords776[1] > 0.0f && texCoords776[1] < 1.0f;
float sample776 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset776)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset776)[3] > epsilon)) * 0.001165f * float(texInBounds776);
vec2 offset777 = vec2(onePixel[0] * 13.0, onePixel[1] * -7.0);
vec2 texCoords777 =  vec2(texture_uv[0], texture_uv[1]) + offset777;
float texAlpha777 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset777)[3]);
bool texInBounds777 = (abs(int(texCoords777[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords777[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords777[0] > 0.0f && texCoords777[0] < 1.0f && texCoords777[1] > 0.0f && texCoords777[1] < 1.0f;
float sample777 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset777)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset777)[3] > epsilon)) * 0.001161f * float(texInBounds777);
vec2 offset778 = vec2(onePixel[0] * 13.0, onePixel[1] * -6.0);
vec2 texCoords778 =  vec2(texture_uv[0], texture_uv[1]) + offset778;
float texAlpha778 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset778)[3]);
bool texInBounds778 = (abs(int(texCoords778[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords778[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords778[0] > 0.0f && texCoords778[0] < 1.0f && texCoords778[1] > 0.0f && texCoords778[1] < 1.0f;
float sample778 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset778)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset778)[3] > epsilon)) * 0.001166f * float(texInBounds778);
vec2 offset779 = vec2(onePixel[0] * 13.0, onePixel[1] * -5.0);
vec2 texCoords779 =  vec2(texture_uv[0], texture_uv[1]) + offset779;
float texAlpha779 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset779)[3]);
bool texInBounds779 = (abs(int(texCoords779[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords779[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords779[0] > 0.0f && texCoords779[0] < 1.0f && texCoords779[1] > 0.0f && texCoords779[1] < 1.0f;
float sample779 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset779)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset779)[3] > epsilon)) * 0.001170f * float(texInBounds779);
vec2 offset780 = vec2(onePixel[0] * 13.0, onePixel[1] * -4.0);
vec2 texCoords780 =  vec2(texture_uv[0], texture_uv[1]) + offset780;
float texAlpha780 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset780)[3]);
bool texInBounds780 = (abs(int(texCoords780[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords780[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords780[0] > 0.0f && texCoords780[0] < 1.0f && texCoords780[1] > 0.0f && texCoords780[1] < 1.0f;
float sample780 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset780)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset780)[3] > epsilon)) * 0.001173f * float(texInBounds780);
vec2 offset781 = vec2(onePixel[0] * 13.0, onePixel[1] * -3.0);
vec2 texCoords781 =  vec2(texture_uv[0], texture_uv[1]) + offset781;
float texAlpha781 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset781)[3]);
bool texInBounds781 = (abs(int(texCoords781[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords781[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords781[0] > 0.0f && texCoords781[0] < 1.0f && texCoords781[1] > 0.0f && texCoords781[1] < 1.0f;
float sample781 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset781)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset781)[3] > epsilon)) * 0.001175f * float(texInBounds781);
vec2 offset782 = vec2(onePixel[0] * 13.0, onePixel[1] * -2.0);
vec2 texCoords782 =  vec2(texture_uv[0], texture_uv[1]) + offset782;
float texAlpha782 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset782)[3]);
bool texInBounds782 = (abs(int(texCoords782[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords782[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords782[0] > 0.0f && texCoords782[0] < 1.0f && texCoords782[1] > 0.0f && texCoords782[1] < 1.0f;
float sample782 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset782)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset782)[3] > epsilon)) * 0.001177f * float(texInBounds782);
vec2 offset783 = vec2(onePixel[0] * 13.0, onePixel[1] * -1.0);
vec2 texCoords783 =  vec2(texture_uv[0], texture_uv[1]) + offset783;
float texAlpha783 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset783)[3]);
bool texInBounds783 = (abs(int(texCoords783[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords783[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords783[0] > 0.0f && texCoords783[0] < 1.0f && texCoords783[1] > 0.0f && texCoords783[1] < 1.0f;
float sample783 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset783)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset783)[3] > epsilon)) * 0.001178f * float(texInBounds783);
vec2 offset784 = vec2(onePixel[0] * 13.0, onePixel[1] * 0.0);
vec2 texCoords784 =  vec2(texture_uv[0], texture_uv[1]) + offset784;
float texAlpha784 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset784)[3]);
bool texInBounds784 = (abs(int(texCoords784[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords784[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords784[0] > 0.0f && texCoords784[0] < 1.0f && texCoords784[1] > 0.0f && texCoords784[1] < 1.0f;
float sample784 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset784)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset784)[3] > epsilon)) * 0.001178f * float(texInBounds784);
vec2 offset785 = vec2(onePixel[0] * 13.0, onePixel[1] * 1.0);
vec2 texCoords785 =  vec2(texture_uv[0], texture_uv[1]) + offset785;
float texAlpha785 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset785)[3]);
bool texInBounds785 = (abs(int(texCoords785[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords785[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords785[0] > 0.0f && texCoords785[0] < 1.0f && texCoords785[1] > 0.0f && texCoords785[1] < 1.0f;
float sample785 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset785)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset785)[3] > epsilon)) * 0.001178f * float(texInBounds785);
vec2 offset786 = vec2(onePixel[0] * 13.0, onePixel[1] * 2.0);
vec2 texCoords786 =  vec2(texture_uv[0], texture_uv[1]) + offset786;
float texAlpha786 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset786)[3]);
bool texInBounds786 = (abs(int(texCoords786[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords786[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords786[0] > 0.0f && texCoords786[0] < 1.0f && texCoords786[1] > 0.0f && texCoords786[1] < 1.0f;
float sample786 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset786)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset786)[3] > epsilon)) * 0.001177f * float(texInBounds786);
vec2 offset787 = vec2(onePixel[0] * 13.0, onePixel[1] * 3.0);
vec2 texCoords787 =  vec2(texture_uv[0], texture_uv[1]) + offset787;
float texAlpha787 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset787)[3]);
bool texInBounds787 = (abs(int(texCoords787[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords787[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords787[0] > 0.0f && texCoords787[0] < 1.0f && texCoords787[1] > 0.0f && texCoords787[1] < 1.0f;
float sample787 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset787)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset787)[3] > epsilon)) * 0.001175f * float(texInBounds787);
vec2 offset788 = vec2(onePixel[0] * 13.0, onePixel[1] * 4.0);
vec2 texCoords788 =  vec2(texture_uv[0], texture_uv[1]) + offset788;
float texAlpha788 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset788)[3]);
bool texInBounds788 = (abs(int(texCoords788[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords788[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords788[0] > 0.0f && texCoords788[0] < 1.0f && texCoords788[1] > 0.0f && texCoords788[1] < 1.0f;
float sample788 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset788)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset788)[3] > epsilon)) * 0.001173f * float(texInBounds788);
vec2 offset789 = vec2(onePixel[0] * 13.0, onePixel[1] * 5.0);
vec2 texCoords789 =  vec2(texture_uv[0], texture_uv[1]) + offset789;
float texAlpha789 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset789)[3]);
bool texInBounds789 = (abs(int(texCoords789[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords789[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords789[0] > 0.0f && texCoords789[0] < 1.0f && texCoords789[1] > 0.0f && texCoords789[1] < 1.0f;
float sample789 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset789)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset789)[3] > epsilon)) * 0.001170f * float(texInBounds789);
vec2 offset790 = vec2(onePixel[0] * 13.0, onePixel[1] * 6.0);
vec2 texCoords790 =  vec2(texture_uv[0], texture_uv[1]) + offset790;
float texAlpha790 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset790)[3]);
bool texInBounds790 = (abs(int(texCoords790[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords790[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords790[0] > 0.0f && texCoords790[0] < 1.0f && texCoords790[1] > 0.0f && texCoords790[1] < 1.0f;
float sample790 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset790)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset790)[3] > epsilon)) * 0.001166f * float(texInBounds790);
vec2 offset791 = vec2(onePixel[0] * 13.0, onePixel[1] * 7.0);
vec2 texCoords791 =  vec2(texture_uv[0], texture_uv[1]) + offset791;
float texAlpha791 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset791)[3]);
bool texInBounds791 = (abs(int(texCoords791[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords791[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords791[0] > 0.0f && texCoords791[0] < 1.0f && texCoords791[1] > 0.0f && texCoords791[1] < 1.0f;
float sample791 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset791)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset791)[3] > epsilon)) * 0.001161f * float(texInBounds791);
vec2 offset792 = vec2(onePixel[0] * 14.0, onePixel[1] * -6.0);
vec2 texCoords792 =  vec2(texture_uv[0], texture_uv[1]) + offset792;
float texAlpha792 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset792)[3]);
bool texInBounds792 = (abs(int(texCoords792[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords792[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords792[0] > 0.0f && texCoords792[0] < 1.0f && texCoords792[1] > 0.0f && texCoords792[1] < 1.0f;
float sample792 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset792)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset792)[3] > epsilon)) * 0.001157f * float(texInBounds792);
vec2 offset793 = vec2(onePixel[0] * 14.0, onePixel[1] * -5.0);
vec2 texCoords793 =  vec2(texture_uv[0], texture_uv[1]) + offset793;
float texAlpha793 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset793)[3]);
bool texInBounds793 = (abs(int(texCoords793[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords793[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords793[0] > 0.0f && texCoords793[0] < 1.0f && texCoords793[1] > 0.0f && texCoords793[1] < 1.0f;
float sample793 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset793)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset793)[3] > epsilon)) * 0.001160f * float(texInBounds793);
vec2 offset794 = vec2(onePixel[0] * 14.0, onePixel[1] * -4.0);
vec2 texCoords794 =  vec2(texture_uv[0], texture_uv[1]) + offset794;
float texAlpha794 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset794)[3]);
bool texInBounds794 = (abs(int(texCoords794[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords794[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords794[0] > 0.0f && texCoords794[0] < 1.0f && texCoords794[1] > 0.0f && texCoords794[1] < 1.0f;
float sample794 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset794)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset794)[3] > epsilon)) * 0.001164f * float(texInBounds794);
vec2 offset795 = vec2(onePixel[0] * 14.0, onePixel[1] * -3.0);
vec2 texCoords795 =  vec2(texture_uv[0], texture_uv[1]) + offset795;
float texAlpha795 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset795)[3]);
bool texInBounds795 = (abs(int(texCoords795[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords795[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords795[0] > 0.0f && texCoords795[0] < 1.0f && texCoords795[1] > 0.0f && texCoords795[1] < 1.0f;
float sample795 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset795)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset795)[3] > epsilon)) * 0.001166f * float(texInBounds795);
vec2 offset796 = vec2(onePixel[0] * 14.0, onePixel[1] * -2.0);
vec2 texCoords796 =  vec2(texture_uv[0], texture_uv[1]) + offset796;
float texAlpha796 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset796)[3]);
bool texInBounds796 = (abs(int(texCoords796[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords796[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords796[0] > 0.0f && texCoords796[0] < 1.0f && texCoords796[1] > 0.0f && texCoords796[1] < 1.0f;
float sample796 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset796)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset796)[3] > epsilon)) * 0.001168f * float(texInBounds796);
vec2 offset797 = vec2(onePixel[0] * 14.0, onePixel[1] * -1.0);
vec2 texCoords797 =  vec2(texture_uv[0], texture_uv[1]) + offset797;
float texAlpha797 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset797)[3]);
bool texInBounds797 = (abs(int(texCoords797[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords797[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords797[0] > 0.0f && texCoords797[0] < 1.0f && texCoords797[1] > 0.0f && texCoords797[1] < 1.0f;
float sample797 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset797)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset797)[3] > epsilon)) * 0.001169f * float(texInBounds797);
vec2 offset798 = vec2(onePixel[0] * 14.0, onePixel[1] * 0.0);
vec2 texCoords798 =  vec2(texture_uv[0], texture_uv[1]) + offset798;
float texAlpha798 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset798)[3]);
bool texInBounds798 = (abs(int(texCoords798[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords798[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords798[0] > 0.0f && texCoords798[0] < 1.0f && texCoords798[1] > 0.0f && texCoords798[1] < 1.0f;
float sample798 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset798)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset798)[3] > epsilon)) * 0.001169f * float(texInBounds798);
vec2 offset799 = vec2(onePixel[0] * 14.0, onePixel[1] * 1.0);
vec2 texCoords799 =  vec2(texture_uv[0], texture_uv[1]) + offset799;
float texAlpha799 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset799)[3]);
bool texInBounds799 = (abs(int(texCoords799[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords799[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords799[0] > 0.0f && texCoords799[0] < 1.0f && texCoords799[1] > 0.0f && texCoords799[1] < 1.0f;
float sample799 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset799)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset799)[3] > epsilon)) * 0.001169f * float(texInBounds799);
vec2 offset800 = vec2(onePixel[0] * 14.0, onePixel[1] * 2.0);
vec2 texCoords800 =  vec2(texture_uv[0], texture_uv[1]) + offset800;
float texAlpha800 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset800)[3]);
bool texInBounds800 = (abs(int(texCoords800[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords800[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords800[0] > 0.0f && texCoords800[0] < 1.0f && texCoords800[1] > 0.0f && texCoords800[1] < 1.0f;
float sample800 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset800)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset800)[3] > epsilon)) * 0.001168f * float(texInBounds800);
vec2 offset801 = vec2(onePixel[0] * 14.0, onePixel[1] * 3.0);
vec2 texCoords801 =  vec2(texture_uv[0], texture_uv[1]) + offset801;
float texAlpha801 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset801)[3]);
bool texInBounds801 = (abs(int(texCoords801[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords801[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords801[0] > 0.0f && texCoords801[0] < 1.0f && texCoords801[1] > 0.0f && texCoords801[1] < 1.0f;
float sample801 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset801)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset801)[3] > epsilon)) * 0.001166f * float(texInBounds801);
vec2 offset802 = vec2(onePixel[0] * 14.0, onePixel[1] * 4.0);
vec2 texCoords802 =  vec2(texture_uv[0], texture_uv[1]) + offset802;
float texAlpha802 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset802)[3]);
bool texInBounds802 = (abs(int(texCoords802[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords802[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords802[0] > 0.0f && texCoords802[0] < 1.0f && texCoords802[1] > 0.0f && texCoords802[1] < 1.0f;
float sample802 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset802)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset802)[3] > epsilon)) * 0.001164f * float(texInBounds802);
vec2 offset803 = vec2(onePixel[0] * 14.0, onePixel[1] * 5.0);
vec2 texCoords803 =  vec2(texture_uv[0], texture_uv[1]) + offset803;
float texAlpha803 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset803)[3]);
bool texInBounds803 = (abs(int(texCoords803[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords803[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords803[0] > 0.0f && texCoords803[0] < 1.0f && texCoords803[1] > 0.0f && texCoords803[1] < 1.0f;
float sample803 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset803)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset803)[3] > epsilon)) * 0.001160f * float(texInBounds803);
vec2 offset804 = vec2(onePixel[0] * 14.0, onePixel[1] * 6.0);
vec2 texCoords804 =  vec2(texture_uv[0], texture_uv[1]) + offset804;
float texAlpha804 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset804)[3]);
bool texInBounds804 = (abs(int(texCoords804[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords804[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords804[0] > 0.0f && texCoords804[0] < 1.0f && texCoords804[1] > 0.0f && texCoords804[1] < 1.0f;
float sample804 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset804)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset804)[3] > epsilon)) * 0.001157f * float(texInBounds804);
vec2 offset805 = vec2(onePixel[0] * 15.0, onePixel[1] * -5.0);
vec2 texCoords805 =  vec2(texture_uv[0], texture_uv[1]) + offset805;
float texAlpha805 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset805)[3]);
bool texInBounds805 = (abs(int(texCoords805[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords805[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords805[0] > 0.0f && texCoords805[0] < 1.0f && texCoords805[1] > 0.0f && texCoords805[1] < 1.0f;
float sample805 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset805)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset805)[3] > epsilon)) * 0.001150f * float(texInBounds805);
vec2 offset806 = vec2(onePixel[0] * 15.0, onePixel[1] * -4.0);
vec2 texCoords806 =  vec2(texture_uv[0], texture_uv[1]) + offset806;
float texAlpha806 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset806)[3]);
bool texInBounds806 = (abs(int(texCoords806[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords806[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords806[0] > 0.0f && texCoords806[0] < 1.0f && texCoords806[1] > 0.0f && texCoords806[1] < 1.0f;
float sample806 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset806)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset806)[3] > epsilon)) * 0.001154f * float(texInBounds806);
vec2 offset807 = vec2(onePixel[0] * 15.0, onePixel[1] * -3.0);
vec2 texCoords807 =  vec2(texture_uv[0], texture_uv[1]) + offset807;
float texAlpha807 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset807)[3]);
bool texInBounds807 = (abs(int(texCoords807[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords807[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords807[0] > 0.0f && texCoords807[0] < 1.0f && texCoords807[1] > 0.0f && texCoords807[1] < 1.0f;
float sample807 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset807)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset807)[3] > epsilon)) * 0.001156f * float(texInBounds807);
vec2 offset808 = vec2(onePixel[0] * 15.0, onePixel[1] * -2.0);
vec2 texCoords808 =  vec2(texture_uv[0], texture_uv[1]) + offset808;
float texAlpha808 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset808)[3]);
bool texInBounds808 = (abs(int(texCoords808[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords808[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords808[0] > 0.0f && texCoords808[0] < 1.0f && texCoords808[1] > 0.0f && texCoords808[1] < 1.0f;
float sample808 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset808)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset808)[3] > epsilon)) * 0.001158f * float(texInBounds808);
vec2 offset809 = vec2(onePixel[0] * 15.0, onePixel[1] * -1.0);
vec2 texCoords809 =  vec2(texture_uv[0], texture_uv[1]) + offset809;
float texAlpha809 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset809)[3]);
bool texInBounds809 = (abs(int(texCoords809[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords809[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords809[0] > 0.0f && texCoords809[0] < 1.0f && texCoords809[1] > 0.0f && texCoords809[1] < 1.0f;
float sample809 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset809)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset809)[3] > epsilon)) * 0.001159f * float(texInBounds809);
vec2 offset810 = vec2(onePixel[0] * 15.0, onePixel[1] * 0.0);
vec2 texCoords810 =  vec2(texture_uv[0], texture_uv[1]) + offset810;
float texAlpha810 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset810)[3]);
bool texInBounds810 = (abs(int(texCoords810[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords810[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords810[0] > 0.0f && texCoords810[0] < 1.0f && texCoords810[1] > 0.0f && texCoords810[1] < 1.0f;
float sample810 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset810)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset810)[3] > epsilon)) * 0.001159f * float(texInBounds810);
vec2 offset811 = vec2(onePixel[0] * 15.0, onePixel[1] * 1.0);
vec2 texCoords811 =  vec2(texture_uv[0], texture_uv[1]) + offset811;
float texAlpha811 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset811)[3]);
bool texInBounds811 = (abs(int(texCoords811[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords811[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords811[0] > 0.0f && texCoords811[0] < 1.0f && texCoords811[1] > 0.0f && texCoords811[1] < 1.0f;
float sample811 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset811)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset811)[3] > epsilon)) * 0.001159f * float(texInBounds811);
vec2 offset812 = vec2(onePixel[0] * 15.0, onePixel[1] * 2.0);
vec2 texCoords812 =  vec2(texture_uv[0], texture_uv[1]) + offset812;
float texAlpha812 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset812)[3]);
bool texInBounds812 = (abs(int(texCoords812[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords812[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords812[0] > 0.0f && texCoords812[0] < 1.0f && texCoords812[1] > 0.0f && texCoords812[1] < 1.0f;
float sample812 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset812)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset812)[3] > epsilon)) * 0.001158f * float(texInBounds812);
vec2 offset813 = vec2(onePixel[0] * 15.0, onePixel[1] * 3.0);
vec2 texCoords813 =  vec2(texture_uv[0], texture_uv[1]) + offset813;
float texAlpha813 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset813)[3]);
bool texInBounds813 = (abs(int(texCoords813[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords813[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords813[0] > 0.0f && texCoords813[0] < 1.0f && texCoords813[1] > 0.0f && texCoords813[1] < 1.0f;
float sample813 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset813)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset813)[3] > epsilon)) * 0.001156f * float(texInBounds813);
vec2 offset814 = vec2(onePixel[0] * 15.0, onePixel[1] * 4.0);
vec2 texCoords814 =  vec2(texture_uv[0], texture_uv[1]) + offset814;
float texAlpha814 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset814)[3]);
bool texInBounds814 = (abs(int(texCoords814[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords814[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords814[0] > 0.0f && texCoords814[0] < 1.0f && texCoords814[1] > 0.0f && texCoords814[1] < 1.0f;
float sample814 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset814)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset814)[3] > epsilon)) * 0.001154f * float(texInBounds814);
vec2 offset815 = vec2(onePixel[0] * 15.0, onePixel[1] * 5.0);
vec2 texCoords815 =  vec2(texture_uv[0], texture_uv[1]) + offset815;
float texAlpha815 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset815)[3]);
bool texInBounds815 = (abs(int(texCoords815[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords815[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords815[0] > 0.0f && texCoords815[0] < 1.0f && texCoords815[1] > 0.0f && texCoords815[1] < 1.0f;
float sample815 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset815)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset815)[3] > epsilon)) * 0.001150f * float(texInBounds815);
vec2 offset816 = vec2(onePixel[0] * 16.0, onePixel[1] * -4.0);
vec2 texCoords816 =  vec2(texture_uv[0], texture_uv[1]) + offset816;
float texAlpha816 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset816)[3]);
bool texInBounds816 = (abs(int(texCoords816[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords816[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords816[0] > 0.0f && texCoords816[0] < 1.0f && texCoords816[1] > 0.0f && texCoords816[1] < 1.0f;
float sample816 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset816)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset816)[3] > epsilon)) * 0.001143f * float(texInBounds816);
vec2 offset817 = vec2(onePixel[0] * 16.0, onePixel[1] * -3.0);
vec2 texCoords817 =  vec2(texture_uv[0], texture_uv[1]) + offset817;
float texAlpha817 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset817)[3]);
bool texInBounds817 = (abs(int(texCoords817[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords817[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords817[0] > 0.0f && texCoords817[0] < 1.0f && texCoords817[1] > 0.0f && texCoords817[1] < 1.0f;
float sample817 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset817)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset817)[3] > epsilon)) * 0.001145f * float(texInBounds817);
vec2 offset818 = vec2(onePixel[0] * 16.0, onePixel[1] * -2.0);
vec2 texCoords818 =  vec2(texture_uv[0], texture_uv[1]) + offset818;
float texAlpha818 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset818)[3]);
bool texInBounds818 = (abs(int(texCoords818[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords818[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords818[0] > 0.0f && texCoords818[0] < 1.0f && texCoords818[1] > 0.0f && texCoords818[1] < 1.0f;
float sample818 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset818)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset818)[3] > epsilon)) * 0.001147f * float(texInBounds818);
vec2 offset819 = vec2(onePixel[0] * 16.0, onePixel[1] * -1.0);
vec2 texCoords819 =  vec2(texture_uv[0], texture_uv[1]) + offset819;
float texAlpha819 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset819)[3]);
bool texInBounds819 = (abs(int(texCoords819[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords819[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords819[0] > 0.0f && texCoords819[0] < 1.0f && texCoords819[1] > 0.0f && texCoords819[1] < 1.0f;
float sample819 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset819)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset819)[3] > epsilon)) * 0.001148f * float(texInBounds819);
vec2 offset820 = vec2(onePixel[0] * 16.0, onePixel[1] * 0.0);
vec2 texCoords820 =  vec2(texture_uv[0], texture_uv[1]) + offset820;
float texAlpha820 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset820)[3]);
bool texInBounds820 = (abs(int(texCoords820[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords820[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords820[0] > 0.0f && texCoords820[0] < 1.0f && texCoords820[1] > 0.0f && texCoords820[1] < 1.0f;
float sample820 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset820)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset820)[3] > epsilon)) * 0.001148f * float(texInBounds820);
vec2 offset821 = vec2(onePixel[0] * 16.0, onePixel[1] * 1.0);
vec2 texCoords821 =  vec2(texture_uv[0], texture_uv[1]) + offset821;
float texAlpha821 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset821)[3]);
bool texInBounds821 = (abs(int(texCoords821[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords821[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords821[0] > 0.0f && texCoords821[0] < 1.0f && texCoords821[1] > 0.0f && texCoords821[1] < 1.0f;
float sample821 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset821)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset821)[3] > epsilon)) * 0.001148f * float(texInBounds821);
vec2 offset822 = vec2(onePixel[0] * 16.0, onePixel[1] * 2.0);
vec2 texCoords822 =  vec2(texture_uv[0], texture_uv[1]) + offset822;
float texAlpha822 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset822)[3]);
bool texInBounds822 = (abs(int(texCoords822[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords822[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords822[0] > 0.0f && texCoords822[0] < 1.0f && texCoords822[1] > 0.0f && texCoords822[1] < 1.0f;
float sample822 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset822)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset822)[3] > epsilon)) * 0.001147f * float(texInBounds822);
vec2 offset823 = vec2(onePixel[0] * 16.0, onePixel[1] * 3.0);
vec2 texCoords823 =  vec2(texture_uv[0], texture_uv[1]) + offset823;
float texAlpha823 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset823)[3]);
bool texInBounds823 = (abs(int(texCoords823[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords823[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords823[0] > 0.0f && texCoords823[0] < 1.0f && texCoords823[1] > 0.0f && texCoords823[1] < 1.0f;
float sample823 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset823)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset823)[3] > epsilon)) * 0.001145f * float(texInBounds823);
vec2 offset824 = vec2(onePixel[0] * 16.0, onePixel[1] * 4.0);
vec2 texCoords824 =  vec2(texture_uv[0], texture_uv[1]) + offset824;
float texAlpha824 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset824)[3]);
bool texInBounds824 = (abs(int(texCoords824[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords824[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords824[0] > 0.0f && texCoords824[0] < 1.0f && texCoords824[1] > 0.0f && texCoords824[1] < 1.0f;
float sample824 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset824)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset824)[3] > epsilon)) * 0.001143f * float(texInBounds824);
vec2 offset825 = vec2(onePixel[0] * 17.0, onePixel[1] * -3.0);
vec2 texCoords825 =  vec2(texture_uv[0], texture_uv[1]) + offset825;
float texAlpha825 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset825)[3]);
bool texInBounds825 = (abs(int(texCoords825[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords825[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords825[0] > 0.0f && texCoords825[0] < 1.0f && texCoords825[1] > 0.0f && texCoords825[1] < 1.0f;
float sample825 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset825)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset825)[3] > epsilon)) * 0.001134f * float(texInBounds825);
vec2 offset826 = vec2(onePixel[0] * 17.0, onePixel[1] * -2.0);
vec2 texCoords826 =  vec2(texture_uv[0], texture_uv[1]) + offset826;
float texAlpha826 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset826)[3]);
bool texInBounds826 = (abs(int(texCoords826[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords826[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords826[0] > 0.0f && texCoords826[0] < 1.0f && texCoords826[1] > 0.0f && texCoords826[1] < 1.0f;
float sample826 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset826)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset826)[3] > epsilon)) * 0.001136f * float(texInBounds826);
vec2 offset827 = vec2(onePixel[0] * 17.0, onePixel[1] * -1.0);
vec2 texCoords827 =  vec2(texture_uv[0], texture_uv[1]) + offset827;
float texAlpha827 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset827)[3]);
bool texInBounds827 = (abs(int(texCoords827[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords827[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords827[0] > 0.0f && texCoords827[0] < 1.0f && texCoords827[1] > 0.0f && texCoords827[1] < 1.0f;
float sample827 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset827)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset827)[3] > epsilon)) * 0.001137f * float(texInBounds827);
vec2 offset828 = vec2(onePixel[0] * 17.0, onePixel[1] * 0.0);
vec2 texCoords828 =  vec2(texture_uv[0], texture_uv[1]) + offset828;
float texAlpha828 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset828)[3]);
bool texInBounds828 = (abs(int(texCoords828[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords828[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords828[0] > 0.0f && texCoords828[0] < 1.0f && texCoords828[1] > 0.0f && texCoords828[1] < 1.0f;
float sample828 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset828)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset828)[3] > epsilon)) * 0.001137f * float(texInBounds828);
vec2 offset829 = vec2(onePixel[0] * 17.0, onePixel[1] * 1.0);
vec2 texCoords829 =  vec2(texture_uv[0], texture_uv[1]) + offset829;
float texAlpha829 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset829)[3]);
bool texInBounds829 = (abs(int(texCoords829[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords829[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords829[0] > 0.0f && texCoords829[0] < 1.0f && texCoords829[1] > 0.0f && texCoords829[1] < 1.0f;
float sample829 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset829)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset829)[3] > epsilon)) * 0.001137f * float(texInBounds829);
vec2 offset830 = vec2(onePixel[0] * 17.0, onePixel[1] * 2.0);
vec2 texCoords830 =  vec2(texture_uv[0], texture_uv[1]) + offset830;
float texAlpha830 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset830)[3]);
bool texInBounds830 = (abs(int(texCoords830[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords830[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords830[0] > 0.0f && texCoords830[0] < 1.0f && texCoords830[1] > 0.0f && texCoords830[1] < 1.0f;
float sample830 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset830)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset830)[3] > epsilon)) * 0.001136f * float(texInBounds830);
vec2 offset831 = vec2(onePixel[0] * 17.0, onePixel[1] * 3.0);
vec2 texCoords831 =  vec2(texture_uv[0], texture_uv[1]) + offset831;
float texAlpha831 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset831)[3]);
bool texInBounds831 = (abs(int(texCoords831[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords831[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords831[0] > 0.0f && texCoords831[0] < 1.0f && texCoords831[1] > 0.0f && texCoords831[1] < 1.0f;
float sample831 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset831)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset831)[3] > epsilon)) * 0.001134f * float(texInBounds831);
vec2 offset832 = vec2(onePixel[0] * 18.0, onePixel[1] * -2.0);
vec2 texCoords832 =  vec2(texture_uv[0], texture_uv[1]) + offset832;
float texAlpha832 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset832)[3]);
bool texInBounds832 = (abs(int(texCoords832[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords832[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords832[0] > 0.0f && texCoords832[0] < 1.0f && texCoords832[1] > 0.0f && texCoords832[1] < 1.0f;
float sample832 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset832)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset832)[3] > epsilon)) * 0.001124f * float(texInBounds832);
vec2 offset833 = vec2(onePixel[0] * 18.0, onePixel[1] * -1.0);
vec2 texCoords833 =  vec2(texture_uv[0], texture_uv[1]) + offset833;
float texAlpha833 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset833)[3]);
bool texInBounds833 = (abs(int(texCoords833[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords833[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords833[0] > 0.0f && texCoords833[0] < 1.0f && texCoords833[1] > 0.0f && texCoords833[1] < 1.0f;
float sample833 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset833)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset833)[3] > epsilon)) * 0.001125f * float(texInBounds833);
vec2 offset834 = vec2(onePixel[0] * 18.0, onePixel[1] * 0.0);
vec2 texCoords834 =  vec2(texture_uv[0], texture_uv[1]) + offset834;
float texAlpha834 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset834)[3]);
bool texInBounds834 = (abs(int(texCoords834[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords834[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords834[0] > 0.0f && texCoords834[0] < 1.0f && texCoords834[1] > 0.0f && texCoords834[1] < 1.0f;
float sample834 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset834)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset834)[3] > epsilon)) * 0.001125f * float(texInBounds834);
vec2 offset835 = vec2(onePixel[0] * 18.0, onePixel[1] * 1.0);
vec2 texCoords835 =  vec2(texture_uv[0], texture_uv[1]) + offset835;
float texAlpha835 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset835)[3]);
bool texInBounds835 = (abs(int(texCoords835[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords835[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords835[0] > 0.0f && texCoords835[0] < 1.0f && texCoords835[1] > 0.0f && texCoords835[1] < 1.0f;
float sample835 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset835)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset835)[3] > epsilon)) * 0.001125f * float(texInBounds835);
vec2 offset836 = vec2(onePixel[0] * 18.0, onePixel[1] * 2.0);
vec2 texCoords836 =  vec2(texture_uv[0], texture_uv[1]) + offset836;
float texAlpha836 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset836)[3]);
bool texInBounds836 = (abs(int(texCoords836[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords836[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords836[0] > 0.0f && texCoords836[0] < 1.0f && texCoords836[1] > 0.0f && texCoords836[1] < 1.0f;
float sample836 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset836)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset836)[3] > epsilon)) * 0.001124f * float(texInBounds836);
vec2 offset837 = vec2(onePixel[0] * 19.0, onePixel[1] * -1.0);
vec2 texCoords837 =  vec2(texture_uv[0], texture_uv[1]) + offset837;
float texAlpha837 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset837)[3]);
bool texInBounds837 = (abs(int(texCoords837[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords837[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords837[0] > 0.0f && texCoords837[0] < 1.0f && texCoords837[1] > 0.0f && texCoords837[1] < 1.0f;
float sample837 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset837)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset837)[3] > epsilon)) * 0.001113f * float(texInBounds837);
vec2 offset838 = vec2(onePixel[0] * 19.0, onePixel[1] * 0.0);
vec2 texCoords838 =  vec2(texture_uv[0], texture_uv[1]) + offset838;
float texAlpha838 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset838)[3]);
bool texInBounds838 = (abs(int(texCoords838[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords838[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords838[0] > 0.0f && texCoords838[0] < 1.0f && texCoords838[1] > 0.0f && texCoords838[1] < 1.0f;
float sample838 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset838)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset838)[3] > epsilon)) * 0.001113f * float(texInBounds838);
vec2 offset839 = vec2(onePixel[0] * 19.0, onePixel[1] * 1.0);
vec2 texCoords839 =  vec2(texture_uv[0], texture_uv[1]) + offset839;
float texAlpha839 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset839)[3]);
bool texInBounds839 = (abs(int(texCoords839[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords839[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords839[0] > 0.0f && texCoords839[0] < 1.0f && texCoords839[1] > 0.0f && texCoords839[1] < 1.0f;
float sample839 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset839)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset839)[3] > epsilon)) * 0.001113f * float(texInBounds839);
vec2 offset840 = vec2(onePixel[0] * 20.0, onePixel[1] * 0.0);
vec2 texCoords840 =  vec2(texture_uv[0], texture_uv[1]) + offset840;
float texAlpha840 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset840)[3]);
bool texInBounds840 = (abs(int(texCoords840[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords840[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords840[0] > 0.0f && texCoords840[0] < 1.0f && texCoords840[1] > 0.0f && texCoords840[1] < 1.0f;
float sample840 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset840)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset840)[3] > epsilon)) * 0.001100f * float(texInBounds840);
float glowBoundaries = sample0 + sample1 + sample2 + sample3 + sample4 + sample5 + sample6 + sample7 + sample8 + sample9 + sample10 + sample11 + sample12 + sample13 + sample14 + sample15 + sample16 + sample17 + sample18 + sample19 + sample20 + sample21 + sample22 + sample23 + sample24 + sample25 + sample26 + sample27 + sample28 + sample29 + sample30 + sample31 + sample32 + sample33 + sample34 + sample35 + sample36 + sample37 + sample38 + sample39 + sample40 + sample41 + sample42 + sample43 + sample44 + sample45 + sample46 + sample47 + sample48 + sample49 + sample50 + sample51 + sample52 + sample53 + sample54 + sample55 + sample56 + sample57 + sample58 + sample59 + sample60 + sample61 + sample62 + sample63 + sample64 + sample65 + sample66 + sample67 + sample68 + sample69 + sample70 + sample71 + sample72 + sample73 + sample74 + sample75 + sample76 + sample77 + sample78 + sample79 + sample80 + sample81 + sample82 + sample83 + sample84 + sample85 + sample86 + sample87 + sample88 + sample89 + sample90 + sample91 + sample92 + sample93 + sample94 + sample95 + sample96 + sample97 + sample98 + sample99 + sample100 + sample101 + sample102 + sample103 + sample104 + sample105 + sample106 + sample107 + sample108 + sample109 + sample110 + sample111 + sample112 + sample113 + sample114 + sample115 + sample116 + sample117 + sample118 + sample119 + sample120 + sample121 + sample122 + sample123 + sample124 + sample125 + sample126 + sample127 + sample128 + sample129 + sample130 + sample131 + sample132 + sample133 + sample134 + sample135 + sample136 + sample137 + sample138 + sample139 + sample140 + sample141 + sample142 + sample143 + sample144 + sample145 + sample146 + sample147 + sample148 + sample149 + sample150 + sample151 + sample152 + sample153 + sample154 + sample155 + sample156 + sample157 + sample158 + sample159 + sample160 + sample161 + sample162 + sample163 + sample164 + sample165 + sample166 + sample167 + sample168 + sample169 + sample170 + sample171 + sample172 + sample173 + sample174 + sample175 + sample176 + sample177 + sample178 + sample179 + sample180 + sample181 + sample182 + sample183 + sample184 + sample185 + sample186 + sample187 + sample188 + sample189 + sample190 + sample191 + sample192 + sample193 + sample194 + sample195 + sample196 + sample197 + sample198 + sample199 + sample200 + sample201 + sample202 + sample203 + sample204 + sample205 + sample206 + sample207 + sample208 + sample209 + sample210 + sample211 + sample212 + sample213 + sample214 + sample215 + sample216 + sample217 + sample218 + sample219 + sample220 + sample221 + sample222 + sample223 + sample224 + sample225 + sample226 + sample227 + sample228 + sample229 + sample230 + sample231 + sample232 + sample233 + sample234 + sample235 + sample236 + sample237 + sample238 + sample239 + sample240 + sample241 + sample242 + sample243 + sample244 + sample245 + sample246 + sample247 + sample248 + sample249 + sample250 + sample251 + sample252 + sample253 + sample254 + sample255 + sample256 + sample257 + sample258 + sample259 + sample260 + sample261 + sample262 + sample263 + sample264 + sample265 + sample266 + sample267 + sample268 + sample269 + sample270 + sample271 + sample272 + sample273 + sample274 + sample275 + sample276 + sample277 + sample278 + sample279 + sample280 + sample281 + sample282 + sample283 + sample284 + sample285 + sample286 + sample287 + sample288 + sample289 + sample290 + sample291 + sample292 + sample293 + sample294 + sample295 + sample296 + sample297 + sample298 + sample299 + sample300 + sample301 + sample302 + sample303 + sample304 + sample305 + sample306 + sample307 + sample308 + sample309 + sample310 + sample311 + sample312 + sample313 + sample314 + sample315 + sample316 + sample317 + sample318 + sample319 + sample320 + sample321 + sample322 + sample323 + sample324 + sample325 + sample326 + sample327 + sample328 + sample329 + sample330 + sample331 + sample332 + sample333 + sample334 + sample335 + sample336 + sample337 + sample338 + sample339 + sample340 + sample341 + sample342 + sample343 + sample344 + sample345 + sample346 + sample347 + sample348 + sample349 + sample350 + sample351 + sample352 + sample353 + sample354 + sample355 + sample356 + sample357 + sample358 + sample359 + sample360 + sample361 + sample362 + sample363 + sample364 + sample365 + sample366 + sample367 + sample368 + sample369 + sample370 + sample371 + sample372 + sample373 + sample374 + sample375 + sample376 + sample377 + sample378 + sample379 + sample380 + sample381 + sample382 + sample383 + sample384 + sample385 + sample386 + sample387 + sample388 + sample389 + sample390 + sample391 + sample392 + sample393 + sample394 + sample395 + sample396 + sample397 + sample398 + sample399 + sample400 + sample401 + sample402 + sample403 + sample404 + sample405 + sample406 + sample407 + sample408 + sample409 + sample410 + sample411 + sample412 + sample413 + sample414 + sample415 + sample416 + sample417 + sample418 + sample419 + sample420 + sample421 + sample422 + sample423 + sample424 + sample425 + sample426 + sample427 + sample428 + sample429 + sample430 + sample431 + sample432 + sample433 + sample434 + sample435 + sample436 + sample437 + sample438 + sample439 + sample440 + sample441 + sample442 + sample443 + sample444 + sample445 + sample446 + sample447 + sample448 + sample449 + sample450 + sample451 + sample452 + sample453 + sample454 + sample455 + sample456 + sample457 + sample458 + sample459 + sample460 + sample461 + sample462 + sample463 + sample464 + sample465 + sample466 + sample467 + sample468 + sample469 + sample470 + sample471 + sample472 + sample473 + sample474 + sample475 + sample476 + sample477 + sample478 + sample479 + sample480 + sample481 + sample482 + sample483 + sample484 + sample485 + sample486 + sample487 + sample488 + sample489 + sample490 + sample491 + sample492 + sample493 + sample494 + sample495 + sample496 + sample497 + sample498 + sample499 + sample500 + sample501 + sample502 + sample503 + sample504 + sample505 + sample506 + sample507 + sample508 + sample509 + sample510 + sample511 + sample512 + sample513 + sample514 + sample515 + sample516 + sample517 + sample518 + sample519 + sample520 + sample521 + sample522 + sample523 + sample524 + sample525 + sample526 + sample527 + sample528 + sample529 + sample530 + sample531 + sample532 + sample533 + sample534 + sample535 + sample536 + sample537 + sample538 + sample539 + sample540 + sample541 + sample542 + sample543 + sample544 + sample545 + sample546 + sample547 + sample548 + sample549 + sample550 + sample551 + sample552 + sample553 + sample554 + sample555 + sample556 + sample557 + sample558 + sample559 + sample560 + sample561 + sample562 + sample563 + sample564 + sample565 + sample566 + sample567 + sample568 + sample569 + sample570 + sample571 + sample572 + sample573 + sample574 + sample575 + sample576 + sample577 + sample578 + sample579 + sample580 + sample581 + sample582 + sample583 + sample584 + sample585 + sample586 + sample587 + sample588 + sample589 + sample590 + sample591 + sample592 + sample593 + sample594 + sample595 + sample596 + sample597 + sample598 + sample599 + sample600 + sample601 + sample602 + sample603 + sample604 + sample605 + sample606 + sample607 + sample608 + sample609 + sample610 + sample611 + sample612 + sample613 + sample614 + sample615 + sample616 + sample617 + sample618 + sample619 + sample620 + sample621 + sample622 + sample623 + sample624 + sample625 + sample626 + sample627 + sample628 + sample629 + sample630 + sample631 + sample632 + sample633 + sample634 + sample635 + sample636 + sample637 + sample638 + sample639 + sample640 + sample641 + sample642 + sample643 + sample644 + sample645 + sample646 + sample647 + sample648 + sample649 + sample650 + sample651 + sample652 + sample653 + sample654 + sample655 + sample656 + sample657 + sample658 + sample659 + sample660 + sample661 + sample662 + sample663 + sample664 + sample665 + sample666 + sample667 + sample668 + sample669 + sample670 + sample671 + sample672 + sample673 + sample674 + sample675 + sample676 + sample677 + sample678 + sample679 + sample680 + sample681 + sample682 + sample683 + sample684 + sample685 + sample686 + sample687 + sample688 + sample689 + sample690 + sample691 + sample692 + sample693 + sample694 + sample695 + sample696 + sample697 + sample698 + sample699 + sample700 + sample701 + sample702 + sample703 + sample704 + sample705 + sample706 + sample707 + sample708 + sample709 + sample710 + sample711 + sample712 + sample713 + sample714 + sample715 + sample716 + sample717 + sample718 + sample719 + sample720 + sample721 + sample722 + sample723 + sample724 + sample725 + sample726 + sample727 + sample728 + sample729 + sample730 + sample731 + sample732 + sample733 + sample734 + sample735 + sample736 + sample737 + sample738 + sample739 + sample740 + sample741 + sample742 + sample743 + sample744 + sample745 + sample746 + sample747 + sample748 + sample749 + sample750 + sample751 + sample752 + sample753 + sample754 + sample755 + sample756 + sample757 + sample758 + sample759 + sample760 + sample761 + sample762 + sample763 + sample764 + sample765 + sample766 + sample767 + sample768 + sample769 + sample770 + sample771 + sample772 + sample773 + sample774 + sample775 + sample776 + sample777 + sample778 + sample779 + sample780 + sample781 + sample782 + sample783 + sample784 + sample785 + sample786 + sample787 + sample788 + sample789 + sample790 + sample791 + sample792 + sample793 + sample794 + sample795 + sample796 + sample797 + sample798 + sample799 + sample800 + sample801 + sample802 + sample803 + sample804 + sample805 + sample806 + sample807 + sample808 + sample809 + sample810 + sample811 + sample812 + sample813 + sample814 + sample815 + sample816 + sample817 + sample818 + sample819 + sample820 + sample821 + sample822 + sample823 + sample824 + sample825 + sample826 + sample827 + sample828 + sample829 + sample830 + sample831 + sample832 + sample833 + sample834 + sample835 + sample836 + sample837 + sample838 + sample839 + sample840;


return min(1.0, 2.0 * glowBoundaries);
}

void main()
{
	float epsilon = 0.0001;
	vec2 texture_size = textureSize(ourTexture, 0);
	float glowValue_20 = getGlowBoundaries_20(epsilon, TexCoord, ourTexture, texture_size);
	float glowValue = glowValue_20;
	FragColor = vec4(glowValue, glowValue, glowValue, glowValue);
}