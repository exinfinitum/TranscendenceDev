#version 330 core
out vec4 FragColor;
  
in vec3 ourColor;
in vec2 TexCoord;

uniform sampler2D ourTexture;
uniform vec2 quadSize;


float getGlowBoundaries_10(float epsilon, vec2 texture_uv, sampler2D obj_texture, vec2 texture_size)
{
vec2 onePixel = vec2(1.0, 1.0) / texture_size;
vec2 quadSize_float = quadSize / texture_size;
vec2 quad_index = vec2(float(int(texture_uv[0] / quadSize_float[0])), float(int(texture_uv[1] / quadSize_float[1])));

vec2 offset0 = vec2(onePixel[0] * -10.0, onePixel[1] * 0.0);
vec2 texCoords0 =  vec2(texture_uv[0], texture_uv[1]) + offset0;
float texAlpha0 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3]);
bool texInBounds0 = (abs(int(texCoords0[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords0[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords0[0] > 0.0f && texCoords0[0] < 1.0f && texCoords0[1] > 0.0f && texCoords0[1] < 1.0f;
float sample0 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset0)[3] > epsilon)) * 0.004211f * float(texInBounds0);
vec2 offset1 = vec2(onePixel[0] * -9.0, onePixel[1] * -1.0);
vec2 texCoords1 =  vec2(texture_uv[0], texture_uv[1]) + offset1;
float texAlpha1 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3]);
bool texInBounds1 = (abs(int(texCoords1[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords1[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords1[0] > 0.0f && texCoords1[0] < 1.0f && texCoords1[1] > 0.0f && texCoords1[1] < 1.0f;
float sample1 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset1)[3] > epsilon)) * 0.004298f * float(texInBounds1);
vec2 offset2 = vec2(onePixel[0] * -9.0, onePixel[1] * 0.0);
vec2 texCoords2 =  vec2(texture_uv[0], texture_uv[1]) + offset2;
float texAlpha2 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3]);
bool texInBounds2 = (abs(int(texCoords2[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords2[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords2[0] > 0.0f && texCoords2[0] < 1.0f && texCoords2[1] > 0.0f && texCoords2[1] < 1.0f;
float sample2 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset2)[3] > epsilon)) * 0.004302f * float(texInBounds2);
vec2 offset3 = vec2(onePixel[0] * -9.0, onePixel[1] * 1.0);
vec2 texCoords3 =  vec2(texture_uv[0], texture_uv[1]) + offset3;
float texAlpha3 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3]);
bool texInBounds3 = (abs(int(texCoords3[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords3[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords3[0] > 0.0f && texCoords3[0] < 1.0f && texCoords3[1] > 0.0f && texCoords3[1] < 1.0f;
float sample3 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset3)[3] > epsilon)) * 0.004298f * float(texInBounds3);
vec2 offset4 = vec2(onePixel[0] * -8.0, onePixel[1] * -2.0);
vec2 texCoords4 =  vec2(texture_uv[0], texture_uv[1]) + offset4;
float texAlpha4 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3]);
bool texInBounds4 = (abs(int(texCoords4[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords4[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords4[0] > 0.0f && texCoords4[0] < 1.0f && texCoords4[1] > 0.0f && texCoords4[1] < 1.0f;
float sample4 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset4)[3] > epsilon)) * 0.004366f * float(texInBounds4);
vec2 offset5 = vec2(onePixel[0] * -8.0, onePixel[1] * -1.0);
vec2 texCoords5 =  vec2(texture_uv[0], texture_uv[1]) + offset5;
float texAlpha5 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3]);
bool texInBounds5 = (abs(int(texCoords5[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords5[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords5[0] > 0.0f && texCoords5[0] < 1.0f && texCoords5[1] > 0.0f && texCoords5[1] < 1.0f;
float sample5 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset5)[3] > epsilon)) * 0.004381f * float(texInBounds5);
vec2 offset6 = vec2(onePixel[0] * -8.0, onePixel[1] * 0.0);
vec2 texCoords6 =  vec2(texture_uv[0], texture_uv[1]) + offset6;
float texAlpha6 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3]);
bool texInBounds6 = (abs(int(texCoords6[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords6[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords6[0] > 0.0f && texCoords6[0] < 1.0f && texCoords6[1] > 0.0f && texCoords6[1] < 1.0f;
float sample6 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset6)[3] > epsilon)) * 0.004386f * float(texInBounds6);
vec2 offset7 = vec2(onePixel[0] * -8.0, onePixel[1] * 1.0);
vec2 texCoords7 =  vec2(texture_uv[0], texture_uv[1]) + offset7;
float texAlpha7 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3]);
bool texInBounds7 = (abs(int(texCoords7[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords7[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords7[0] > 0.0f && texCoords7[0] < 1.0f && texCoords7[1] > 0.0f && texCoords7[1] < 1.0f;
float sample7 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset7)[3] > epsilon)) * 0.004381f * float(texInBounds7);
vec2 offset8 = vec2(onePixel[0] * -8.0, onePixel[1] * 2.0);
vec2 texCoords8 =  vec2(texture_uv[0], texture_uv[1]) + offset8;
float texAlpha8 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3]);
bool texInBounds8 = (abs(int(texCoords8[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords8[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords8[0] > 0.0f && texCoords8[0] < 1.0f && texCoords8[1] > 0.0f && texCoords8[1] < 1.0f;
float sample8 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset8)[3] > epsilon)) * 0.004366f * float(texInBounds8);
vec2 offset9 = vec2(onePixel[0] * -7.0, onePixel[1] * -3.0);
vec2 texCoords9 =  vec2(texture_uv[0], texture_uv[1]) + offset9;
float texAlpha9 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3]);
bool texInBounds9 = (abs(int(texCoords9[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords9[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords9[0] > 0.0f && texCoords9[0] < 1.0f && texCoords9[1] > 0.0f && texCoords9[1] < 1.0f;
float sample9 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset9)[3] > epsilon)) * 0.004416f * float(texInBounds9);
vec2 offset10 = vec2(onePixel[0] * -7.0, onePixel[1] * -2.0);
vec2 texCoords10 =  vec2(texture_uv[0], texture_uv[1]) + offset10;
float texAlpha10 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3]);
bool texInBounds10 = (abs(int(texCoords10[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords10[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords10[0] > 0.0f && texCoords10[0] < 1.0f && texCoords10[1] > 0.0f && texCoords10[1] < 1.0f;
float sample10 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset10)[3] > epsilon)) * 0.004441f * float(texInBounds10);
vec2 offset11 = vec2(onePixel[0] * -7.0, onePixel[1] * -1.0);
vec2 texCoords11 =  vec2(texture_uv[0], texture_uv[1]) + offset11;
float texAlpha11 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3]);
bool texInBounds11 = (abs(int(texCoords11[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords11[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords11[0] > 0.0f && texCoords11[0] < 1.0f && texCoords11[1] > 0.0f && texCoords11[1] < 1.0f;
float sample11 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset11)[3] > epsilon)) * 0.004456f * float(texInBounds11);
vec2 offset12 = vec2(onePixel[0] * -7.0, onePixel[1] * 0.0);
vec2 texCoords12 =  vec2(texture_uv[0], texture_uv[1]) + offset12;
float texAlpha12 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3]);
bool texInBounds12 = (abs(int(texCoords12[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords12[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords12[0] > 0.0f && texCoords12[0] < 1.0f && texCoords12[1] > 0.0f && texCoords12[1] < 1.0f;
float sample12 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset12)[3] > epsilon)) * 0.004461f * float(texInBounds12);
vec2 offset13 = vec2(onePixel[0] * -7.0, onePixel[1] * 1.0);
vec2 texCoords13 =  vec2(texture_uv[0], texture_uv[1]) + offset13;
float texAlpha13 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3]);
bool texInBounds13 = (abs(int(texCoords13[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords13[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords13[0] > 0.0f && texCoords13[0] < 1.0f && texCoords13[1] > 0.0f && texCoords13[1] < 1.0f;
float sample13 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset13)[3] > epsilon)) * 0.004456f * float(texInBounds13);
vec2 offset14 = vec2(onePixel[0] * -7.0, onePixel[1] * 2.0);
vec2 texCoords14 =  vec2(texture_uv[0], texture_uv[1]) + offset14;
float texAlpha14 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3]);
bool texInBounds14 = (abs(int(texCoords14[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords14[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords14[0] > 0.0f && texCoords14[0] < 1.0f && texCoords14[1] > 0.0f && texCoords14[1] < 1.0f;
float sample14 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset14)[3] > epsilon)) * 0.004441f * float(texInBounds14);
vec2 offset15 = vec2(onePixel[0] * -7.0, onePixel[1] * 3.0);
vec2 texCoords15 =  vec2(texture_uv[0], texture_uv[1]) + offset15;
float texAlpha15 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3]);
bool texInBounds15 = (abs(int(texCoords15[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords15[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords15[0] > 0.0f && texCoords15[0] < 1.0f && texCoords15[1] > 0.0f && texCoords15[1] < 1.0f;
float sample15 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset15)[3] > epsilon)) * 0.004416f * float(texInBounds15);
vec2 offset16 = vec2(onePixel[0] * -6.0, onePixel[1] * -4.0);
vec2 texCoords16 =  vec2(texture_uv[0], texture_uv[1]) + offset16;
float texAlpha16 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3]);
bool texInBounds16 = (abs(int(texCoords16[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords16[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords16[0] > 0.0f && texCoords16[0] < 1.0f && texCoords16[1] > 0.0f && texCoords16[1] < 1.0f;
float sample16 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset16)[3] > epsilon)) * 0.004446f * float(texInBounds16);
vec2 offset17 = vec2(onePixel[0] * -6.0, onePixel[1] * -3.0);
vec2 texCoords17 =  vec2(texture_uv[0], texture_uv[1]) + offset17;
float texAlpha17 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3]);
bool texInBounds17 = (abs(int(texCoords17[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords17[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords17[0] > 0.0f && texCoords17[0] < 1.0f && texCoords17[1] > 0.0f && texCoords17[1] < 1.0f;
float sample17 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset17)[3] > epsilon)) * 0.004482f * float(texInBounds17);
vec2 offset18 = vec2(onePixel[0] * -6.0, onePixel[1] * -2.0);
vec2 texCoords18 =  vec2(texture_uv[0], texture_uv[1]) + offset18;
float texAlpha18 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3]);
bool texInBounds18 = (abs(int(texCoords18[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords18[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords18[0] > 0.0f && texCoords18[0] < 1.0f && texCoords18[1] > 0.0f && texCoords18[1] < 1.0f;
float sample18 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset18)[3] > epsilon)) * 0.004507f * float(texInBounds18);
vec2 offset19 = vec2(onePixel[0] * -6.0, onePixel[1] * -1.0);
vec2 texCoords19 =  vec2(texture_uv[0], texture_uv[1]) + offset19;
float texAlpha19 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3]);
bool texInBounds19 = (abs(int(texCoords19[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords19[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords19[0] > 0.0f && texCoords19[0] < 1.0f && texCoords19[1] > 0.0f && texCoords19[1] < 1.0f;
float sample19 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset19)[3] > epsilon)) * 0.004522f * float(texInBounds19);
vec2 offset20 = vec2(onePixel[0] * -6.0, onePixel[1] * 0.0);
vec2 texCoords20 =  vec2(texture_uv[0], texture_uv[1]) + offset20;
float texAlpha20 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3]);
bool texInBounds20 = (abs(int(texCoords20[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords20[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords20[0] > 0.0f && texCoords20[0] < 1.0f && texCoords20[1] > 0.0f && texCoords20[1] < 1.0f;
float sample20 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset20)[3] > epsilon)) * 0.004528f * float(texInBounds20);
vec2 offset21 = vec2(onePixel[0] * -6.0, onePixel[1] * 1.0);
vec2 texCoords21 =  vec2(texture_uv[0], texture_uv[1]) + offset21;
float texAlpha21 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3]);
bool texInBounds21 = (abs(int(texCoords21[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords21[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords21[0] > 0.0f && texCoords21[0] < 1.0f && texCoords21[1] > 0.0f && texCoords21[1] < 1.0f;
float sample21 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset21)[3] > epsilon)) * 0.004522f * float(texInBounds21);
vec2 offset22 = vec2(onePixel[0] * -6.0, onePixel[1] * 2.0);
vec2 texCoords22 =  vec2(texture_uv[0], texture_uv[1]) + offset22;
float texAlpha22 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3]);
bool texInBounds22 = (abs(int(texCoords22[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords22[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords22[0] > 0.0f && texCoords22[0] < 1.0f && texCoords22[1] > 0.0f && texCoords22[1] < 1.0f;
float sample22 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset22)[3] > epsilon)) * 0.004507f * float(texInBounds22);
vec2 offset23 = vec2(onePixel[0] * -6.0, onePixel[1] * 3.0);
vec2 texCoords23 =  vec2(texture_uv[0], texture_uv[1]) + offset23;
float texAlpha23 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3]);
bool texInBounds23 = (abs(int(texCoords23[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords23[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords23[0] > 0.0f && texCoords23[0] < 1.0f && texCoords23[1] > 0.0f && texCoords23[1] < 1.0f;
float sample23 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset23)[3] > epsilon)) * 0.004482f * float(texInBounds23);
vec2 offset24 = vec2(onePixel[0] * -6.0, onePixel[1] * 4.0);
vec2 texCoords24 =  vec2(texture_uv[0], texture_uv[1]) + offset24;
float texAlpha24 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3]);
bool texInBounds24 = (abs(int(texCoords24[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords24[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords24[0] > 0.0f && texCoords24[0] < 1.0f && texCoords24[1] > 0.0f && texCoords24[1] < 1.0f;
float sample24 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset24)[3] > epsilon)) * 0.004446f * float(texInBounds24);
vec2 offset25 = vec2(onePixel[0] * -5.0, onePixel[1] * -5.0);
vec2 texCoords25 =  vec2(texture_uv[0], texture_uv[1]) + offset25;
float texAlpha25 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3]);
bool texInBounds25 = (abs(int(texCoords25[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords25[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords25[0] > 0.0f && texCoords25[0] < 1.0f && texCoords25[1] > 0.0f && texCoords25[1] < 1.0f;
float sample25 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset25)[3] > epsilon)) * 0.004456f * float(texInBounds25);
vec2 offset26 = vec2(onePixel[0] * -5.0, onePixel[1] * -4.0);
vec2 texCoords26 =  vec2(texture_uv[0], texture_uv[1]) + offset26;
float texAlpha26 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3]);
bool texInBounds26 = (abs(int(texCoords26[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords26[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords26[0] > 0.0f && texCoords26[0] < 1.0f && texCoords26[1] > 0.0f && texCoords26[1] < 1.0f;
float sample26 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset26)[3] > epsilon)) * 0.004502f * float(texInBounds26);
vec2 offset27 = vec2(onePixel[0] * -5.0, onePixel[1] * -3.0);
vec2 texCoords27 =  vec2(texture_uv[0], texture_uv[1]) + offset27;
float texAlpha27 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3]);
bool texInBounds27 = (abs(int(texCoords27[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords27[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords27[0] > 0.0f && texCoords27[0] < 1.0f && texCoords27[1] > 0.0f && texCoords27[1] < 1.0f;
float sample27 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset27)[3] > epsilon)) * 0.004538f * float(texInBounds27);
vec2 offset28 = vec2(onePixel[0] * -5.0, onePixel[1] * -2.0);
vec2 texCoords28 =  vec2(texture_uv[0], texture_uv[1]) + offset28;
float texAlpha28 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3]);
bool texInBounds28 = (abs(int(texCoords28[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords28[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords28[0] > 0.0f && texCoords28[0] < 1.0f && texCoords28[1] > 0.0f && texCoords28[1] < 1.0f;
float sample28 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset28)[3] > epsilon)) * 0.004564f * float(texInBounds28);
vec2 offset29 = vec2(onePixel[0] * -5.0, onePixel[1] * -1.0);
vec2 texCoords29 =  vec2(texture_uv[0], texture_uv[1]) + offset29;
float texAlpha29 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3]);
bool texInBounds29 = (abs(int(texCoords29[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords29[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords29[0] > 0.0f && texCoords29[0] < 1.0f && texCoords29[1] > 0.0f && texCoords29[1] < 1.0f;
float sample29 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset29)[3] > epsilon)) * 0.004579f * float(texInBounds29);
vec2 offset30 = vec2(onePixel[0] * -5.0, onePixel[1] * 0.0);
vec2 texCoords30 =  vec2(texture_uv[0], texture_uv[1]) + offset30;
float texAlpha30 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3]);
bool texInBounds30 = (abs(int(texCoords30[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords30[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords30[0] > 0.0f && texCoords30[0] < 1.0f && texCoords30[1] > 0.0f && texCoords30[1] < 1.0f;
float sample30 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset30)[3] > epsilon)) * 0.004584f * float(texInBounds30);
vec2 offset31 = vec2(onePixel[0] * -5.0, onePixel[1] * 1.0);
vec2 texCoords31 =  vec2(texture_uv[0], texture_uv[1]) + offset31;
float texAlpha31 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3]);
bool texInBounds31 = (abs(int(texCoords31[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords31[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords31[0] > 0.0f && texCoords31[0] < 1.0f && texCoords31[1] > 0.0f && texCoords31[1] < 1.0f;
float sample31 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset31)[3] > epsilon)) * 0.004579f * float(texInBounds31);
vec2 offset32 = vec2(onePixel[0] * -5.0, onePixel[1] * 2.0);
vec2 texCoords32 =  vec2(texture_uv[0], texture_uv[1]) + offset32;
float texAlpha32 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3]);
bool texInBounds32 = (abs(int(texCoords32[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords32[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords32[0] > 0.0f && texCoords32[0] < 1.0f && texCoords32[1] > 0.0f && texCoords32[1] < 1.0f;
float sample32 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset32)[3] > epsilon)) * 0.004564f * float(texInBounds32);
vec2 offset33 = vec2(onePixel[0] * -5.0, onePixel[1] * 3.0);
vec2 texCoords33 =  vec2(texture_uv[0], texture_uv[1]) + offset33;
float texAlpha33 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3]);
bool texInBounds33 = (abs(int(texCoords33[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords33[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords33[0] > 0.0f && texCoords33[0] < 1.0f && texCoords33[1] > 0.0f && texCoords33[1] < 1.0f;
float sample33 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset33)[3] > epsilon)) * 0.004538f * float(texInBounds33);
vec2 offset34 = vec2(onePixel[0] * -5.0, onePixel[1] * 4.0);
vec2 texCoords34 =  vec2(texture_uv[0], texture_uv[1]) + offset34;
float texAlpha34 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3]);
bool texInBounds34 = (abs(int(texCoords34[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords34[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords34[0] > 0.0f && texCoords34[0] < 1.0f && texCoords34[1] > 0.0f && texCoords34[1] < 1.0f;
float sample34 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset34)[3] > epsilon)) * 0.004502f * float(texInBounds34);
vec2 offset35 = vec2(onePixel[0] * -5.0, onePixel[1] * 5.0);
vec2 texCoords35 =  vec2(texture_uv[0], texture_uv[1]) + offset35;
float texAlpha35 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3]);
bool texInBounds35 = (abs(int(texCoords35[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords35[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords35[0] > 0.0f && texCoords35[0] < 1.0f && texCoords35[1] > 0.0f && texCoords35[1] < 1.0f;
float sample35 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset35)[3] > epsilon)) * 0.004456f * float(texInBounds35);
vec2 offset36 = vec2(onePixel[0] * -4.0, onePixel[1] * -6.0);
vec2 texCoords36 =  vec2(texture_uv[0], texture_uv[1]) + offset36;
float texAlpha36 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3]);
bool texInBounds36 = (abs(int(texCoords36[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords36[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords36[0] > 0.0f && texCoords36[0] < 1.0f && texCoords36[1] > 0.0f && texCoords36[1] < 1.0f;
float sample36 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset36)[3] > epsilon)) * 0.004446f * float(texInBounds36);
vec2 offset37 = vec2(onePixel[0] * -4.0, onePixel[1] * -5.0);
vec2 texCoords37 =  vec2(texture_uv[0], texture_uv[1]) + offset37;
float texAlpha37 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3]);
bool texInBounds37 = (abs(int(texCoords37[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords37[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords37[0] > 0.0f && texCoords37[0] < 1.0f && texCoords37[1] > 0.0f && texCoords37[1] < 1.0f;
float sample37 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset37)[3] > epsilon)) * 0.004502f * float(texInBounds37);
vec2 offset38 = vec2(onePixel[0] * -4.0, onePixel[1] * -4.0);
vec2 texCoords38 =  vec2(texture_uv[0], texture_uv[1]) + offset38;
float texAlpha38 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3]);
bool texInBounds38 = (abs(int(texCoords38[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords38[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords38[0] > 0.0f && texCoords38[0] < 1.0f && texCoords38[1] > 0.0f && texCoords38[1] < 1.0f;
float sample38 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset38)[3] > epsilon)) * 0.004548f * float(texInBounds38);
vec2 offset39 = vec2(onePixel[0] * -4.0, onePixel[1] * -3.0);
vec2 texCoords39 =  vec2(texture_uv[0], texture_uv[1]) + offset39;
float texAlpha39 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3]);
bool texInBounds39 = (abs(int(texCoords39[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords39[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords39[0] > 0.0f && texCoords39[0] < 1.0f && texCoords39[1] > 0.0f && texCoords39[1] < 1.0f;
float sample39 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset39)[3] > epsilon)) * 0.004584f * float(texInBounds39);
vec2 offset40 = vec2(onePixel[0] * -4.0, onePixel[1] * -2.0);
vec2 texCoords40 =  vec2(texture_uv[0], texture_uv[1]) + offset40;
float texAlpha40 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3]);
bool texInBounds40 = (abs(int(texCoords40[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords40[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords40[0] > 0.0f && texCoords40[0] < 1.0f && texCoords40[1] > 0.0f && texCoords40[1] < 1.0f;
float sample40 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset40)[3] > epsilon)) * 0.004610f * float(texInBounds40);
vec2 offset41 = vec2(onePixel[0] * -4.0, onePixel[1] * -1.0);
vec2 texCoords41 =  vec2(texture_uv[0], texture_uv[1]) + offset41;
float texAlpha41 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3]);
bool texInBounds41 = (abs(int(texCoords41[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords41[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords41[0] > 0.0f && texCoords41[0] < 1.0f && texCoords41[1] > 0.0f && texCoords41[1] < 1.0f;
float sample41 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset41)[3] > epsilon)) * 0.004626f * float(texInBounds41);
vec2 offset42 = vec2(onePixel[0] * -4.0, onePixel[1] * 0.0);
vec2 texCoords42 =  vec2(texture_uv[0], texture_uv[1]) + offset42;
float texAlpha42 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3]);
bool texInBounds42 = (abs(int(texCoords42[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords42[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords42[0] > 0.0f && texCoords42[0] < 1.0f && texCoords42[1] > 0.0f && texCoords42[1] < 1.0f;
float sample42 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset42)[3] > epsilon)) * 0.004631f * float(texInBounds42);
vec2 offset43 = vec2(onePixel[0] * -4.0, onePixel[1] * 1.0);
vec2 texCoords43 =  vec2(texture_uv[0], texture_uv[1]) + offset43;
float texAlpha43 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3]);
bool texInBounds43 = (abs(int(texCoords43[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords43[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords43[0] > 0.0f && texCoords43[0] < 1.0f && texCoords43[1] > 0.0f && texCoords43[1] < 1.0f;
float sample43 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset43)[3] > epsilon)) * 0.004626f * float(texInBounds43);
vec2 offset44 = vec2(onePixel[0] * -4.0, onePixel[1] * 2.0);
vec2 texCoords44 =  vec2(texture_uv[0], texture_uv[1]) + offset44;
float texAlpha44 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3]);
bool texInBounds44 = (abs(int(texCoords44[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords44[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords44[0] > 0.0f && texCoords44[0] < 1.0f && texCoords44[1] > 0.0f && texCoords44[1] < 1.0f;
float sample44 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset44)[3] > epsilon)) * 0.004610f * float(texInBounds44);
vec2 offset45 = vec2(onePixel[0] * -4.0, onePixel[1] * 3.0);
vec2 texCoords45 =  vec2(texture_uv[0], texture_uv[1]) + offset45;
float texAlpha45 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3]);
bool texInBounds45 = (abs(int(texCoords45[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords45[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords45[0] > 0.0f && texCoords45[0] < 1.0f && texCoords45[1] > 0.0f && texCoords45[1] < 1.0f;
float sample45 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset45)[3] > epsilon)) * 0.004584f * float(texInBounds45);
vec2 offset46 = vec2(onePixel[0] * -4.0, onePixel[1] * 4.0);
vec2 texCoords46 =  vec2(texture_uv[0], texture_uv[1]) + offset46;
float texAlpha46 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3]);
bool texInBounds46 = (abs(int(texCoords46[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords46[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords46[0] > 0.0f && texCoords46[0] < 1.0f && texCoords46[1] > 0.0f && texCoords46[1] < 1.0f;
float sample46 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset46)[3] > epsilon)) * 0.004548f * float(texInBounds46);
vec2 offset47 = vec2(onePixel[0] * -4.0, onePixel[1] * 5.0);
vec2 texCoords47 =  vec2(texture_uv[0], texture_uv[1]) + offset47;
float texAlpha47 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3]);
bool texInBounds47 = (abs(int(texCoords47[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords47[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords47[0] > 0.0f && texCoords47[0] < 1.0f && texCoords47[1] > 0.0f && texCoords47[1] < 1.0f;
float sample47 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset47)[3] > epsilon)) * 0.004502f * float(texInBounds47);
vec2 offset48 = vec2(onePixel[0] * -4.0, onePixel[1] * 6.0);
vec2 texCoords48 =  vec2(texture_uv[0], texture_uv[1]) + offset48;
float texAlpha48 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3]);
bool texInBounds48 = (abs(int(texCoords48[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords48[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords48[0] > 0.0f && texCoords48[0] < 1.0f && texCoords48[1] > 0.0f && texCoords48[1] < 1.0f;
float sample48 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset48)[3] > epsilon)) * 0.004446f * float(texInBounds48);
vec2 offset49 = vec2(onePixel[0] * -3.0, onePixel[1] * -7.0);
vec2 texCoords49 =  vec2(texture_uv[0], texture_uv[1]) + offset49;
float texAlpha49 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3]);
bool texInBounds49 = (abs(int(texCoords49[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords49[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords49[0] > 0.0f && texCoords49[0] < 1.0f && texCoords49[1] > 0.0f && texCoords49[1] < 1.0f;
float sample49 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset49)[3] > epsilon)) * 0.004416f * float(texInBounds49);
vec2 offset50 = vec2(onePixel[0] * -3.0, onePixel[1] * -6.0);
vec2 texCoords50 =  vec2(texture_uv[0], texture_uv[1]) + offset50;
float texAlpha50 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3]);
bool texInBounds50 = (abs(int(texCoords50[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords50[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords50[0] > 0.0f && texCoords50[0] < 1.0f && texCoords50[1] > 0.0f && texCoords50[1] < 1.0f;
float sample50 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset50)[3] > epsilon)) * 0.004482f * float(texInBounds50);
vec2 offset51 = vec2(onePixel[0] * -3.0, onePixel[1] * -5.0);
vec2 texCoords51 =  vec2(texture_uv[0], texture_uv[1]) + offset51;
float texAlpha51 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3]);
bool texInBounds51 = (abs(int(texCoords51[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords51[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords51[0] > 0.0f && texCoords51[0] < 1.0f && texCoords51[1] > 0.0f && texCoords51[1] < 1.0f;
float sample51 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset51)[3] > epsilon)) * 0.004538f * float(texInBounds51);
vec2 offset52 = vec2(onePixel[0] * -3.0, onePixel[1] * -4.0);
vec2 texCoords52 =  vec2(texture_uv[0], texture_uv[1]) + offset52;
float texAlpha52 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3]);
bool texInBounds52 = (abs(int(texCoords52[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords52[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords52[0] > 0.0f && texCoords52[0] < 1.0f && texCoords52[1] > 0.0f && texCoords52[1] < 1.0f;
float sample52 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset52)[3] > epsilon)) * 0.004584f * float(texInBounds52);
vec2 offset53 = vec2(onePixel[0] * -3.0, onePixel[1] * -3.0);
vec2 texCoords53 =  vec2(texture_uv[0], texture_uv[1]) + offset53;
float texAlpha53 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3]);
bool texInBounds53 = (abs(int(texCoords53[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords53[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords53[0] > 0.0f && texCoords53[0] < 1.0f && texCoords53[1] > 0.0f && texCoords53[1] < 1.0f;
float sample53 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset53)[3] > epsilon)) * 0.004621f * float(texInBounds53);
vec2 offset54 = vec2(onePixel[0] * -3.0, onePixel[1] * -2.0);
vec2 texCoords54 =  vec2(texture_uv[0], texture_uv[1]) + offset54;
float texAlpha54 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3]);
bool texInBounds54 = (abs(int(texCoords54[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords54[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords54[0] > 0.0f && texCoords54[0] < 1.0f && texCoords54[1] > 0.0f && texCoords54[1] < 1.0f;
float sample54 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset54)[3] > epsilon)) * 0.004647f * float(texInBounds54);
vec2 offset55 = vec2(onePixel[0] * -3.0, onePixel[1] * -1.0);
vec2 texCoords55 =  vec2(texture_uv[0], texture_uv[1]) + offset55;
float texAlpha55 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3]);
bool texInBounds55 = (abs(int(texCoords55[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords55[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords55[0] > 0.0f && texCoords55[0] < 1.0f && texCoords55[1] > 0.0f && texCoords55[1] < 1.0f;
float sample55 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset55)[3] > epsilon)) * 0.004663f * float(texInBounds55);
vec2 offset56 = vec2(onePixel[0] * -3.0, onePixel[1] * 0.0);
vec2 texCoords56 =  vec2(texture_uv[0], texture_uv[1]) + offset56;
float texAlpha56 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3]);
bool texInBounds56 = (abs(int(texCoords56[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords56[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords56[0] > 0.0f && texCoords56[0] < 1.0f && texCoords56[1] > 0.0f && texCoords56[1] < 1.0f;
float sample56 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset56)[3] > epsilon)) * 0.004668f * float(texInBounds56);
vec2 offset57 = vec2(onePixel[0] * -3.0, onePixel[1] * 1.0);
vec2 texCoords57 =  vec2(texture_uv[0], texture_uv[1]) + offset57;
float texAlpha57 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3]);
bool texInBounds57 = (abs(int(texCoords57[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords57[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords57[0] > 0.0f && texCoords57[0] < 1.0f && texCoords57[1] > 0.0f && texCoords57[1] < 1.0f;
float sample57 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset57)[3] > epsilon)) * 0.004663f * float(texInBounds57);
vec2 offset58 = vec2(onePixel[0] * -3.0, onePixel[1] * 2.0);
vec2 texCoords58 =  vec2(texture_uv[0], texture_uv[1]) + offset58;
float texAlpha58 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3]);
bool texInBounds58 = (abs(int(texCoords58[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords58[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords58[0] > 0.0f && texCoords58[0] < 1.0f && texCoords58[1] > 0.0f && texCoords58[1] < 1.0f;
float sample58 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset58)[3] > epsilon)) * 0.004647f * float(texInBounds58);
vec2 offset59 = vec2(onePixel[0] * -3.0, onePixel[1] * 3.0);
vec2 texCoords59 =  vec2(texture_uv[0], texture_uv[1]) + offset59;
float texAlpha59 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3]);
bool texInBounds59 = (abs(int(texCoords59[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords59[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords59[0] > 0.0f && texCoords59[0] < 1.0f && texCoords59[1] > 0.0f && texCoords59[1] < 1.0f;
float sample59 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset59)[3] > epsilon)) * 0.004621f * float(texInBounds59);
vec2 offset60 = vec2(onePixel[0] * -3.0, onePixel[1] * 4.0);
vec2 texCoords60 =  vec2(texture_uv[0], texture_uv[1]) + offset60;
float texAlpha60 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3]);
bool texInBounds60 = (abs(int(texCoords60[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords60[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords60[0] > 0.0f && texCoords60[0] < 1.0f && texCoords60[1] > 0.0f && texCoords60[1] < 1.0f;
float sample60 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset60)[3] > epsilon)) * 0.004584f * float(texInBounds60);
vec2 offset61 = vec2(onePixel[0] * -3.0, onePixel[1] * 5.0);
vec2 texCoords61 =  vec2(texture_uv[0], texture_uv[1]) + offset61;
float texAlpha61 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3]);
bool texInBounds61 = (abs(int(texCoords61[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords61[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords61[0] > 0.0f && texCoords61[0] < 1.0f && texCoords61[1] > 0.0f && texCoords61[1] < 1.0f;
float sample61 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset61)[3] > epsilon)) * 0.004538f * float(texInBounds61);
vec2 offset62 = vec2(onePixel[0] * -3.0, onePixel[1] * 6.0);
vec2 texCoords62 =  vec2(texture_uv[0], texture_uv[1]) + offset62;
float texAlpha62 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3]);
bool texInBounds62 = (abs(int(texCoords62[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords62[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords62[0] > 0.0f && texCoords62[0] < 1.0f && texCoords62[1] > 0.0f && texCoords62[1] < 1.0f;
float sample62 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset62)[3] > epsilon)) * 0.004482f * float(texInBounds62);
vec2 offset63 = vec2(onePixel[0] * -3.0, onePixel[1] * 7.0);
vec2 texCoords63 =  vec2(texture_uv[0], texture_uv[1]) + offset63;
float texAlpha63 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3]);
bool texInBounds63 = (abs(int(texCoords63[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords63[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords63[0] > 0.0f && texCoords63[0] < 1.0f && texCoords63[1] > 0.0f && texCoords63[1] < 1.0f;
float sample63 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset63)[3] > epsilon)) * 0.004416f * float(texInBounds63);
vec2 offset64 = vec2(onePixel[0] * -2.0, onePixel[1] * -8.0);
vec2 texCoords64 =  vec2(texture_uv[0], texture_uv[1]) + offset64;
float texAlpha64 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3]);
bool texInBounds64 = (abs(int(texCoords64[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords64[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords64[0] > 0.0f && texCoords64[0] < 1.0f && texCoords64[1] > 0.0f && texCoords64[1] < 1.0f;
float sample64 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset64)[3] > epsilon)) * 0.004366f * float(texInBounds64);
vec2 offset65 = vec2(onePixel[0] * -2.0, onePixel[1] * -7.0);
vec2 texCoords65 =  vec2(texture_uv[0], texture_uv[1]) + offset65;
float texAlpha65 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3]);
bool texInBounds65 = (abs(int(texCoords65[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords65[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords65[0] > 0.0f && texCoords65[0] < 1.0f && texCoords65[1] > 0.0f && texCoords65[1] < 1.0f;
float sample65 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset65)[3] > epsilon)) * 0.004441f * float(texInBounds65);
vec2 offset66 = vec2(onePixel[0] * -2.0, onePixel[1] * -6.0);
vec2 texCoords66 =  vec2(texture_uv[0], texture_uv[1]) + offset66;
float texAlpha66 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3]);
bool texInBounds66 = (abs(int(texCoords66[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords66[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords66[0] > 0.0f && texCoords66[0] < 1.0f && texCoords66[1] > 0.0f && texCoords66[1] < 1.0f;
float sample66 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset66)[3] > epsilon)) * 0.004507f * float(texInBounds66);
vec2 offset67 = vec2(onePixel[0] * -2.0, onePixel[1] * -5.0);
vec2 texCoords67 =  vec2(texture_uv[0], texture_uv[1]) + offset67;
float texAlpha67 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3]);
bool texInBounds67 = (abs(int(texCoords67[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords67[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords67[0] > 0.0f && texCoords67[0] < 1.0f && texCoords67[1] > 0.0f && texCoords67[1] < 1.0f;
float sample67 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset67)[3] > epsilon)) * 0.004564f * float(texInBounds67);
vec2 offset68 = vec2(onePixel[0] * -2.0, onePixel[1] * -4.0);
vec2 texCoords68 =  vec2(texture_uv[0], texture_uv[1]) + offset68;
float texAlpha68 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3]);
bool texInBounds68 = (abs(int(texCoords68[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords68[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords68[0] > 0.0f && texCoords68[0] < 1.0f && texCoords68[1] > 0.0f && texCoords68[1] < 1.0f;
float sample68 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset68)[3] > epsilon)) * 0.004610f * float(texInBounds68);
vec2 offset69 = vec2(onePixel[0] * -2.0, onePixel[1] * -3.0);
vec2 texCoords69 =  vec2(texture_uv[0], texture_uv[1]) + offset69;
float texAlpha69 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3]);
bool texInBounds69 = (abs(int(texCoords69[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords69[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords69[0] > 0.0f && texCoords69[0] < 1.0f && texCoords69[1] > 0.0f && texCoords69[1] < 1.0f;
float sample69 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset69)[3] > epsilon)) * 0.004647f * float(texInBounds69);
vec2 offset70 = vec2(onePixel[0] * -2.0, onePixel[1] * -2.0);
vec2 texCoords70 =  vec2(texture_uv[0], texture_uv[1]) + offset70;
float texAlpha70 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3]);
bool texInBounds70 = (abs(int(texCoords70[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords70[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords70[0] > 0.0f && texCoords70[0] < 1.0f && texCoords70[1] > 0.0f && texCoords70[1] < 1.0f;
float sample70 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset70)[3] > epsilon)) * 0.004674f * float(texInBounds70);
vec2 offset71 = vec2(onePixel[0] * -2.0, onePixel[1] * -1.0);
vec2 texCoords71 =  vec2(texture_uv[0], texture_uv[1]) + offset71;
float texAlpha71 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3]);
bool texInBounds71 = (abs(int(texCoords71[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords71[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords71[0] > 0.0f && texCoords71[0] < 1.0f && texCoords71[1] > 0.0f && texCoords71[1] < 1.0f;
float sample71 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset71)[3] > epsilon)) * 0.004690f * float(texInBounds71);
vec2 offset72 = vec2(onePixel[0] * -2.0, onePixel[1] * 0.0);
vec2 texCoords72 =  vec2(texture_uv[0], texture_uv[1]) + offset72;
float texAlpha72 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3]);
bool texInBounds72 = (abs(int(texCoords72[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords72[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords72[0] > 0.0f && texCoords72[0] < 1.0f && texCoords72[1] > 0.0f && texCoords72[1] < 1.0f;
float sample72 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset72)[3] > epsilon)) * 0.004695f * float(texInBounds72);
vec2 offset73 = vec2(onePixel[0] * -2.0, onePixel[1] * 1.0);
vec2 texCoords73 =  vec2(texture_uv[0], texture_uv[1]) + offset73;
float texAlpha73 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3]);
bool texInBounds73 = (abs(int(texCoords73[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords73[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords73[0] > 0.0f && texCoords73[0] < 1.0f && texCoords73[1] > 0.0f && texCoords73[1] < 1.0f;
float sample73 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset73)[3] > epsilon)) * 0.004690f * float(texInBounds73);
vec2 offset74 = vec2(onePixel[0] * -2.0, onePixel[1] * 2.0);
vec2 texCoords74 =  vec2(texture_uv[0], texture_uv[1]) + offset74;
float texAlpha74 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3]);
bool texInBounds74 = (abs(int(texCoords74[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords74[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords74[0] > 0.0f && texCoords74[0] < 1.0f && texCoords74[1] > 0.0f && texCoords74[1] < 1.0f;
float sample74 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset74)[3] > epsilon)) * 0.004674f * float(texInBounds74);
vec2 offset75 = vec2(onePixel[0] * -2.0, onePixel[1] * 3.0);
vec2 texCoords75 =  vec2(texture_uv[0], texture_uv[1]) + offset75;
float texAlpha75 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3]);
bool texInBounds75 = (abs(int(texCoords75[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords75[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords75[0] > 0.0f && texCoords75[0] < 1.0f && texCoords75[1] > 0.0f && texCoords75[1] < 1.0f;
float sample75 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset75)[3] > epsilon)) * 0.004647f * float(texInBounds75);
vec2 offset76 = vec2(onePixel[0] * -2.0, onePixel[1] * 4.0);
vec2 texCoords76 =  vec2(texture_uv[0], texture_uv[1]) + offset76;
float texAlpha76 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3]);
bool texInBounds76 = (abs(int(texCoords76[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords76[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords76[0] > 0.0f && texCoords76[0] < 1.0f && texCoords76[1] > 0.0f && texCoords76[1] < 1.0f;
float sample76 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset76)[3] > epsilon)) * 0.004610f * float(texInBounds76);
vec2 offset77 = vec2(onePixel[0] * -2.0, onePixel[1] * 5.0);
vec2 texCoords77 =  vec2(texture_uv[0], texture_uv[1]) + offset77;
float texAlpha77 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3]);
bool texInBounds77 = (abs(int(texCoords77[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords77[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords77[0] > 0.0f && texCoords77[0] < 1.0f && texCoords77[1] > 0.0f && texCoords77[1] < 1.0f;
float sample77 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset77)[3] > epsilon)) * 0.004564f * float(texInBounds77);
vec2 offset78 = vec2(onePixel[0] * -2.0, onePixel[1] * 6.0);
vec2 texCoords78 =  vec2(texture_uv[0], texture_uv[1]) + offset78;
float texAlpha78 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3]);
bool texInBounds78 = (abs(int(texCoords78[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords78[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords78[0] > 0.0f && texCoords78[0] < 1.0f && texCoords78[1] > 0.0f && texCoords78[1] < 1.0f;
float sample78 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset78)[3] > epsilon)) * 0.004507f * float(texInBounds78);
vec2 offset79 = vec2(onePixel[0] * -2.0, onePixel[1] * 7.0);
vec2 texCoords79 =  vec2(texture_uv[0], texture_uv[1]) + offset79;
float texAlpha79 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3]);
bool texInBounds79 = (abs(int(texCoords79[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords79[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords79[0] > 0.0f && texCoords79[0] < 1.0f && texCoords79[1] > 0.0f && texCoords79[1] < 1.0f;
float sample79 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset79)[3] > epsilon)) * 0.004441f * float(texInBounds79);
vec2 offset80 = vec2(onePixel[0] * -2.0, onePixel[1] * 8.0);
vec2 texCoords80 =  vec2(texture_uv[0], texture_uv[1]) + offset80;
float texAlpha80 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3]);
bool texInBounds80 = (abs(int(texCoords80[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords80[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords80[0] > 0.0f && texCoords80[0] < 1.0f && texCoords80[1] > 0.0f && texCoords80[1] < 1.0f;
float sample80 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset80)[3] > epsilon)) * 0.004366f * float(texInBounds80);
vec2 offset81 = vec2(onePixel[0] * -1.0, onePixel[1] * -9.0);
vec2 texCoords81 =  vec2(texture_uv[0], texture_uv[1]) + offset81;
float texAlpha81 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3]);
bool texInBounds81 = (abs(int(texCoords81[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords81[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords81[0] > 0.0f && texCoords81[0] < 1.0f && texCoords81[1] > 0.0f && texCoords81[1] < 1.0f;
float sample81 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset81)[3] > epsilon)) * 0.004298f * float(texInBounds81);
vec2 offset82 = vec2(onePixel[0] * -1.0, onePixel[1] * -8.0);
vec2 texCoords82 =  vec2(texture_uv[0], texture_uv[1]) + offset82;
float texAlpha82 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3]);
bool texInBounds82 = (abs(int(texCoords82[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords82[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords82[0] > 0.0f && texCoords82[0] < 1.0f && texCoords82[1] > 0.0f && texCoords82[1] < 1.0f;
float sample82 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset82)[3] > epsilon)) * 0.004381f * float(texInBounds82);
vec2 offset83 = vec2(onePixel[0] * -1.0, onePixel[1] * -7.0);
vec2 texCoords83 =  vec2(texture_uv[0], texture_uv[1]) + offset83;
float texAlpha83 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3]);
bool texInBounds83 = (abs(int(texCoords83[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords83[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords83[0] > 0.0f && texCoords83[0] < 1.0f && texCoords83[1] > 0.0f && texCoords83[1] < 1.0f;
float sample83 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset83)[3] > epsilon)) * 0.004456f * float(texInBounds83);
vec2 offset84 = vec2(onePixel[0] * -1.0, onePixel[1] * -6.0);
vec2 texCoords84 =  vec2(texture_uv[0], texture_uv[1]) + offset84;
float texAlpha84 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3]);
bool texInBounds84 = (abs(int(texCoords84[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords84[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords84[0] > 0.0f && texCoords84[0] < 1.0f && texCoords84[1] > 0.0f && texCoords84[1] < 1.0f;
float sample84 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset84)[3] > epsilon)) * 0.004522f * float(texInBounds84);
vec2 offset85 = vec2(onePixel[0] * -1.0, onePixel[1] * -5.0);
vec2 texCoords85 =  vec2(texture_uv[0], texture_uv[1]) + offset85;
float texAlpha85 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3]);
bool texInBounds85 = (abs(int(texCoords85[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords85[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords85[0] > 0.0f && texCoords85[0] < 1.0f && texCoords85[1] > 0.0f && texCoords85[1] < 1.0f;
float sample85 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset85)[3] > epsilon)) * 0.004579f * float(texInBounds85);
vec2 offset86 = vec2(onePixel[0] * -1.0, onePixel[1] * -4.0);
vec2 texCoords86 =  vec2(texture_uv[0], texture_uv[1]) + offset86;
float texAlpha86 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3]);
bool texInBounds86 = (abs(int(texCoords86[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords86[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords86[0] > 0.0f && texCoords86[0] < 1.0f && texCoords86[1] > 0.0f && texCoords86[1] < 1.0f;
float sample86 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset86)[3] > epsilon)) * 0.004626f * float(texInBounds86);
vec2 offset87 = vec2(onePixel[0] * -1.0, onePixel[1] * -3.0);
vec2 texCoords87 =  vec2(texture_uv[0], texture_uv[1]) + offset87;
float texAlpha87 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3]);
bool texInBounds87 = (abs(int(texCoords87[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords87[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords87[0] > 0.0f && texCoords87[0] < 1.0f && texCoords87[1] > 0.0f && texCoords87[1] < 1.0f;
float sample87 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset87)[3] > epsilon)) * 0.004663f * float(texInBounds87);
vec2 offset88 = vec2(onePixel[0] * -1.0, onePixel[1] * -2.0);
vec2 texCoords88 =  vec2(texture_uv[0], texture_uv[1]) + offset88;
float texAlpha88 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3]);
bool texInBounds88 = (abs(int(texCoords88[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords88[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords88[0] > 0.0f && texCoords88[0] < 1.0f && texCoords88[1] > 0.0f && texCoords88[1] < 1.0f;
float sample88 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset88)[3] > epsilon)) * 0.004690f * float(texInBounds88);
vec2 offset89 = vec2(onePixel[0] * -1.0, onePixel[1] * -1.0);
vec2 texCoords89 =  vec2(texture_uv[0], texture_uv[1]) + offset89;
float texAlpha89 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3]);
bool texInBounds89 = (abs(int(texCoords89[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords89[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords89[0] > 0.0f && texCoords89[0] < 1.0f && texCoords89[1] > 0.0f && texCoords89[1] < 1.0f;
float sample89 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset89)[3] > epsilon)) * 0.004706f * float(texInBounds89);
vec2 offset90 = vec2(onePixel[0] * -1.0, onePixel[1] * 0.0);
vec2 texCoords90 =  vec2(texture_uv[0], texture_uv[1]) + offset90;
float texAlpha90 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3]);
bool texInBounds90 = (abs(int(texCoords90[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords90[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords90[0] > 0.0f && texCoords90[0] < 1.0f && texCoords90[1] > 0.0f && texCoords90[1] < 1.0f;
float sample90 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset90)[3] > epsilon)) * 0.004711f * float(texInBounds90);
vec2 offset91 = vec2(onePixel[0] * -1.0, onePixel[1] * 1.0);
vec2 texCoords91 =  vec2(texture_uv[0], texture_uv[1]) + offset91;
float texAlpha91 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3]);
bool texInBounds91 = (abs(int(texCoords91[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords91[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords91[0] > 0.0f && texCoords91[0] < 1.0f && texCoords91[1] > 0.0f && texCoords91[1] < 1.0f;
float sample91 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset91)[3] > epsilon)) * 0.004706f * float(texInBounds91);
vec2 offset92 = vec2(onePixel[0] * -1.0, onePixel[1] * 2.0);
vec2 texCoords92 =  vec2(texture_uv[0], texture_uv[1]) + offset92;
float texAlpha92 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3]);
bool texInBounds92 = (abs(int(texCoords92[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords92[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords92[0] > 0.0f && texCoords92[0] < 1.0f && texCoords92[1] > 0.0f && texCoords92[1] < 1.0f;
float sample92 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset92)[3] > epsilon)) * 0.004690f * float(texInBounds92);
vec2 offset93 = vec2(onePixel[0] * -1.0, onePixel[1] * 3.0);
vec2 texCoords93 =  vec2(texture_uv[0], texture_uv[1]) + offset93;
float texAlpha93 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3]);
bool texInBounds93 = (abs(int(texCoords93[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords93[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords93[0] > 0.0f && texCoords93[0] < 1.0f && texCoords93[1] > 0.0f && texCoords93[1] < 1.0f;
float sample93 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset93)[3] > epsilon)) * 0.004663f * float(texInBounds93);
vec2 offset94 = vec2(onePixel[0] * -1.0, onePixel[1] * 4.0);
vec2 texCoords94 =  vec2(texture_uv[0], texture_uv[1]) + offset94;
float texAlpha94 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3]);
bool texInBounds94 = (abs(int(texCoords94[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords94[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords94[0] > 0.0f && texCoords94[0] < 1.0f && texCoords94[1] > 0.0f && texCoords94[1] < 1.0f;
float sample94 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset94)[3] > epsilon)) * 0.004626f * float(texInBounds94);
vec2 offset95 = vec2(onePixel[0] * -1.0, onePixel[1] * 5.0);
vec2 texCoords95 =  vec2(texture_uv[0], texture_uv[1]) + offset95;
float texAlpha95 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3]);
bool texInBounds95 = (abs(int(texCoords95[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords95[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords95[0] > 0.0f && texCoords95[0] < 1.0f && texCoords95[1] > 0.0f && texCoords95[1] < 1.0f;
float sample95 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset95)[3] > epsilon)) * 0.004579f * float(texInBounds95);
vec2 offset96 = vec2(onePixel[0] * -1.0, onePixel[1] * 6.0);
vec2 texCoords96 =  vec2(texture_uv[0], texture_uv[1]) + offset96;
float texAlpha96 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3]);
bool texInBounds96 = (abs(int(texCoords96[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords96[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords96[0] > 0.0f && texCoords96[0] < 1.0f && texCoords96[1] > 0.0f && texCoords96[1] < 1.0f;
float sample96 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset96)[3] > epsilon)) * 0.004522f * float(texInBounds96);
vec2 offset97 = vec2(onePixel[0] * -1.0, onePixel[1] * 7.0);
vec2 texCoords97 =  vec2(texture_uv[0], texture_uv[1]) + offset97;
float texAlpha97 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3]);
bool texInBounds97 = (abs(int(texCoords97[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords97[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords97[0] > 0.0f && texCoords97[0] < 1.0f && texCoords97[1] > 0.0f && texCoords97[1] < 1.0f;
float sample97 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset97)[3] > epsilon)) * 0.004456f * float(texInBounds97);
vec2 offset98 = vec2(onePixel[0] * -1.0, onePixel[1] * 8.0);
vec2 texCoords98 =  vec2(texture_uv[0], texture_uv[1]) + offset98;
float texAlpha98 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3]);
bool texInBounds98 = (abs(int(texCoords98[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords98[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords98[0] > 0.0f && texCoords98[0] < 1.0f && texCoords98[1] > 0.0f && texCoords98[1] < 1.0f;
float sample98 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset98)[3] > epsilon)) * 0.004381f * float(texInBounds98);
vec2 offset99 = vec2(onePixel[0] * -1.0, onePixel[1] * 9.0);
vec2 texCoords99 =  vec2(texture_uv[0], texture_uv[1]) + offset99;
float texAlpha99 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3]);
bool texInBounds99 = (abs(int(texCoords99[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords99[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords99[0] > 0.0f && texCoords99[0] < 1.0f && texCoords99[1] > 0.0f && texCoords99[1] < 1.0f;
float sample99 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset99)[3] > epsilon)) * 0.004298f * float(texInBounds99);
vec2 offset100 = vec2(onePixel[0] * 0.0, onePixel[1] * -10.0);
vec2 texCoords100 =  vec2(texture_uv[0], texture_uv[1]) + offset100;
float texAlpha100 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3]);
bool texInBounds100 = (abs(int(texCoords100[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords100[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords100[0] > 0.0f && texCoords100[0] < 1.0f && texCoords100[1] > 0.0f && texCoords100[1] < 1.0f;
float sample100 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset100)[3] > epsilon)) * 0.004211f * float(texInBounds100);
vec2 offset101 = vec2(onePixel[0] * 0.0, onePixel[1] * -9.0);
vec2 texCoords101 =  vec2(texture_uv[0], texture_uv[1]) + offset101;
float texAlpha101 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3]);
bool texInBounds101 = (abs(int(texCoords101[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords101[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords101[0] > 0.0f && texCoords101[0] < 1.0f && texCoords101[1] > 0.0f && texCoords101[1] < 1.0f;
float sample101 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset101)[3] > epsilon)) * 0.004302f * float(texInBounds101);
vec2 offset102 = vec2(onePixel[0] * 0.0, onePixel[1] * -8.0);
vec2 texCoords102 =  vec2(texture_uv[0], texture_uv[1]) + offset102;
float texAlpha102 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3]);
bool texInBounds102 = (abs(int(texCoords102[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords102[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords102[0] > 0.0f && texCoords102[0] < 1.0f && texCoords102[1] > 0.0f && texCoords102[1] < 1.0f;
float sample102 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset102)[3] > epsilon)) * 0.004386f * float(texInBounds102);
vec2 offset103 = vec2(onePixel[0] * 0.0, onePixel[1] * -7.0);
vec2 texCoords103 =  vec2(texture_uv[0], texture_uv[1]) + offset103;
float texAlpha103 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3]);
bool texInBounds103 = (abs(int(texCoords103[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords103[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords103[0] > 0.0f && texCoords103[0] < 1.0f && texCoords103[1] > 0.0f && texCoords103[1] < 1.0f;
float sample103 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset103)[3] > epsilon)) * 0.004461f * float(texInBounds103);
vec2 offset104 = vec2(onePixel[0] * 0.0, onePixel[1] * -6.0);
vec2 texCoords104 =  vec2(texture_uv[0], texture_uv[1]) + offset104;
float texAlpha104 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3]);
bool texInBounds104 = (abs(int(texCoords104[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords104[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords104[0] > 0.0f && texCoords104[0] < 1.0f && texCoords104[1] > 0.0f && texCoords104[1] < 1.0f;
float sample104 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset104)[3] > epsilon)) * 0.004528f * float(texInBounds104);
vec2 offset105 = vec2(onePixel[0] * 0.0, onePixel[1] * -5.0);
vec2 texCoords105 =  vec2(texture_uv[0], texture_uv[1]) + offset105;
float texAlpha105 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3]);
bool texInBounds105 = (abs(int(texCoords105[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords105[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords105[0] > 0.0f && texCoords105[0] < 1.0f && texCoords105[1] > 0.0f && texCoords105[1] < 1.0f;
float sample105 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset105)[3] > epsilon)) * 0.004584f * float(texInBounds105);
vec2 offset106 = vec2(onePixel[0] * 0.0, onePixel[1] * -4.0);
vec2 texCoords106 =  vec2(texture_uv[0], texture_uv[1]) + offset106;
float texAlpha106 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3]);
bool texInBounds106 = (abs(int(texCoords106[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords106[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords106[0] > 0.0f && texCoords106[0] < 1.0f && texCoords106[1] > 0.0f && texCoords106[1] < 1.0f;
float sample106 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset106)[3] > epsilon)) * 0.004631f * float(texInBounds106);
vec2 offset107 = vec2(onePixel[0] * 0.0, onePixel[1] * -3.0);
vec2 texCoords107 =  vec2(texture_uv[0], texture_uv[1]) + offset107;
float texAlpha107 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3]);
bool texInBounds107 = (abs(int(texCoords107[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords107[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords107[0] > 0.0f && texCoords107[0] < 1.0f && texCoords107[1] > 0.0f && texCoords107[1] < 1.0f;
float sample107 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset107)[3] > epsilon)) * 0.004668f * float(texInBounds107);
vec2 offset108 = vec2(onePixel[0] * 0.0, onePixel[1] * -2.0);
vec2 texCoords108 =  vec2(texture_uv[0], texture_uv[1]) + offset108;
float texAlpha108 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3]);
bool texInBounds108 = (abs(int(texCoords108[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords108[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords108[0] > 0.0f && texCoords108[0] < 1.0f && texCoords108[1] > 0.0f && texCoords108[1] < 1.0f;
float sample108 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset108)[3] > epsilon)) * 0.004695f * float(texInBounds108);
vec2 offset109 = vec2(onePixel[0] * 0.0, onePixel[1] * -1.0);
vec2 texCoords109 =  vec2(texture_uv[0], texture_uv[1]) + offset109;
float texAlpha109 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3]);
bool texInBounds109 = (abs(int(texCoords109[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords109[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords109[0] > 0.0f && texCoords109[0] < 1.0f && texCoords109[1] > 0.0f && texCoords109[1] < 1.0f;
float sample109 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset109)[3] > epsilon)) * 0.004711f * float(texInBounds109);
vec2 offset110 = vec2(onePixel[0] * 0.0, onePixel[1] * 0.0);
vec2 texCoords110 =  vec2(texture_uv[0], texture_uv[1]) + offset110;
float texAlpha110 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3]);
bool texInBounds110 = (abs(int(texCoords110[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords110[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords110[0] > 0.0f && texCoords110[0] < 1.0f && texCoords110[1] > 0.0f && texCoords110[1] < 1.0f;
float sample110 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset110)[3] > epsilon)) * 0.004716f * float(texInBounds110);
vec2 offset111 = vec2(onePixel[0] * 0.0, onePixel[1] * 1.0);
vec2 texCoords111 =  vec2(texture_uv[0], texture_uv[1]) + offset111;
float texAlpha111 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3]);
bool texInBounds111 = (abs(int(texCoords111[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords111[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords111[0] > 0.0f && texCoords111[0] < 1.0f && texCoords111[1] > 0.0f && texCoords111[1] < 1.0f;
float sample111 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset111)[3] > epsilon)) * 0.004711f * float(texInBounds111);
vec2 offset112 = vec2(onePixel[0] * 0.0, onePixel[1] * 2.0);
vec2 texCoords112 =  vec2(texture_uv[0], texture_uv[1]) + offset112;
float texAlpha112 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3]);
bool texInBounds112 = (abs(int(texCoords112[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords112[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords112[0] > 0.0f && texCoords112[0] < 1.0f && texCoords112[1] > 0.0f && texCoords112[1] < 1.0f;
float sample112 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset112)[3] > epsilon)) * 0.004695f * float(texInBounds112);
vec2 offset113 = vec2(onePixel[0] * 0.0, onePixel[1] * 3.0);
vec2 texCoords113 =  vec2(texture_uv[0], texture_uv[1]) + offset113;
float texAlpha113 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3]);
bool texInBounds113 = (abs(int(texCoords113[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords113[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords113[0] > 0.0f && texCoords113[0] < 1.0f && texCoords113[1] > 0.0f && texCoords113[1] < 1.0f;
float sample113 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset113)[3] > epsilon)) * 0.004668f * float(texInBounds113);
vec2 offset114 = vec2(onePixel[0] * 0.0, onePixel[1] * 4.0);
vec2 texCoords114 =  vec2(texture_uv[0], texture_uv[1]) + offset114;
float texAlpha114 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3]);
bool texInBounds114 = (abs(int(texCoords114[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords114[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords114[0] > 0.0f && texCoords114[0] < 1.0f && texCoords114[1] > 0.0f && texCoords114[1] < 1.0f;
float sample114 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset114)[3] > epsilon)) * 0.004631f * float(texInBounds114);
vec2 offset115 = vec2(onePixel[0] * 0.0, onePixel[1] * 5.0);
vec2 texCoords115 =  vec2(texture_uv[0], texture_uv[1]) + offset115;
float texAlpha115 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3]);
bool texInBounds115 = (abs(int(texCoords115[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords115[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords115[0] > 0.0f && texCoords115[0] < 1.0f && texCoords115[1] > 0.0f && texCoords115[1] < 1.0f;
float sample115 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset115)[3] > epsilon)) * 0.004584f * float(texInBounds115);
vec2 offset116 = vec2(onePixel[0] * 0.0, onePixel[1] * 6.0);
vec2 texCoords116 =  vec2(texture_uv[0], texture_uv[1]) + offset116;
float texAlpha116 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3]);
bool texInBounds116 = (abs(int(texCoords116[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords116[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords116[0] > 0.0f && texCoords116[0] < 1.0f && texCoords116[1] > 0.0f && texCoords116[1] < 1.0f;
float sample116 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset116)[3] > epsilon)) * 0.004528f * float(texInBounds116);
vec2 offset117 = vec2(onePixel[0] * 0.0, onePixel[1] * 7.0);
vec2 texCoords117 =  vec2(texture_uv[0], texture_uv[1]) + offset117;
float texAlpha117 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3]);
bool texInBounds117 = (abs(int(texCoords117[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords117[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords117[0] > 0.0f && texCoords117[0] < 1.0f && texCoords117[1] > 0.0f && texCoords117[1] < 1.0f;
float sample117 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset117)[3] > epsilon)) * 0.004461f * float(texInBounds117);
vec2 offset118 = vec2(onePixel[0] * 0.0, onePixel[1] * 8.0);
vec2 texCoords118 =  vec2(texture_uv[0], texture_uv[1]) + offset118;
float texAlpha118 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3]);
bool texInBounds118 = (abs(int(texCoords118[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords118[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords118[0] > 0.0f && texCoords118[0] < 1.0f && texCoords118[1] > 0.0f && texCoords118[1] < 1.0f;
float sample118 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset118)[3] > epsilon)) * 0.004386f * float(texInBounds118);
vec2 offset119 = vec2(onePixel[0] * 0.0, onePixel[1] * 9.0);
vec2 texCoords119 =  vec2(texture_uv[0], texture_uv[1]) + offset119;
float texAlpha119 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3]);
bool texInBounds119 = (abs(int(texCoords119[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords119[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords119[0] > 0.0f && texCoords119[0] < 1.0f && texCoords119[1] > 0.0f && texCoords119[1] < 1.0f;
float sample119 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset119)[3] > epsilon)) * 0.004302f * float(texInBounds119);
vec2 offset120 = vec2(onePixel[0] * 0.0, onePixel[1] * 10.0);
vec2 texCoords120 =  vec2(texture_uv[0], texture_uv[1]) + offset120;
float texAlpha120 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3]);
bool texInBounds120 = (abs(int(texCoords120[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords120[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords120[0] > 0.0f && texCoords120[0] < 1.0f && texCoords120[1] > 0.0f && texCoords120[1] < 1.0f;
float sample120 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset120)[3] > epsilon)) * 0.004211f * float(texInBounds120);
vec2 offset121 = vec2(onePixel[0] * 1.0, onePixel[1] * -9.0);
vec2 texCoords121 =  vec2(texture_uv[0], texture_uv[1]) + offset121;
float texAlpha121 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3]);
bool texInBounds121 = (abs(int(texCoords121[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords121[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords121[0] > 0.0f && texCoords121[0] < 1.0f && texCoords121[1] > 0.0f && texCoords121[1] < 1.0f;
float sample121 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset121)[3] > epsilon)) * 0.004298f * float(texInBounds121);
vec2 offset122 = vec2(onePixel[0] * 1.0, onePixel[1] * -8.0);
vec2 texCoords122 =  vec2(texture_uv[0], texture_uv[1]) + offset122;
float texAlpha122 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3]);
bool texInBounds122 = (abs(int(texCoords122[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords122[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords122[0] > 0.0f && texCoords122[0] < 1.0f && texCoords122[1] > 0.0f && texCoords122[1] < 1.0f;
float sample122 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset122)[3] > epsilon)) * 0.004381f * float(texInBounds122);
vec2 offset123 = vec2(onePixel[0] * 1.0, onePixel[1] * -7.0);
vec2 texCoords123 =  vec2(texture_uv[0], texture_uv[1]) + offset123;
float texAlpha123 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3]);
bool texInBounds123 = (abs(int(texCoords123[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords123[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords123[0] > 0.0f && texCoords123[0] < 1.0f && texCoords123[1] > 0.0f && texCoords123[1] < 1.0f;
float sample123 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset123)[3] > epsilon)) * 0.004456f * float(texInBounds123);
vec2 offset124 = vec2(onePixel[0] * 1.0, onePixel[1] * -6.0);
vec2 texCoords124 =  vec2(texture_uv[0], texture_uv[1]) + offset124;
float texAlpha124 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3]);
bool texInBounds124 = (abs(int(texCoords124[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords124[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords124[0] > 0.0f && texCoords124[0] < 1.0f && texCoords124[1] > 0.0f && texCoords124[1] < 1.0f;
float sample124 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset124)[3] > epsilon)) * 0.004522f * float(texInBounds124);
vec2 offset125 = vec2(onePixel[0] * 1.0, onePixel[1] * -5.0);
vec2 texCoords125 =  vec2(texture_uv[0], texture_uv[1]) + offset125;
float texAlpha125 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3]);
bool texInBounds125 = (abs(int(texCoords125[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords125[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords125[0] > 0.0f && texCoords125[0] < 1.0f && texCoords125[1] > 0.0f && texCoords125[1] < 1.0f;
float sample125 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset125)[3] > epsilon)) * 0.004579f * float(texInBounds125);
vec2 offset126 = vec2(onePixel[0] * 1.0, onePixel[1] * -4.0);
vec2 texCoords126 =  vec2(texture_uv[0], texture_uv[1]) + offset126;
float texAlpha126 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3]);
bool texInBounds126 = (abs(int(texCoords126[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords126[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords126[0] > 0.0f && texCoords126[0] < 1.0f && texCoords126[1] > 0.0f && texCoords126[1] < 1.0f;
float sample126 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset126)[3] > epsilon)) * 0.004626f * float(texInBounds126);
vec2 offset127 = vec2(onePixel[0] * 1.0, onePixel[1] * -3.0);
vec2 texCoords127 =  vec2(texture_uv[0], texture_uv[1]) + offset127;
float texAlpha127 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3]);
bool texInBounds127 = (abs(int(texCoords127[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords127[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords127[0] > 0.0f && texCoords127[0] < 1.0f && texCoords127[1] > 0.0f && texCoords127[1] < 1.0f;
float sample127 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset127)[3] > epsilon)) * 0.004663f * float(texInBounds127);
vec2 offset128 = vec2(onePixel[0] * 1.0, onePixel[1] * -2.0);
vec2 texCoords128 =  vec2(texture_uv[0], texture_uv[1]) + offset128;
float texAlpha128 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3]);
bool texInBounds128 = (abs(int(texCoords128[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords128[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords128[0] > 0.0f && texCoords128[0] < 1.0f && texCoords128[1] > 0.0f && texCoords128[1] < 1.0f;
float sample128 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset128)[3] > epsilon)) * 0.004690f * float(texInBounds128);
vec2 offset129 = vec2(onePixel[0] * 1.0, onePixel[1] * -1.0);
vec2 texCoords129 =  vec2(texture_uv[0], texture_uv[1]) + offset129;
float texAlpha129 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3]);
bool texInBounds129 = (abs(int(texCoords129[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords129[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords129[0] > 0.0f && texCoords129[0] < 1.0f && texCoords129[1] > 0.0f && texCoords129[1] < 1.0f;
float sample129 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset129)[3] > epsilon)) * 0.004706f * float(texInBounds129);
vec2 offset130 = vec2(onePixel[0] * 1.0, onePixel[1] * 0.0);
vec2 texCoords130 =  vec2(texture_uv[0], texture_uv[1]) + offset130;
float texAlpha130 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3]);
bool texInBounds130 = (abs(int(texCoords130[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords130[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords130[0] > 0.0f && texCoords130[0] < 1.0f && texCoords130[1] > 0.0f && texCoords130[1] < 1.0f;
float sample130 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset130)[3] > epsilon)) * 0.004711f * float(texInBounds130);
vec2 offset131 = vec2(onePixel[0] * 1.0, onePixel[1] * 1.0);
vec2 texCoords131 =  vec2(texture_uv[0], texture_uv[1]) + offset131;
float texAlpha131 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3]);
bool texInBounds131 = (abs(int(texCoords131[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords131[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords131[0] > 0.0f && texCoords131[0] < 1.0f && texCoords131[1] > 0.0f && texCoords131[1] < 1.0f;
float sample131 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset131)[3] > epsilon)) * 0.004706f * float(texInBounds131);
vec2 offset132 = vec2(onePixel[0] * 1.0, onePixel[1] * 2.0);
vec2 texCoords132 =  vec2(texture_uv[0], texture_uv[1]) + offset132;
float texAlpha132 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3]);
bool texInBounds132 = (abs(int(texCoords132[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords132[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords132[0] > 0.0f && texCoords132[0] < 1.0f && texCoords132[1] > 0.0f && texCoords132[1] < 1.0f;
float sample132 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset132)[3] > epsilon)) * 0.004690f * float(texInBounds132);
vec2 offset133 = vec2(onePixel[0] * 1.0, onePixel[1] * 3.0);
vec2 texCoords133 =  vec2(texture_uv[0], texture_uv[1]) + offset133;
float texAlpha133 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3]);
bool texInBounds133 = (abs(int(texCoords133[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords133[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords133[0] > 0.0f && texCoords133[0] < 1.0f && texCoords133[1] > 0.0f && texCoords133[1] < 1.0f;
float sample133 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset133)[3] > epsilon)) * 0.004663f * float(texInBounds133);
vec2 offset134 = vec2(onePixel[0] * 1.0, onePixel[1] * 4.0);
vec2 texCoords134 =  vec2(texture_uv[0], texture_uv[1]) + offset134;
float texAlpha134 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3]);
bool texInBounds134 = (abs(int(texCoords134[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords134[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords134[0] > 0.0f && texCoords134[0] < 1.0f && texCoords134[1] > 0.0f && texCoords134[1] < 1.0f;
float sample134 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset134)[3] > epsilon)) * 0.004626f * float(texInBounds134);
vec2 offset135 = vec2(onePixel[0] * 1.0, onePixel[1] * 5.0);
vec2 texCoords135 =  vec2(texture_uv[0], texture_uv[1]) + offset135;
float texAlpha135 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3]);
bool texInBounds135 = (abs(int(texCoords135[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords135[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords135[0] > 0.0f && texCoords135[0] < 1.0f && texCoords135[1] > 0.0f && texCoords135[1] < 1.0f;
float sample135 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset135)[3] > epsilon)) * 0.004579f * float(texInBounds135);
vec2 offset136 = vec2(onePixel[0] * 1.0, onePixel[1] * 6.0);
vec2 texCoords136 =  vec2(texture_uv[0], texture_uv[1]) + offset136;
float texAlpha136 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3]);
bool texInBounds136 = (abs(int(texCoords136[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords136[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords136[0] > 0.0f && texCoords136[0] < 1.0f && texCoords136[1] > 0.0f && texCoords136[1] < 1.0f;
float sample136 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset136)[3] > epsilon)) * 0.004522f * float(texInBounds136);
vec2 offset137 = vec2(onePixel[0] * 1.0, onePixel[1] * 7.0);
vec2 texCoords137 =  vec2(texture_uv[0], texture_uv[1]) + offset137;
float texAlpha137 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3]);
bool texInBounds137 = (abs(int(texCoords137[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords137[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords137[0] > 0.0f && texCoords137[0] < 1.0f && texCoords137[1] > 0.0f && texCoords137[1] < 1.0f;
float sample137 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset137)[3] > epsilon)) * 0.004456f * float(texInBounds137);
vec2 offset138 = vec2(onePixel[0] * 1.0, onePixel[1] * 8.0);
vec2 texCoords138 =  vec2(texture_uv[0], texture_uv[1]) + offset138;
float texAlpha138 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3]);
bool texInBounds138 = (abs(int(texCoords138[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords138[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords138[0] > 0.0f && texCoords138[0] < 1.0f && texCoords138[1] > 0.0f && texCoords138[1] < 1.0f;
float sample138 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset138)[3] > epsilon)) * 0.004381f * float(texInBounds138);
vec2 offset139 = vec2(onePixel[0] * 1.0, onePixel[1] * 9.0);
vec2 texCoords139 =  vec2(texture_uv[0], texture_uv[1]) + offset139;
float texAlpha139 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3]);
bool texInBounds139 = (abs(int(texCoords139[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords139[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords139[0] > 0.0f && texCoords139[0] < 1.0f && texCoords139[1] > 0.0f && texCoords139[1] < 1.0f;
float sample139 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset139)[3] > epsilon)) * 0.004298f * float(texInBounds139);
vec2 offset140 = vec2(onePixel[0] * 2.0, onePixel[1] * -8.0);
vec2 texCoords140 =  vec2(texture_uv[0], texture_uv[1]) + offset140;
float texAlpha140 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3]);
bool texInBounds140 = (abs(int(texCoords140[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords140[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords140[0] > 0.0f && texCoords140[0] < 1.0f && texCoords140[1] > 0.0f && texCoords140[1] < 1.0f;
float sample140 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset140)[3] > epsilon)) * 0.004366f * float(texInBounds140);
vec2 offset141 = vec2(onePixel[0] * 2.0, onePixel[1] * -7.0);
vec2 texCoords141 =  vec2(texture_uv[0], texture_uv[1]) + offset141;
float texAlpha141 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3]);
bool texInBounds141 = (abs(int(texCoords141[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords141[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords141[0] > 0.0f && texCoords141[0] < 1.0f && texCoords141[1] > 0.0f && texCoords141[1] < 1.0f;
float sample141 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset141)[3] > epsilon)) * 0.004441f * float(texInBounds141);
vec2 offset142 = vec2(onePixel[0] * 2.0, onePixel[1] * -6.0);
vec2 texCoords142 =  vec2(texture_uv[0], texture_uv[1]) + offset142;
float texAlpha142 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3]);
bool texInBounds142 = (abs(int(texCoords142[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords142[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords142[0] > 0.0f && texCoords142[0] < 1.0f && texCoords142[1] > 0.0f && texCoords142[1] < 1.0f;
float sample142 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset142)[3] > epsilon)) * 0.004507f * float(texInBounds142);
vec2 offset143 = vec2(onePixel[0] * 2.0, onePixel[1] * -5.0);
vec2 texCoords143 =  vec2(texture_uv[0], texture_uv[1]) + offset143;
float texAlpha143 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3]);
bool texInBounds143 = (abs(int(texCoords143[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords143[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords143[0] > 0.0f && texCoords143[0] < 1.0f && texCoords143[1] > 0.0f && texCoords143[1] < 1.0f;
float sample143 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset143)[3] > epsilon)) * 0.004564f * float(texInBounds143);
vec2 offset144 = vec2(onePixel[0] * 2.0, onePixel[1] * -4.0);
vec2 texCoords144 =  vec2(texture_uv[0], texture_uv[1]) + offset144;
float texAlpha144 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3]);
bool texInBounds144 = (abs(int(texCoords144[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords144[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords144[0] > 0.0f && texCoords144[0] < 1.0f && texCoords144[1] > 0.0f && texCoords144[1] < 1.0f;
float sample144 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset144)[3] > epsilon)) * 0.004610f * float(texInBounds144);
vec2 offset145 = vec2(onePixel[0] * 2.0, onePixel[1] * -3.0);
vec2 texCoords145 =  vec2(texture_uv[0], texture_uv[1]) + offset145;
float texAlpha145 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3]);
bool texInBounds145 = (abs(int(texCoords145[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords145[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords145[0] > 0.0f && texCoords145[0] < 1.0f && texCoords145[1] > 0.0f && texCoords145[1] < 1.0f;
float sample145 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset145)[3] > epsilon)) * 0.004647f * float(texInBounds145);
vec2 offset146 = vec2(onePixel[0] * 2.0, onePixel[1] * -2.0);
vec2 texCoords146 =  vec2(texture_uv[0], texture_uv[1]) + offset146;
float texAlpha146 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3]);
bool texInBounds146 = (abs(int(texCoords146[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords146[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords146[0] > 0.0f && texCoords146[0] < 1.0f && texCoords146[1] > 0.0f && texCoords146[1] < 1.0f;
float sample146 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset146)[3] > epsilon)) * 0.004674f * float(texInBounds146);
vec2 offset147 = vec2(onePixel[0] * 2.0, onePixel[1] * -1.0);
vec2 texCoords147 =  vec2(texture_uv[0], texture_uv[1]) + offset147;
float texAlpha147 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3]);
bool texInBounds147 = (abs(int(texCoords147[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords147[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords147[0] > 0.0f && texCoords147[0] < 1.0f && texCoords147[1] > 0.0f && texCoords147[1] < 1.0f;
float sample147 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset147)[3] > epsilon)) * 0.004690f * float(texInBounds147);
vec2 offset148 = vec2(onePixel[0] * 2.0, onePixel[1] * 0.0);
vec2 texCoords148 =  vec2(texture_uv[0], texture_uv[1]) + offset148;
float texAlpha148 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3]);
bool texInBounds148 = (abs(int(texCoords148[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords148[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords148[0] > 0.0f && texCoords148[0] < 1.0f && texCoords148[1] > 0.0f && texCoords148[1] < 1.0f;
float sample148 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset148)[3] > epsilon)) * 0.004695f * float(texInBounds148);
vec2 offset149 = vec2(onePixel[0] * 2.0, onePixel[1] * 1.0);
vec2 texCoords149 =  vec2(texture_uv[0], texture_uv[1]) + offset149;
float texAlpha149 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3]);
bool texInBounds149 = (abs(int(texCoords149[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords149[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords149[0] > 0.0f && texCoords149[0] < 1.0f && texCoords149[1] > 0.0f && texCoords149[1] < 1.0f;
float sample149 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset149)[3] > epsilon)) * 0.004690f * float(texInBounds149);
vec2 offset150 = vec2(onePixel[0] * 2.0, onePixel[1] * 2.0);
vec2 texCoords150 =  vec2(texture_uv[0], texture_uv[1]) + offset150;
float texAlpha150 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3]);
bool texInBounds150 = (abs(int(texCoords150[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords150[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords150[0] > 0.0f && texCoords150[0] < 1.0f && texCoords150[1] > 0.0f && texCoords150[1] < 1.0f;
float sample150 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset150)[3] > epsilon)) * 0.004674f * float(texInBounds150);
vec2 offset151 = vec2(onePixel[0] * 2.0, onePixel[1] * 3.0);
vec2 texCoords151 =  vec2(texture_uv[0], texture_uv[1]) + offset151;
float texAlpha151 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3]);
bool texInBounds151 = (abs(int(texCoords151[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords151[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords151[0] > 0.0f && texCoords151[0] < 1.0f && texCoords151[1] > 0.0f && texCoords151[1] < 1.0f;
float sample151 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset151)[3] > epsilon)) * 0.004647f * float(texInBounds151);
vec2 offset152 = vec2(onePixel[0] * 2.0, onePixel[1] * 4.0);
vec2 texCoords152 =  vec2(texture_uv[0], texture_uv[1]) + offset152;
float texAlpha152 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3]);
bool texInBounds152 = (abs(int(texCoords152[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords152[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords152[0] > 0.0f && texCoords152[0] < 1.0f && texCoords152[1] > 0.0f && texCoords152[1] < 1.0f;
float sample152 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset152)[3] > epsilon)) * 0.004610f * float(texInBounds152);
vec2 offset153 = vec2(onePixel[0] * 2.0, onePixel[1] * 5.0);
vec2 texCoords153 =  vec2(texture_uv[0], texture_uv[1]) + offset153;
float texAlpha153 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3]);
bool texInBounds153 = (abs(int(texCoords153[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords153[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords153[0] > 0.0f && texCoords153[0] < 1.0f && texCoords153[1] > 0.0f && texCoords153[1] < 1.0f;
float sample153 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset153)[3] > epsilon)) * 0.004564f * float(texInBounds153);
vec2 offset154 = vec2(onePixel[0] * 2.0, onePixel[1] * 6.0);
vec2 texCoords154 =  vec2(texture_uv[0], texture_uv[1]) + offset154;
float texAlpha154 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3]);
bool texInBounds154 = (abs(int(texCoords154[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords154[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords154[0] > 0.0f && texCoords154[0] < 1.0f && texCoords154[1] > 0.0f && texCoords154[1] < 1.0f;
float sample154 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset154)[3] > epsilon)) * 0.004507f * float(texInBounds154);
vec2 offset155 = vec2(onePixel[0] * 2.0, onePixel[1] * 7.0);
vec2 texCoords155 =  vec2(texture_uv[0], texture_uv[1]) + offset155;
float texAlpha155 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3]);
bool texInBounds155 = (abs(int(texCoords155[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords155[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords155[0] > 0.0f && texCoords155[0] < 1.0f && texCoords155[1] > 0.0f && texCoords155[1] < 1.0f;
float sample155 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset155)[3] > epsilon)) * 0.004441f * float(texInBounds155);
vec2 offset156 = vec2(onePixel[0] * 2.0, onePixel[1] * 8.0);
vec2 texCoords156 =  vec2(texture_uv[0], texture_uv[1]) + offset156;
float texAlpha156 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3]);
bool texInBounds156 = (abs(int(texCoords156[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords156[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords156[0] > 0.0f && texCoords156[0] < 1.0f && texCoords156[1] > 0.0f && texCoords156[1] < 1.0f;
float sample156 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset156)[3] > epsilon)) * 0.004366f * float(texInBounds156);
vec2 offset157 = vec2(onePixel[0] * 3.0, onePixel[1] * -7.0);
vec2 texCoords157 =  vec2(texture_uv[0], texture_uv[1]) + offset157;
float texAlpha157 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3]);
bool texInBounds157 = (abs(int(texCoords157[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords157[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords157[0] > 0.0f && texCoords157[0] < 1.0f && texCoords157[1] > 0.0f && texCoords157[1] < 1.0f;
float sample157 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset157)[3] > epsilon)) * 0.004416f * float(texInBounds157);
vec2 offset158 = vec2(onePixel[0] * 3.0, onePixel[1] * -6.0);
vec2 texCoords158 =  vec2(texture_uv[0], texture_uv[1]) + offset158;
float texAlpha158 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3]);
bool texInBounds158 = (abs(int(texCoords158[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords158[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords158[0] > 0.0f && texCoords158[0] < 1.0f && texCoords158[1] > 0.0f && texCoords158[1] < 1.0f;
float sample158 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset158)[3] > epsilon)) * 0.004482f * float(texInBounds158);
vec2 offset159 = vec2(onePixel[0] * 3.0, onePixel[1] * -5.0);
vec2 texCoords159 =  vec2(texture_uv[0], texture_uv[1]) + offset159;
float texAlpha159 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3]);
bool texInBounds159 = (abs(int(texCoords159[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords159[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords159[0] > 0.0f && texCoords159[0] < 1.0f && texCoords159[1] > 0.0f && texCoords159[1] < 1.0f;
float sample159 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset159)[3] > epsilon)) * 0.004538f * float(texInBounds159);
vec2 offset160 = vec2(onePixel[0] * 3.0, onePixel[1] * -4.0);
vec2 texCoords160 =  vec2(texture_uv[0], texture_uv[1]) + offset160;
float texAlpha160 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3]);
bool texInBounds160 = (abs(int(texCoords160[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords160[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords160[0] > 0.0f && texCoords160[0] < 1.0f && texCoords160[1] > 0.0f && texCoords160[1] < 1.0f;
float sample160 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset160)[3] > epsilon)) * 0.004584f * float(texInBounds160);
vec2 offset161 = vec2(onePixel[0] * 3.0, onePixel[1] * -3.0);
vec2 texCoords161 =  vec2(texture_uv[0], texture_uv[1]) + offset161;
float texAlpha161 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3]);
bool texInBounds161 = (abs(int(texCoords161[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords161[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords161[0] > 0.0f && texCoords161[0] < 1.0f && texCoords161[1] > 0.0f && texCoords161[1] < 1.0f;
float sample161 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset161)[3] > epsilon)) * 0.004621f * float(texInBounds161);
vec2 offset162 = vec2(onePixel[0] * 3.0, onePixel[1] * -2.0);
vec2 texCoords162 =  vec2(texture_uv[0], texture_uv[1]) + offset162;
float texAlpha162 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3]);
bool texInBounds162 = (abs(int(texCoords162[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords162[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords162[0] > 0.0f && texCoords162[0] < 1.0f && texCoords162[1] > 0.0f && texCoords162[1] < 1.0f;
float sample162 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset162)[3] > epsilon)) * 0.004647f * float(texInBounds162);
vec2 offset163 = vec2(onePixel[0] * 3.0, onePixel[1] * -1.0);
vec2 texCoords163 =  vec2(texture_uv[0], texture_uv[1]) + offset163;
float texAlpha163 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3]);
bool texInBounds163 = (abs(int(texCoords163[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords163[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords163[0] > 0.0f && texCoords163[0] < 1.0f && texCoords163[1] > 0.0f && texCoords163[1] < 1.0f;
float sample163 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset163)[3] > epsilon)) * 0.004663f * float(texInBounds163);
vec2 offset164 = vec2(onePixel[0] * 3.0, onePixel[1] * 0.0);
vec2 texCoords164 =  vec2(texture_uv[0], texture_uv[1]) + offset164;
float texAlpha164 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3]);
bool texInBounds164 = (abs(int(texCoords164[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords164[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords164[0] > 0.0f && texCoords164[0] < 1.0f && texCoords164[1] > 0.0f && texCoords164[1] < 1.0f;
float sample164 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset164)[3] > epsilon)) * 0.004668f * float(texInBounds164);
vec2 offset165 = vec2(onePixel[0] * 3.0, onePixel[1] * 1.0);
vec2 texCoords165 =  vec2(texture_uv[0], texture_uv[1]) + offset165;
float texAlpha165 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3]);
bool texInBounds165 = (abs(int(texCoords165[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords165[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords165[0] > 0.0f && texCoords165[0] < 1.0f && texCoords165[1] > 0.0f && texCoords165[1] < 1.0f;
float sample165 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset165)[3] > epsilon)) * 0.004663f * float(texInBounds165);
vec2 offset166 = vec2(onePixel[0] * 3.0, onePixel[1] * 2.0);
vec2 texCoords166 =  vec2(texture_uv[0], texture_uv[1]) + offset166;
float texAlpha166 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3]);
bool texInBounds166 = (abs(int(texCoords166[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords166[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords166[0] > 0.0f && texCoords166[0] < 1.0f && texCoords166[1] > 0.0f && texCoords166[1] < 1.0f;
float sample166 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset166)[3] > epsilon)) * 0.004647f * float(texInBounds166);
vec2 offset167 = vec2(onePixel[0] * 3.0, onePixel[1] * 3.0);
vec2 texCoords167 =  vec2(texture_uv[0], texture_uv[1]) + offset167;
float texAlpha167 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3]);
bool texInBounds167 = (abs(int(texCoords167[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords167[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords167[0] > 0.0f && texCoords167[0] < 1.0f && texCoords167[1] > 0.0f && texCoords167[1] < 1.0f;
float sample167 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset167)[3] > epsilon)) * 0.004621f * float(texInBounds167);
vec2 offset168 = vec2(onePixel[0] * 3.0, onePixel[1] * 4.0);
vec2 texCoords168 =  vec2(texture_uv[0], texture_uv[1]) + offset168;
float texAlpha168 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3]);
bool texInBounds168 = (abs(int(texCoords168[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords168[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords168[0] > 0.0f && texCoords168[0] < 1.0f && texCoords168[1] > 0.0f && texCoords168[1] < 1.0f;
float sample168 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset168)[3] > epsilon)) * 0.004584f * float(texInBounds168);
vec2 offset169 = vec2(onePixel[0] * 3.0, onePixel[1] * 5.0);
vec2 texCoords169 =  vec2(texture_uv[0], texture_uv[1]) + offset169;
float texAlpha169 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3]);
bool texInBounds169 = (abs(int(texCoords169[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords169[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords169[0] > 0.0f && texCoords169[0] < 1.0f && texCoords169[1] > 0.0f && texCoords169[1] < 1.0f;
float sample169 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset169)[3] > epsilon)) * 0.004538f * float(texInBounds169);
vec2 offset170 = vec2(onePixel[0] * 3.0, onePixel[1] * 6.0);
vec2 texCoords170 =  vec2(texture_uv[0], texture_uv[1]) + offset170;
float texAlpha170 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3]);
bool texInBounds170 = (abs(int(texCoords170[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords170[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords170[0] > 0.0f && texCoords170[0] < 1.0f && texCoords170[1] > 0.0f && texCoords170[1] < 1.0f;
float sample170 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset170)[3] > epsilon)) * 0.004482f * float(texInBounds170);
vec2 offset171 = vec2(onePixel[0] * 3.0, onePixel[1] * 7.0);
vec2 texCoords171 =  vec2(texture_uv[0], texture_uv[1]) + offset171;
float texAlpha171 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3]);
bool texInBounds171 = (abs(int(texCoords171[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords171[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords171[0] > 0.0f && texCoords171[0] < 1.0f && texCoords171[1] > 0.0f && texCoords171[1] < 1.0f;
float sample171 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset171)[3] > epsilon)) * 0.004416f * float(texInBounds171);
vec2 offset172 = vec2(onePixel[0] * 4.0, onePixel[1] * -6.0);
vec2 texCoords172 =  vec2(texture_uv[0], texture_uv[1]) + offset172;
float texAlpha172 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3]);
bool texInBounds172 = (abs(int(texCoords172[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords172[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords172[0] > 0.0f && texCoords172[0] < 1.0f && texCoords172[1] > 0.0f && texCoords172[1] < 1.0f;
float sample172 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset172)[3] > epsilon)) * 0.004446f * float(texInBounds172);
vec2 offset173 = vec2(onePixel[0] * 4.0, onePixel[1] * -5.0);
vec2 texCoords173 =  vec2(texture_uv[0], texture_uv[1]) + offset173;
float texAlpha173 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3]);
bool texInBounds173 = (abs(int(texCoords173[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords173[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords173[0] > 0.0f && texCoords173[0] < 1.0f && texCoords173[1] > 0.0f && texCoords173[1] < 1.0f;
float sample173 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset173)[3] > epsilon)) * 0.004502f * float(texInBounds173);
vec2 offset174 = vec2(onePixel[0] * 4.0, onePixel[1] * -4.0);
vec2 texCoords174 =  vec2(texture_uv[0], texture_uv[1]) + offset174;
float texAlpha174 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3]);
bool texInBounds174 = (abs(int(texCoords174[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords174[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords174[0] > 0.0f && texCoords174[0] < 1.0f && texCoords174[1] > 0.0f && texCoords174[1] < 1.0f;
float sample174 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset174)[3] > epsilon)) * 0.004548f * float(texInBounds174);
vec2 offset175 = vec2(onePixel[0] * 4.0, onePixel[1] * -3.0);
vec2 texCoords175 =  vec2(texture_uv[0], texture_uv[1]) + offset175;
float texAlpha175 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3]);
bool texInBounds175 = (abs(int(texCoords175[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords175[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords175[0] > 0.0f && texCoords175[0] < 1.0f && texCoords175[1] > 0.0f && texCoords175[1] < 1.0f;
float sample175 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset175)[3] > epsilon)) * 0.004584f * float(texInBounds175);
vec2 offset176 = vec2(onePixel[0] * 4.0, onePixel[1] * -2.0);
vec2 texCoords176 =  vec2(texture_uv[0], texture_uv[1]) + offset176;
float texAlpha176 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3]);
bool texInBounds176 = (abs(int(texCoords176[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords176[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords176[0] > 0.0f && texCoords176[0] < 1.0f && texCoords176[1] > 0.0f && texCoords176[1] < 1.0f;
float sample176 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset176)[3] > epsilon)) * 0.004610f * float(texInBounds176);
vec2 offset177 = vec2(onePixel[0] * 4.0, onePixel[1] * -1.0);
vec2 texCoords177 =  vec2(texture_uv[0], texture_uv[1]) + offset177;
float texAlpha177 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3]);
bool texInBounds177 = (abs(int(texCoords177[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords177[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords177[0] > 0.0f && texCoords177[0] < 1.0f && texCoords177[1] > 0.0f && texCoords177[1] < 1.0f;
float sample177 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset177)[3] > epsilon)) * 0.004626f * float(texInBounds177);
vec2 offset178 = vec2(onePixel[0] * 4.0, onePixel[1] * 0.0);
vec2 texCoords178 =  vec2(texture_uv[0], texture_uv[1]) + offset178;
float texAlpha178 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3]);
bool texInBounds178 = (abs(int(texCoords178[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords178[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords178[0] > 0.0f && texCoords178[0] < 1.0f && texCoords178[1] > 0.0f && texCoords178[1] < 1.0f;
float sample178 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset178)[3] > epsilon)) * 0.004631f * float(texInBounds178);
vec2 offset179 = vec2(onePixel[0] * 4.0, onePixel[1] * 1.0);
vec2 texCoords179 =  vec2(texture_uv[0], texture_uv[1]) + offset179;
float texAlpha179 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3]);
bool texInBounds179 = (abs(int(texCoords179[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords179[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords179[0] > 0.0f && texCoords179[0] < 1.0f && texCoords179[1] > 0.0f && texCoords179[1] < 1.0f;
float sample179 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset179)[3] > epsilon)) * 0.004626f * float(texInBounds179);
vec2 offset180 = vec2(onePixel[0] * 4.0, onePixel[1] * 2.0);
vec2 texCoords180 =  vec2(texture_uv[0], texture_uv[1]) + offset180;
float texAlpha180 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3]);
bool texInBounds180 = (abs(int(texCoords180[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords180[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords180[0] > 0.0f && texCoords180[0] < 1.0f && texCoords180[1] > 0.0f && texCoords180[1] < 1.0f;
float sample180 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset180)[3] > epsilon)) * 0.004610f * float(texInBounds180);
vec2 offset181 = vec2(onePixel[0] * 4.0, onePixel[1] * 3.0);
vec2 texCoords181 =  vec2(texture_uv[0], texture_uv[1]) + offset181;
float texAlpha181 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3]);
bool texInBounds181 = (abs(int(texCoords181[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords181[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords181[0] > 0.0f && texCoords181[0] < 1.0f && texCoords181[1] > 0.0f && texCoords181[1] < 1.0f;
float sample181 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset181)[3] > epsilon)) * 0.004584f * float(texInBounds181);
vec2 offset182 = vec2(onePixel[0] * 4.0, onePixel[1] * 4.0);
vec2 texCoords182 =  vec2(texture_uv[0], texture_uv[1]) + offset182;
float texAlpha182 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3]);
bool texInBounds182 = (abs(int(texCoords182[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords182[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords182[0] > 0.0f && texCoords182[0] < 1.0f && texCoords182[1] > 0.0f && texCoords182[1] < 1.0f;
float sample182 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset182)[3] > epsilon)) * 0.004548f * float(texInBounds182);
vec2 offset183 = vec2(onePixel[0] * 4.0, onePixel[1] * 5.0);
vec2 texCoords183 =  vec2(texture_uv[0], texture_uv[1]) + offset183;
float texAlpha183 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3]);
bool texInBounds183 = (abs(int(texCoords183[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords183[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords183[0] > 0.0f && texCoords183[0] < 1.0f && texCoords183[1] > 0.0f && texCoords183[1] < 1.0f;
float sample183 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset183)[3] > epsilon)) * 0.004502f * float(texInBounds183);
vec2 offset184 = vec2(onePixel[0] * 4.0, onePixel[1] * 6.0);
vec2 texCoords184 =  vec2(texture_uv[0], texture_uv[1]) + offset184;
float texAlpha184 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3]);
bool texInBounds184 = (abs(int(texCoords184[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords184[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords184[0] > 0.0f && texCoords184[0] < 1.0f && texCoords184[1] > 0.0f && texCoords184[1] < 1.0f;
float sample184 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset184)[3] > epsilon)) * 0.004446f * float(texInBounds184);
vec2 offset185 = vec2(onePixel[0] * 5.0, onePixel[1] * -5.0);
vec2 texCoords185 =  vec2(texture_uv[0], texture_uv[1]) + offset185;
float texAlpha185 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3]);
bool texInBounds185 = (abs(int(texCoords185[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords185[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords185[0] > 0.0f && texCoords185[0] < 1.0f && texCoords185[1] > 0.0f && texCoords185[1] < 1.0f;
float sample185 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset185)[3] > epsilon)) * 0.004456f * float(texInBounds185);
vec2 offset186 = vec2(onePixel[0] * 5.0, onePixel[1] * -4.0);
vec2 texCoords186 =  vec2(texture_uv[0], texture_uv[1]) + offset186;
float texAlpha186 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3]);
bool texInBounds186 = (abs(int(texCoords186[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords186[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords186[0] > 0.0f && texCoords186[0] < 1.0f && texCoords186[1] > 0.0f && texCoords186[1] < 1.0f;
float sample186 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset186)[3] > epsilon)) * 0.004502f * float(texInBounds186);
vec2 offset187 = vec2(onePixel[0] * 5.0, onePixel[1] * -3.0);
vec2 texCoords187 =  vec2(texture_uv[0], texture_uv[1]) + offset187;
float texAlpha187 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3]);
bool texInBounds187 = (abs(int(texCoords187[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords187[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords187[0] > 0.0f && texCoords187[0] < 1.0f && texCoords187[1] > 0.0f && texCoords187[1] < 1.0f;
float sample187 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset187)[3] > epsilon)) * 0.004538f * float(texInBounds187);
vec2 offset188 = vec2(onePixel[0] * 5.0, onePixel[1] * -2.0);
vec2 texCoords188 =  vec2(texture_uv[0], texture_uv[1]) + offset188;
float texAlpha188 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3]);
bool texInBounds188 = (abs(int(texCoords188[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords188[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords188[0] > 0.0f && texCoords188[0] < 1.0f && texCoords188[1] > 0.0f && texCoords188[1] < 1.0f;
float sample188 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset188)[3] > epsilon)) * 0.004564f * float(texInBounds188);
vec2 offset189 = vec2(onePixel[0] * 5.0, onePixel[1] * -1.0);
vec2 texCoords189 =  vec2(texture_uv[0], texture_uv[1]) + offset189;
float texAlpha189 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3]);
bool texInBounds189 = (abs(int(texCoords189[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords189[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords189[0] > 0.0f && texCoords189[0] < 1.0f && texCoords189[1] > 0.0f && texCoords189[1] < 1.0f;
float sample189 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset189)[3] > epsilon)) * 0.004579f * float(texInBounds189);
vec2 offset190 = vec2(onePixel[0] * 5.0, onePixel[1] * 0.0);
vec2 texCoords190 =  vec2(texture_uv[0], texture_uv[1]) + offset190;
float texAlpha190 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3]);
bool texInBounds190 = (abs(int(texCoords190[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords190[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords190[0] > 0.0f && texCoords190[0] < 1.0f && texCoords190[1] > 0.0f && texCoords190[1] < 1.0f;
float sample190 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset190)[3] > epsilon)) * 0.004584f * float(texInBounds190);
vec2 offset191 = vec2(onePixel[0] * 5.0, onePixel[1] * 1.0);
vec2 texCoords191 =  vec2(texture_uv[0], texture_uv[1]) + offset191;
float texAlpha191 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3]);
bool texInBounds191 = (abs(int(texCoords191[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords191[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords191[0] > 0.0f && texCoords191[0] < 1.0f && texCoords191[1] > 0.0f && texCoords191[1] < 1.0f;
float sample191 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset191)[3] > epsilon)) * 0.004579f * float(texInBounds191);
vec2 offset192 = vec2(onePixel[0] * 5.0, onePixel[1] * 2.0);
vec2 texCoords192 =  vec2(texture_uv[0], texture_uv[1]) + offset192;
float texAlpha192 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3]);
bool texInBounds192 = (abs(int(texCoords192[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords192[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords192[0] > 0.0f && texCoords192[0] < 1.0f && texCoords192[1] > 0.0f && texCoords192[1] < 1.0f;
float sample192 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset192)[3] > epsilon)) * 0.004564f * float(texInBounds192);
vec2 offset193 = vec2(onePixel[0] * 5.0, onePixel[1] * 3.0);
vec2 texCoords193 =  vec2(texture_uv[0], texture_uv[1]) + offset193;
float texAlpha193 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3]);
bool texInBounds193 = (abs(int(texCoords193[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords193[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords193[0] > 0.0f && texCoords193[0] < 1.0f && texCoords193[1] > 0.0f && texCoords193[1] < 1.0f;
float sample193 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset193)[3] > epsilon)) * 0.004538f * float(texInBounds193);
vec2 offset194 = vec2(onePixel[0] * 5.0, onePixel[1] * 4.0);
vec2 texCoords194 =  vec2(texture_uv[0], texture_uv[1]) + offset194;
float texAlpha194 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3]);
bool texInBounds194 = (abs(int(texCoords194[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords194[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords194[0] > 0.0f && texCoords194[0] < 1.0f && texCoords194[1] > 0.0f && texCoords194[1] < 1.0f;
float sample194 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset194)[3] > epsilon)) * 0.004502f * float(texInBounds194);
vec2 offset195 = vec2(onePixel[0] * 5.0, onePixel[1] * 5.0);
vec2 texCoords195 =  vec2(texture_uv[0], texture_uv[1]) + offset195;
float texAlpha195 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3]);
bool texInBounds195 = (abs(int(texCoords195[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords195[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords195[0] > 0.0f && texCoords195[0] < 1.0f && texCoords195[1] > 0.0f && texCoords195[1] < 1.0f;
float sample195 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset195)[3] > epsilon)) * 0.004456f * float(texInBounds195);
vec2 offset196 = vec2(onePixel[0] * 6.0, onePixel[1] * -4.0);
vec2 texCoords196 =  vec2(texture_uv[0], texture_uv[1]) + offset196;
float texAlpha196 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3]);
bool texInBounds196 = (abs(int(texCoords196[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords196[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords196[0] > 0.0f && texCoords196[0] < 1.0f && texCoords196[1] > 0.0f && texCoords196[1] < 1.0f;
float sample196 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset196)[3] > epsilon)) * 0.004446f * float(texInBounds196);
vec2 offset197 = vec2(onePixel[0] * 6.0, onePixel[1] * -3.0);
vec2 texCoords197 =  vec2(texture_uv[0], texture_uv[1]) + offset197;
float texAlpha197 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3]);
bool texInBounds197 = (abs(int(texCoords197[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords197[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords197[0] > 0.0f && texCoords197[0] < 1.0f && texCoords197[1] > 0.0f && texCoords197[1] < 1.0f;
float sample197 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset197)[3] > epsilon)) * 0.004482f * float(texInBounds197);
vec2 offset198 = vec2(onePixel[0] * 6.0, onePixel[1] * -2.0);
vec2 texCoords198 =  vec2(texture_uv[0], texture_uv[1]) + offset198;
float texAlpha198 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3]);
bool texInBounds198 = (abs(int(texCoords198[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords198[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords198[0] > 0.0f && texCoords198[0] < 1.0f && texCoords198[1] > 0.0f && texCoords198[1] < 1.0f;
float sample198 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset198)[3] > epsilon)) * 0.004507f * float(texInBounds198);
vec2 offset199 = vec2(onePixel[0] * 6.0, onePixel[1] * -1.0);
vec2 texCoords199 =  vec2(texture_uv[0], texture_uv[1]) + offset199;
float texAlpha199 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3]);
bool texInBounds199 = (abs(int(texCoords199[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords199[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords199[0] > 0.0f && texCoords199[0] < 1.0f && texCoords199[1] > 0.0f && texCoords199[1] < 1.0f;
float sample199 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset199)[3] > epsilon)) * 0.004522f * float(texInBounds199);
vec2 offset200 = vec2(onePixel[0] * 6.0, onePixel[1] * 0.0);
vec2 texCoords200 =  vec2(texture_uv[0], texture_uv[1]) + offset200;
float texAlpha200 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3]);
bool texInBounds200 = (abs(int(texCoords200[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords200[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords200[0] > 0.0f && texCoords200[0] < 1.0f && texCoords200[1] > 0.0f && texCoords200[1] < 1.0f;
float sample200 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset200)[3] > epsilon)) * 0.004528f * float(texInBounds200);
vec2 offset201 = vec2(onePixel[0] * 6.0, onePixel[1] * 1.0);
vec2 texCoords201 =  vec2(texture_uv[0], texture_uv[1]) + offset201;
float texAlpha201 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3]);
bool texInBounds201 = (abs(int(texCoords201[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords201[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords201[0] > 0.0f && texCoords201[0] < 1.0f && texCoords201[1] > 0.0f && texCoords201[1] < 1.0f;
float sample201 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset201)[3] > epsilon)) * 0.004522f * float(texInBounds201);
vec2 offset202 = vec2(onePixel[0] * 6.0, onePixel[1] * 2.0);
vec2 texCoords202 =  vec2(texture_uv[0], texture_uv[1]) + offset202;
float texAlpha202 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3]);
bool texInBounds202 = (abs(int(texCoords202[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords202[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords202[0] > 0.0f && texCoords202[0] < 1.0f && texCoords202[1] > 0.0f && texCoords202[1] < 1.0f;
float sample202 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset202)[3] > epsilon)) * 0.004507f * float(texInBounds202);
vec2 offset203 = vec2(onePixel[0] * 6.0, onePixel[1] * 3.0);
vec2 texCoords203 =  vec2(texture_uv[0], texture_uv[1]) + offset203;
float texAlpha203 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3]);
bool texInBounds203 = (abs(int(texCoords203[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords203[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords203[0] > 0.0f && texCoords203[0] < 1.0f && texCoords203[1] > 0.0f && texCoords203[1] < 1.0f;
float sample203 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset203)[3] > epsilon)) * 0.004482f * float(texInBounds203);
vec2 offset204 = vec2(onePixel[0] * 6.0, onePixel[1] * 4.0);
vec2 texCoords204 =  vec2(texture_uv[0], texture_uv[1]) + offset204;
float texAlpha204 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3]);
bool texInBounds204 = (abs(int(texCoords204[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords204[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords204[0] > 0.0f && texCoords204[0] < 1.0f && texCoords204[1] > 0.0f && texCoords204[1] < 1.0f;
float sample204 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset204)[3] > epsilon)) * 0.004446f * float(texInBounds204);
vec2 offset205 = vec2(onePixel[0] * 7.0, onePixel[1] * -3.0);
vec2 texCoords205 =  vec2(texture_uv[0], texture_uv[1]) + offset205;
float texAlpha205 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3]);
bool texInBounds205 = (abs(int(texCoords205[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords205[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords205[0] > 0.0f && texCoords205[0] < 1.0f && texCoords205[1] > 0.0f && texCoords205[1] < 1.0f;
float sample205 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset205)[3] > epsilon)) * 0.004416f * float(texInBounds205);
vec2 offset206 = vec2(onePixel[0] * 7.0, onePixel[1] * -2.0);
vec2 texCoords206 =  vec2(texture_uv[0], texture_uv[1]) + offset206;
float texAlpha206 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3]);
bool texInBounds206 = (abs(int(texCoords206[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords206[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords206[0] > 0.0f && texCoords206[0] < 1.0f && texCoords206[1] > 0.0f && texCoords206[1] < 1.0f;
float sample206 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset206)[3] > epsilon)) * 0.004441f * float(texInBounds206);
vec2 offset207 = vec2(onePixel[0] * 7.0, onePixel[1] * -1.0);
vec2 texCoords207 =  vec2(texture_uv[0], texture_uv[1]) + offset207;
float texAlpha207 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3]);
bool texInBounds207 = (abs(int(texCoords207[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords207[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords207[0] > 0.0f && texCoords207[0] < 1.0f && texCoords207[1] > 0.0f && texCoords207[1] < 1.0f;
float sample207 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset207)[3] > epsilon)) * 0.004456f * float(texInBounds207);
vec2 offset208 = vec2(onePixel[0] * 7.0, onePixel[1] * 0.0);
vec2 texCoords208 =  vec2(texture_uv[0], texture_uv[1]) + offset208;
float texAlpha208 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3]);
bool texInBounds208 = (abs(int(texCoords208[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords208[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords208[0] > 0.0f && texCoords208[0] < 1.0f && texCoords208[1] > 0.0f && texCoords208[1] < 1.0f;
float sample208 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset208)[3] > epsilon)) * 0.004461f * float(texInBounds208);
vec2 offset209 = vec2(onePixel[0] * 7.0, onePixel[1] * 1.0);
vec2 texCoords209 =  vec2(texture_uv[0], texture_uv[1]) + offset209;
float texAlpha209 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3]);
bool texInBounds209 = (abs(int(texCoords209[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords209[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords209[0] > 0.0f && texCoords209[0] < 1.0f && texCoords209[1] > 0.0f && texCoords209[1] < 1.0f;
float sample209 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset209)[3] > epsilon)) * 0.004456f * float(texInBounds209);
vec2 offset210 = vec2(onePixel[0] * 7.0, onePixel[1] * 2.0);
vec2 texCoords210 =  vec2(texture_uv[0], texture_uv[1]) + offset210;
float texAlpha210 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3]);
bool texInBounds210 = (abs(int(texCoords210[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords210[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords210[0] > 0.0f && texCoords210[0] < 1.0f && texCoords210[1] > 0.0f && texCoords210[1] < 1.0f;
float sample210 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset210)[3] > epsilon)) * 0.004441f * float(texInBounds210);
vec2 offset211 = vec2(onePixel[0] * 7.0, onePixel[1] * 3.0);
vec2 texCoords211 =  vec2(texture_uv[0], texture_uv[1]) + offset211;
float texAlpha211 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3]);
bool texInBounds211 = (abs(int(texCoords211[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords211[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords211[0] > 0.0f && texCoords211[0] < 1.0f && texCoords211[1] > 0.0f && texCoords211[1] < 1.0f;
float sample211 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset211)[3] > epsilon)) * 0.004416f * float(texInBounds211);
vec2 offset212 = vec2(onePixel[0] * 8.0, onePixel[1] * -2.0);
vec2 texCoords212 =  vec2(texture_uv[0], texture_uv[1]) + offset212;
float texAlpha212 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3]);
bool texInBounds212 = (abs(int(texCoords212[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords212[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords212[0] > 0.0f && texCoords212[0] < 1.0f && texCoords212[1] > 0.0f && texCoords212[1] < 1.0f;
float sample212 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset212)[3] > epsilon)) * 0.004366f * float(texInBounds212);
vec2 offset213 = vec2(onePixel[0] * 8.0, onePixel[1] * -1.0);
vec2 texCoords213 =  vec2(texture_uv[0], texture_uv[1]) + offset213;
float texAlpha213 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3]);
bool texInBounds213 = (abs(int(texCoords213[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords213[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords213[0] > 0.0f && texCoords213[0] < 1.0f && texCoords213[1] > 0.0f && texCoords213[1] < 1.0f;
float sample213 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset213)[3] > epsilon)) * 0.004381f * float(texInBounds213);
vec2 offset214 = vec2(onePixel[0] * 8.0, onePixel[1] * 0.0);
vec2 texCoords214 =  vec2(texture_uv[0], texture_uv[1]) + offset214;
float texAlpha214 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3]);
bool texInBounds214 = (abs(int(texCoords214[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords214[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords214[0] > 0.0f && texCoords214[0] < 1.0f && texCoords214[1] > 0.0f && texCoords214[1] < 1.0f;
float sample214 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset214)[3] > epsilon)) * 0.004386f * float(texInBounds214);
vec2 offset215 = vec2(onePixel[0] * 8.0, onePixel[1] * 1.0);
vec2 texCoords215 =  vec2(texture_uv[0], texture_uv[1]) + offset215;
float texAlpha215 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3]);
bool texInBounds215 = (abs(int(texCoords215[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords215[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords215[0] > 0.0f && texCoords215[0] < 1.0f && texCoords215[1] > 0.0f && texCoords215[1] < 1.0f;
float sample215 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset215)[3] > epsilon)) * 0.004381f * float(texInBounds215);
vec2 offset216 = vec2(onePixel[0] * 8.0, onePixel[1] * 2.0);
vec2 texCoords216 =  vec2(texture_uv[0], texture_uv[1]) + offset216;
float texAlpha216 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3]);
bool texInBounds216 = (abs(int(texCoords216[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords216[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords216[0] > 0.0f && texCoords216[0] < 1.0f && texCoords216[1] > 0.0f && texCoords216[1] < 1.0f;
float sample216 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset216)[3] > epsilon)) * 0.004366f * float(texInBounds216);
vec2 offset217 = vec2(onePixel[0] * 9.0, onePixel[1] * -1.0);
vec2 texCoords217 =  vec2(texture_uv[0], texture_uv[1]) + offset217;
float texAlpha217 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3]);
bool texInBounds217 = (abs(int(texCoords217[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords217[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords217[0] > 0.0f && texCoords217[0] < 1.0f && texCoords217[1] > 0.0f && texCoords217[1] < 1.0f;
float sample217 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset217)[3] > epsilon)) * 0.004298f * float(texInBounds217);
vec2 offset218 = vec2(onePixel[0] * 9.0, onePixel[1] * 0.0);
vec2 texCoords218 =  vec2(texture_uv[0], texture_uv[1]) + offset218;
float texAlpha218 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3]);
bool texInBounds218 = (abs(int(texCoords218[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords218[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords218[0] > 0.0f && texCoords218[0] < 1.0f && texCoords218[1] > 0.0f && texCoords218[1] < 1.0f;
float sample218 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset218)[3] > epsilon)) * 0.004302f * float(texInBounds218);
vec2 offset219 = vec2(onePixel[0] * 9.0, onePixel[1] * 1.0);
vec2 texCoords219 =  vec2(texture_uv[0], texture_uv[1]) + offset219;
float texAlpha219 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3]);
bool texInBounds219 = (abs(int(texCoords219[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords219[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords219[0] > 0.0f && texCoords219[0] < 1.0f && texCoords219[1] > 0.0f && texCoords219[1] < 1.0f;
float sample219 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset219)[3] > epsilon)) * 0.004298f * float(texInBounds219);
vec2 offset220 = vec2(onePixel[0] * 10.0, onePixel[1] * 0.0);
vec2 texCoords220 =  vec2(texture_uv[0], texture_uv[1]) + offset220;
float texAlpha220 = float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3]);
bool texInBounds220 = (abs(int(texCoords220[0] / quadSize_float[0]) - quad_index[0]) < epsilon) && (abs(int(texCoords220[1] / quadSize_float[1]) - quad_index[1]) < epsilon) && texCoords220[0] > 0.0f && texCoords220[0] < 1.0f && texCoords220[1] > 0.0f && texCoords220[1] < 1.0f;
float sample220 = min(1.0, fwidth(float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3])) + float(texture(obj_texture, vec2(texture_uv[0], texture_uv[1]) + offset220)[3] > epsilon)) * 0.004211f * float(texInBounds220);
float glowBoundaries = sample0 + sample1 + sample2 + sample3 + sample4 + sample5 + sample6 + sample7 + sample8 + sample9 + sample10 + sample11 + sample12 + sample13 + sample14 + sample15 + sample16 + sample17 + sample18 + sample19 + sample20 + sample21 + sample22 + sample23 + sample24 + sample25 + sample26 + sample27 + sample28 + sample29 + sample30 + sample31 + sample32 + sample33 + sample34 + sample35 + sample36 + sample37 + sample38 + sample39 + sample40 + sample41 + sample42 + sample43 + sample44 + sample45 + sample46 + sample47 + sample48 + sample49 + sample50 + sample51 + sample52 + sample53 + sample54 + sample55 + sample56 + sample57 + sample58 + sample59 + sample60 + sample61 + sample62 + sample63 + sample64 + sample65 + sample66 + sample67 + sample68 + sample69 + sample70 + sample71 + sample72 + sample73 + sample74 + sample75 + sample76 + sample77 + sample78 + sample79 + sample80 + sample81 + sample82 + sample83 + sample84 + sample85 + sample86 + sample87 + sample88 + sample89 + sample90 + sample91 + sample92 + sample93 + sample94 + sample95 + sample96 + sample97 + sample98 + sample99 + sample100 + sample101 + sample102 + sample103 + sample104 + sample105 + sample106 + sample107 + sample108 + sample109 + sample110 + sample111 + sample112 + sample113 + sample114 + sample115 + sample116 + sample117 + sample118 + sample119 + sample120 + sample121 + sample122 + sample123 + sample124 + sample125 + sample126 + sample127 + sample128 + sample129 + sample130 + sample131 + sample132 + sample133 + sample134 + sample135 + sample136 + sample137 + sample138 + sample139 + sample140 + sample141 + sample142 + sample143 + sample144 + sample145 + sample146 + sample147 + sample148 + sample149 + sample150 + sample151 + sample152 + sample153 + sample154 + sample155 + sample156 + sample157 + sample158 + sample159 + sample160 + sample161 + sample162 + sample163 + sample164 + sample165 + sample166 + sample167 + sample168 + sample169 + sample170 + sample171 + sample172 + sample173 + sample174 + sample175 + sample176 + sample177 + sample178 + sample179 + sample180 + sample181 + sample182 + sample183 + sample184 + sample185 + sample186 + sample187 + sample188 + sample189 + sample190 + sample191 + sample192 + sample193 + sample194 + sample195 + sample196 + sample197 + sample198 + sample199 + sample200 + sample201 + sample202 + sample203 + sample204 + sample205 + sample206 + sample207 + sample208 + sample209 + sample210 + sample211 + sample212 + sample213 + sample214 + sample215 + sample216 + sample217 + sample218 + sample219 + sample220;

return min(1.0, 2.0 * glowBoundaries);
}

void main()
{
	float epsilon = 0.0001;
	vec2 texture_size = textureSize(ourTexture, 0);
	float glowValue_10 = getGlowBoundaries_10(epsilon, TexCoord, ourTexture, texture_size);
	float glowValue = glowValue_10;
	FragColor = vec4(glowValue, glowValue, glowValue, glowValue);
}